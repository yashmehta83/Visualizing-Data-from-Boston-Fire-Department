<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0505.1445                               -->
<workbook source-build='10.2.2 (10200.17.0505.1445)' source-platform='win' version='10.2' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data_all_hack' inline='true' name='federated.1hkvfb11qum2nx19x7d2y0oext2h' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_all_hack' name='textscan.1br2zkc0xge6331fd4mw41418yhl'>
            <connection class='textscan' directory='C:/Users/yasha/Documents/R Working Directory' filename='data_all_hack.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1br2zkc0xge6331fd4mw41418yhl' name='data_all_hack.csv' table='[data_all_hack#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Incident.Number' ordinal='0' />
            <column datatype='integer' name='Exposure.Number' ordinal='1' />
            <column datatype='date' name='Alarm.Date' ordinal='2' />
            <column datatype='datetime' name='Alarm.Time' ordinal='3' />
            <column datatype='integer' name='Incident.Type' ordinal='4' />
            <column datatype='string' name='Incident.Description' ordinal='5' />
            <column datatype='real' name='Estimated.Property.Loss' ordinal='6' />
            <column datatype='real' name='Estimated.Content.Loss' ordinal='7' />
            <column datatype='integer' name='District' ordinal='8' />
            <column datatype='string' name='City.Section' ordinal='9' />
            <column datatype='string' name='Neighborhood' ordinal='10' />
            <column datatype='integer' name='Zip' ordinal='11' />
            <column datatype='integer' name='Property.Use' ordinal='12' />
            <column datatype='string' name='Property.Description' ordinal='13' />
            <column datatype='integer' name='Street.Number' ordinal='14' />
            <column datatype='string' name='Street.Prefix' ordinal='15' />
            <column datatype='string' name='Street.Name' ordinal='16' />
            <column datatype='string' name='Street.Type' ordinal='17' />
            <column datatype='string' name='Street.Suffix' ordinal='18' />
            <column datatype='string' name='Address.2' ordinal='19' />
            <column datatype='string' name='xStreet.Prefix' ordinal='20' />
            <column datatype='string' name='xStreet.Name' ordinal='21' />
            <column datatype='string' name='xStreet.Type' ordinal='22' />
            <column datatype='string' name='xStreet.Suffix' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Incident.Number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Incident.Number]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Incident.Number</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exposure.Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Exposure.Number]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Exposure.Number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alarm.Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Alarm.Date]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Alarm.Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Alarm.Time</remote-name>
            <remote-type>134</remote-type>
            <local-name>[Alarm.Time]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Alarm.Time</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Hour</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;duration&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident.Type</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Incident.Type]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Incident.Type</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incident.Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Incident.Description]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Incident.Description</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated.Property.Loss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated.Property.Loss]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Estimated.Property.Loss</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estimated.Content.Loss</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Estimated.Content.Loss]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Estimated.Content.Loss</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>District</remote-name>
            <remote-type>20</remote-type>
            <local-name>[District]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>District</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City.Section</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City.Section]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>City.Section</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Neighborhood</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Neighborhood]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Neighborhood</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Zip</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Zip]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Zip</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property.Use</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Property.Use]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Property.Use</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Property.Description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Property.Description]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Property.Description</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street.Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Street.Number]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Street.Number</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street.Prefix</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Street.Prefix]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Street.Prefix</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Street.Name]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Street.Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street.Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Street.Type]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Street.Type</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Street.Suffix</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Street.Suffix]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Street.Suffix</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Address.2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Address.2]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>Address.2</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xStreet.Prefix</remote-name>
            <remote-type>129</remote-type>
            <local-name>[xStreet.Prefix]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>xStreet.Prefix</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xStreet.Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[xStreet.Name]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>xStreet.Name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xStreet.Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[xStreet.Type]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>xStreet.Type</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>xStreet.Suffix</remote-name>
            <remote-type>129</remote-type>
            <local-name>[xStreet.Suffix]</local-name>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias>xStreet.Suffix</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data_all_hack.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' name='[Alarm.Date]' role='dimension' type='ordinal' />
      <column aggregation='Hour' datatype='datetime' name='[Alarm.Time]' role='dimension' type='ordinal' />
      <column caption='Incident Groups' datatype='string' name='[Calculation_218424630881169411]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Incident.Description]' />
      </column>
      <column datatype='string' name='[City.Section]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[District]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Estimated.Property.Loss]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Exposure.Number]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Incident Groups (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Calculation_218424630881169411]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Chemical Hazard&quot;'>
            <value>&quot;Biological hazard investigation&quot;</value>
            <value>&quot;Biological hazard, confirmed or suspected         &quot;</value>
            <value>&quot;Chemical hazard (no spill or leak)&quot;</value>
            <value>&quot;Chemical reaction rupture of process vessel&quot;</value>
            <value>&quot;Chemical spill or leak&quot;</value>
            <value>&quot;Hazardous condition, Other                        &quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Electrical or CO or Other Household Fire&quot;'>
            <value>&quot;Arcing, shorted electrical equipment              &quot;</value>
            <value>&quot;Camper or recreational vehicle (RV) fire&quot;</value>
            <value>&quot;Carbon monoxide detector activation, no CO        &quot;</value>
            <value>&quot;Carbon monoxide incident&quot;</value>
            <value>&quot;Chimney or flue fire, confined to chimney or flue &quot;</value>
            <value>&quot;Combustible/flammable gas/liquid condition, other &quot;</value>
            <value>&quot;Cooking fire, confined to container               &quot;</value>
            <value>&quot;Defective elevator, no occupants                  &quot;</value>
            <value>&quot;Electrical  wiring/equipment problem, Other       &quot;</value>
            <value>&quot;Excessive heat, scorch burns with no ignition     &quot;</value>
            <value>&quot;Fire in mobile home used as fixed residence&quot;</value>
            <value>&quot;Fire in mobile prop used as a fixed struc, Other  &quot;</value>
            <value>&quot;Fire in motor home, camper, recreational vehicle  &quot;</value>
            <value>&quot;Fire in portable building, fixed location         &quot;</value>
            <value>&quot;Fuel burner/boiler malfunction, fire confined     &quot;</value>
            <value>&quot;Mobile property (vehicle) fire, Other             &quot;</value>
            <value>&quot;Oil or other combustible liquid spill&quot;</value>
            <value>&quot;Outside equipment fire&quot;</value>
            <value>&quot;Outside gas or vapor combustion explosion&quot;</value>
            <value>&quot;Outside mailbox fire&quot;</value>
            <value>&quot;Overheated motor&quot;</value>
            <value>&quot;Power line down&quot;</value>
            <value>&quot;Radiation leak, radioactive material              &quot;</value>
            <value>&quot;Refrigeration leak&quot;</value>
            <value>&quot;Smoke from barbecue, tar kettle                   &quot;</value>
            <value>&quot;Toxic condition, Other                            &quot;</value>
          </bin>
          <bin default-name='false' value='&quot;False Alarm&quot;'>
            <value>&quot;Alarm system sounded due to malfunction&quot;</value>
            <value>&quot;Biological hazard, malicious false report         &quot;</value>
            <value>&quot;Central station, malicious false alarm            &quot;</value>
            <value>&quot;CO detector activation due to malfunction&quot;</value>
            <value>&quot;Direct tie to FD, malicious false alarm           &quot;</value>
            <value>&quot;Extinguishing system activation due to malfunction&quot;</value>
            <value>&quot;False alarm or false call, Other                  &quot;</value>
            <value>&quot;Heat detector activation due to malfunction&quot;</value>
            <value>&quot;Local alarm system, malicious false alarm         &quot;</value>
            <value>&quot;Malicious, mischievous false call, Other          &quot;</value>
            <value>&quot;Municipal alarm system, malicious false alarm     &quot;</value>
            <value>&quot;Person in distress, Other                         &quot;</value>
            <value>&quot;Service Call, other                               &quot;</value>
            <value>&quot;Steam, Other gas mistaken for smoke, Other        &quot;</value>
            <value>&quot;Steam, vapor, fog or dust thought to be smoke     &quot;</value>
            <value>&quot;System malfunction, Other                         &quot;</value>
            <value>&quot;Telephone, malicious false alarm                  &quot;</value>
            <value>&quot;Unintentional transmission of alarm, Other        &quot;</value>
            <value>&quot;Vicinity alarm (incident in other location)&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fire By Legal or Illegal Burning&quot;'>
            <value>&quot;Attempt to burn&quot;</value>
            <value>&quot;Attempted burning, illegal action, Other          &quot;</value>
            <value>&quot;Authorized controlled burning&quot;</value>
            <value>&quot;Brush or brush-and-grass mixture fire&quot;</value>
            <value>&quot;Cultivated grain or crop fire&quot;</value>
            <value>&quot;Cultivated orchard or vineyard fire&quot;</value>
            <value>&quot;Cultivated vegetation, crop fire, Other           &quot;</value>
            <value>&quot;Outside rubbish fire, Other                       &quot;</value>
            <value>&quot;Outside rubbish, trash or waste fire              &quot;</value>
            <value>&quot;Smoke detector activation due to malfunction&quot;</value>
            <value>&quot;Smoke or odor removal&quot;</value>
            <value>&quot;Smoke scare, odor of smoke                        &quot;</value>
            <value>&quot;Special outside fire, Other                       &quot;</value>
            <value>&quot;Threat to burn&quot;</value>
            <value>&quot;Trash or rubbish fire, contained                  &quot;</value>
            <value>&quot;Unauthorized burning&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Fire by natural disaster, Water evacuation and Wind Storm&quot;'>
            <value>&quot;Air or gas rupture of pressure or process vessel&quot;</value>
            <value>&quot;Flood assessment&quot;</value>
            <value>&quot;Forest, woods or wildland fire                    &quot;</value>
            <value>&quot;Gas leak (natural gas or LPG)&quot;</value>
            <value>&quot;Severe weather or natural disaster standby&quot;</value>
            <value>&quot;Severe weather or natural disaster, Other         &quot;</value>
            <value>&quot;Water evacuation&quot;</value>
            <value>&quot;Water or steam leak&quot;</value>
            <value>&quot;Water problem, Other                              &quot;</value>
            <value>&quot;Water vehicle fire&quot;</value>
            <value>&quot;Wind storm, tornado/hurricane assessment          &quot;</value>
            <value>&quot;Wrong location&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;No Fire&quot;'>
            <value>&quot;Alarm system activation, no fire - unintentional  &quot;</value>
            <value>&quot;Blasting agent explosion (no fire)&quot;</value>
            <value>&quot;Bomb scare - no bomb&quot;</value>
            <value>&quot;Detector activation, no fire - unintentional      &quot;</value>
            <value>&quot;Explosion (no fire), Other                        &quot;</value>
            <value>&quot;Fireworks explosion (no fire)&quot;</value>
            <value>&quot;Lightning strike (no fire)&quot;</value>
            <value>&quot;Munitions or bomb explosion (no fire)&quot;</value>
            <value>&quot;Smoke detector activation, no fire - unintentional&quot;</value>
            <value>&quot;Sprinkler activation, no fire - unintentional     &quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Overpreassure in Boilers&quot;'>
            <value>&quot;Overpressure rupture from air or gas, Other       &quot;</value>
            <value>&quot;Overpressure rupture from steam, Other            &quot;</value>
            <value>&quot;Overpressure rupture of air or gas pipe/pipeline&quot;</value>
            <value>&quot;Overpressure rupture of boiler from air or gas&quot;</value>
            <value>&quot;Overpressure rupture of steam boiler&quot;</value>
            <value>&quot;Overpressure rupture of steam pipe or pipeline&quot;</value>
            <value>&quot;Overpressure rupture, explosion, overheat other   &quot;</value>
            <value>&quot;Steam rupture of pressure or process vessel&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Incident.Description]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' name='[Incident.Type]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Street.Number]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[Zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[District]' derivation='None' name='[none:District:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Incident.Description]' derivation='None' name='[none:Incident.Description:nk]' pivot='key' type='nominal' />
      <column-instance column='[Estimated.Property.Loss]' derivation='Sum' name='[sum:Estimated.Property.Loss:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Alarm.Date]' derivation='Year' name='[yr:Alarm.Date:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.668702' measure-ordering='alphabetic' measure-percentage='0.331298' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:District:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>6</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>11</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>8</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>12</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>7</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>9</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Estimated.Property.Loss:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Number of Records:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Incident.Description:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Animal problem, Other                             &quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carbon monoxide incident&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dispatched &amp; cancelled en route&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Garbage dump or sanitary landfill fire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oil or other combustible liquid spill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prescribed fire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sprinkler activation, no fire - unintentional     &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Blasting agent explosion (no fire)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cover assignment, standby, moveup                 &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fire in portable building, fixed location         &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lock-out&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Overpressure rupture of boiler from air or gas&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Smoke detector activation due to malfunction&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Water evacuation&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aircraft standby&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Building fire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cultivated vegetation, crop fire, Other           &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;FIU activity  (not covered by other inc types)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Munitions or bomb explosion (no fire)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Passenger vehicle fire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Smoke scare, odor of smoke                        &quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wind storm, tornado/hurricane assessment          &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Assist police or other governmental agency&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chemical spill or leak&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Explosion (no fire), Other                        &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grass fire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Outside rubbish fire, Other                       &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Radioactive condition, Other                      &quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;System malfunction, Other                         &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Animal rescue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central station, malicious false alarm            &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dumpster or other outside trash receptacle fire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gas leak (natural gas or LPG)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Outside equipment fire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Public service&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Steam rupture of pressure or process vessel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alarm system activation, no fire - unintentional  &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Building or structure weakened or collapsed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Defective elevator, no occupants                  &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flood assessment&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Natural vegetation fire, Other                    &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Person in distress, Other                         &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Special outside fire, Other                       &quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wrong location&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Biological hazard, confirmed or suspected         &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Construction or demolition landfill fire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fire in mobile prop used as a fixed struc, Other  &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lightning strike (no fire)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Overpressure rupture from steam, Other            &quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Severe weather or natural disaster standby&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unintentional transmission of alarm, Other        &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Accident, potential accident, Other               &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bomb scare - no bomb&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cultivated grain or crop fire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fire, Other                                       &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malicious, mischievous false call, Other          &quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Overpressure rupture of steam boiler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Smoke detector activation, no fire - unintentional&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Water or steam leak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;BFD Drill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Combustible/flammable gas/liquid condition, other &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;False alarm or false call, Other                  &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heat from short circuit (wiring), defective/worn  &quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overheated motor&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Road freight or transport vehicle fire&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trash or rubbish fire, contained                  &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alarm system sounded due to malfunction&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Camper or recreational vehicle (RV) fire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Detector activation, no fire - unintentional      &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Forest, woods or wildland fire                    &quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;No Incident found on arrival at dispatch address&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Police matter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Special type of incident, Other                   &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Attempt to burn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chimney or flue fire, confined to chimney or flue &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Explosive, bomb removal (for bomb scare, use 721) &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hazardous condition, Other                        &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Outside rubbish, trash or waste fire              &quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rail vehicle fire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Telephone, malicious false alarm                  &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Attempted burning, illegal action, Other          &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Citizen complaint&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Extinguishing system activation&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;HazMat release investigation w/no HazMat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Outside stationary compactor/compacted trash fire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Refrigeration leak&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Threat to burn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Biological hazard investigation&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Commercial Compactor fire, confined to rubbish    &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fire in mobile home used as fixed residence&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Incinerator overload or malfunction, fire confined&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Overpressure rupture from air or gas, Other       &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Service Call, other                               &quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Unauthorized burning&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Biological hazard, malicious false report         &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cooking fire, confined to container               &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fire in motor home, camper, recreational vehicle  &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Local alarm system, malicious false alarm         &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Overpressure rupture of air or gas pipe/pipeline&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Severe weather or natural disaster, Other         &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vicinity alarm (incident in other location)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arcing, shorted electrical equipment              &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chemical hazard (no spill or leak)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Electrical  wiring/equipment problem, Other       &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gasoline or other flammable liquid spill&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Outside gas or vapor combustion explosion&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Public service assistance, Other                  &quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steam, Other gas mistaken for smoke, Other        &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Animal problem&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carbon monoxide detector activation, no CO        &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Direct tie to FD, malicious false alarm           &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fuel burner/boiler malfunction, fire confined     &quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Off-road vehicle or heavy equipment fire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Power line down&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sprinkler activation due to malfunction&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Air or gas rupture of pressure or process vessel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Breakdown of light ballast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cultivated orchard or vineyard fire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fires in structure other than in a building&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mobile property (vehicle) fire, Other             &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Overpressure rupture of steam pipe or pipeline&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Smoke from barbecue, tar kettle                   &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Water problem, Other                              &quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Authorized controlled burning&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CO detector activation due to malfunction&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Extinguishing system activation due to malfunction&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Heat detector activation due to malfunction&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Outside storage fire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ring or jewelry removal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toxic condition, Other                            &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Assist invalid&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chemical reaction rupture of process vessel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Excessive heat, scorch burns with no ignition     &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Good intent call, Other                           &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Outside mailbox fire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Radiation leak, radioactive material              &quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steam, vapor, fog or dust thought to be smoke     &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aircraft fire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brush or brush-and-grass mixture fire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cultivated trees or nursery stock fire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fireworks explosion (no fire)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Municipal alarm system, malicious false alarm     &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Overpressure rupture, explosion, overheat other   &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Smoke or odor removal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Water vehicle fire&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Alarm.Date:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2015</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2017</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2013</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2016</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Incident Groups (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;False Alarm&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fire By Legal or Illegal Burning&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Electrical or CO or Other Household Fire&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overpreassure in Boilers&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chemical Hazard&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Fire by natural disaster, Water evacuation and Wind Storm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;No Fire&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='# Incidents and Property Loss in Different Areas'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_all_hack' name='federated.1hkvfb11qum2nx19x7d2y0oext2h' />
          </datasources>
          <datasource-dependencies datasource='federated.1hkvfb11qum2nx19x7d2y0oext2h'>
            <column datatype='date' name='[Alarm.Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Estimated.Property.Loss]' role='measure' type='quantitative' />
            <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Neighborhood]' derivation='None' name='[none:Neighborhood:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estimated.Property.Loss]' derivation='Sum' name='[sum:Estimated.Property.Loss:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alarm.Date]' derivation='Year-Trunc' name='[tyr:Alarm.Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alarm.Date]' derivation='Year' name='[yr:Alarm.Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Neighborhood:nk]'>
            <groupfilter from='&quot;Allston-Brighton&quot;' function='range' level='[none:Neighborhood:nk]' to='&quot;West Roxbury&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]'>
            <groupfilter from='2015' function='range' level='[yr:Alarm.Date:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Neighborhood:nk]</column>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Estimated.Property.Loss:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Neighborhood:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[tyr:Alarm.Date:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='2' y-axis-name='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[tyr:Alarm.Date:qk]' />
            </encodings>
          </pane>
          <pane id='3' y-axis-name='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Estimated.Property.Loss:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Number of Records:qk] + [federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Estimated.Property.Loss:qk])</rows>
        <cols>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Neighborhood:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Boston Area Fire Incidents by Zip Codes'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_all_hack' name='federated.1hkvfb11qum2nx19x7d2y0oext2h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hkvfb11qum2nx19x7d2y0oext2h'>
            <column datatype='integer' default-format='*00000' name='[Zip]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column-instance column='[Zip]' derivation='Count' name='[cnt:Zip:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Zip]' derivation='None' name='[none:Zip:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Zip:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='1803' function='range' level='[none:Zip:ok]' to='2145' />
              <groupfilter from='2148' function='range' level='[none:Zip:ok]' to='2176' />
              <groupfilter from='2180' function='range' level='[none:Zip:ok]' to='2492' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Zip:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Longitude (generated)]' field-type='quantitative' max='-7851229.6140846889' min='-7950150.1085903216' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Latitude (generated)]' field-type='quantitative' max='5241788.0058491332' min='5183300.5877862386' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:Zip:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Zip:ok]' />
              <color column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:Zip:qk]' />
              <geometry column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Latitude (generated)]</rows>
        <cols>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Zip: </run>
              <run bold='true'>&lt;[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Zip:ok]&gt;</run>
              <run fontcolor='#787878'>&#10;Count of Zip: </run>
              <run bold='true'>&lt;[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:Zip:qk]&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Longitude (generated)]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Latitude (generated)]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:Zip:qk]</field>
                      <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Zip:ok]</field>
                      <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Geometry (generated)]</field>
                      <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Latitude (generated)]</field>
                      <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Longitude (generated)]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>9858</value>
                    <value>2124</value>
                    <value>&quot;POLYGON((-71.0714 42.3034,-71.061 42.2974,-71.0626 42.2918,-71.0573 42.2931,-71.0529 42.2842,-71.0494 42.2851,-71.0465 42.2804,-71.0429 42.2852,-71.0402 42.2846,-71.0439 42.2772,-71.0502 42.2786,-71.0561 42.2763,-71.0545 42.272,-71.0616 42.2686,-71.0644 42.2706,-71.0671 42.2716,-71.0681 42.2711,-71.0722 42.275,-71.0776 42.2774,-71.0875 42.2836,-71.0928 42.285,-71.0949 42.2898,-71.0947 42.293,-71.0916 42.2969,-71.0868 42.2988,-71.0844 42.2959,-71.0773 42.297,-71.0735 42.2994,-71.0714 42.3034))&quot;</value>
                    <value>42.287500000000001</value>
                    <value>-71.074200000000005</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='516' y='-82' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Causes for Calls'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_all_hack' name='federated.1hkvfb11qum2nx19x7d2y0oext2h' />
          </datasources>
          <datasource-dependencies datasource='federated.1hkvfb11qum2nx19x7d2y0oext2h'>
            <column caption='Incident Groups' datatype='string' name='[Calculation_218424630881169411]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Incident.Description]' />
            </column>
            <column datatype='string' name='[Incident Groups (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_218424630881169411]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Chemical Hazard&quot;'>
                  <value>&quot;Biological hazard investigation&quot;</value>
                  <value>&quot;Biological hazard, confirmed or suspected         &quot;</value>
                  <value>&quot;Chemical hazard (no spill or leak)&quot;</value>
                  <value>&quot;Chemical reaction rupture of process vessel&quot;</value>
                  <value>&quot;Chemical spill or leak&quot;</value>
                  <value>&quot;Hazardous condition, Other                        &quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Electrical or CO or Other Household Fire&quot;'>
                  <value>&quot;Arcing, shorted electrical equipment              &quot;</value>
                  <value>&quot;Camper or recreational vehicle (RV) fire&quot;</value>
                  <value>&quot;Carbon monoxide detector activation, no CO        &quot;</value>
                  <value>&quot;Carbon monoxide incident&quot;</value>
                  <value>&quot;Chimney or flue fire, confined to chimney or flue &quot;</value>
                  <value>&quot;Combustible/flammable gas/liquid condition, other &quot;</value>
                  <value>&quot;Cooking fire, confined to container               &quot;</value>
                  <value>&quot;Defective elevator, no occupants                  &quot;</value>
                  <value>&quot;Electrical  wiring/equipment problem, Other       &quot;</value>
                  <value>&quot;Excessive heat, scorch burns with no ignition     &quot;</value>
                  <value>&quot;Fire in mobile home used as fixed residence&quot;</value>
                  <value>&quot;Fire in mobile prop used as a fixed struc, Other  &quot;</value>
                  <value>&quot;Fire in motor home, camper, recreational vehicle  &quot;</value>
                  <value>&quot;Fire in portable building, fixed location         &quot;</value>
                  <value>&quot;Fuel burner/boiler malfunction, fire confined     &quot;</value>
                  <value>&quot;Mobile property (vehicle) fire, Other             &quot;</value>
                  <value>&quot;Oil or other combustible liquid spill&quot;</value>
                  <value>&quot;Outside equipment fire&quot;</value>
                  <value>&quot;Outside gas or vapor combustion explosion&quot;</value>
                  <value>&quot;Outside mailbox fire&quot;</value>
                  <value>&quot;Overheated motor&quot;</value>
                  <value>&quot;Power line down&quot;</value>
                  <value>&quot;Radiation leak, radioactive material              &quot;</value>
                  <value>&quot;Refrigeration leak&quot;</value>
                  <value>&quot;Smoke from barbecue, tar kettle                   &quot;</value>
                  <value>&quot;Toxic condition, Other                            &quot;</value>
                </bin>
                <bin default-name='false' value='&quot;False Alarm&quot;'>
                  <value>&quot;Alarm system sounded due to malfunction&quot;</value>
                  <value>&quot;Biological hazard, malicious false report         &quot;</value>
                  <value>&quot;Central station, malicious false alarm            &quot;</value>
                  <value>&quot;CO detector activation due to malfunction&quot;</value>
                  <value>&quot;Direct tie to FD, malicious false alarm           &quot;</value>
                  <value>&quot;Extinguishing system activation due to malfunction&quot;</value>
                  <value>&quot;False alarm or false call, Other                  &quot;</value>
                  <value>&quot;Heat detector activation due to malfunction&quot;</value>
                  <value>&quot;Local alarm system, malicious false alarm         &quot;</value>
                  <value>&quot;Malicious, mischievous false call, Other          &quot;</value>
                  <value>&quot;Municipal alarm system, malicious false alarm     &quot;</value>
                  <value>&quot;Person in distress, Other                         &quot;</value>
                  <value>&quot;Service Call, other                               &quot;</value>
                  <value>&quot;Steam, Other gas mistaken for smoke, Other        &quot;</value>
                  <value>&quot;Steam, vapor, fog or dust thought to be smoke     &quot;</value>
                  <value>&quot;System malfunction, Other                         &quot;</value>
                  <value>&quot;Telephone, malicious false alarm                  &quot;</value>
                  <value>&quot;Unintentional transmission of alarm, Other        &quot;</value>
                  <value>&quot;Vicinity alarm (incident in other location)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fire By Legal or Illegal Burning&quot;'>
                  <value>&quot;Attempt to burn&quot;</value>
                  <value>&quot;Attempted burning, illegal action, Other          &quot;</value>
                  <value>&quot;Authorized controlled burning&quot;</value>
                  <value>&quot;Brush or brush-and-grass mixture fire&quot;</value>
                  <value>&quot;Cultivated grain or crop fire&quot;</value>
                  <value>&quot;Cultivated orchard or vineyard fire&quot;</value>
                  <value>&quot;Cultivated vegetation, crop fire, Other           &quot;</value>
                  <value>&quot;Outside rubbish fire, Other                       &quot;</value>
                  <value>&quot;Outside rubbish, trash or waste fire              &quot;</value>
                  <value>&quot;Smoke detector activation due to malfunction&quot;</value>
                  <value>&quot;Smoke or odor removal&quot;</value>
                  <value>&quot;Smoke scare, odor of smoke                        &quot;</value>
                  <value>&quot;Special outside fire, Other                       &quot;</value>
                  <value>&quot;Threat to burn&quot;</value>
                  <value>&quot;Trash or rubbish fire, contained                  &quot;</value>
                  <value>&quot;Unauthorized burning&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fire by natural disaster, Water evacuation and Wind Storm&quot;'>
                  <value>&quot;Air or gas rupture of pressure or process vessel&quot;</value>
                  <value>&quot;Flood assessment&quot;</value>
                  <value>&quot;Forest, woods or wildland fire                    &quot;</value>
                  <value>&quot;Gas leak (natural gas or LPG)&quot;</value>
                  <value>&quot;Severe weather or natural disaster standby&quot;</value>
                  <value>&quot;Severe weather or natural disaster, Other         &quot;</value>
                  <value>&quot;Water evacuation&quot;</value>
                  <value>&quot;Water or steam leak&quot;</value>
                  <value>&quot;Water problem, Other                              &quot;</value>
                  <value>&quot;Water vehicle fire&quot;</value>
                  <value>&quot;Wind storm, tornado/hurricane assessment          &quot;</value>
                  <value>&quot;Wrong location&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;No Fire&quot;'>
                  <value>&quot;Alarm system activation, no fire - unintentional  &quot;</value>
                  <value>&quot;Blasting agent explosion (no fire)&quot;</value>
                  <value>&quot;Bomb scare - no bomb&quot;</value>
                  <value>&quot;Detector activation, no fire - unintentional      &quot;</value>
                  <value>&quot;Explosion (no fire), Other                        &quot;</value>
                  <value>&quot;Fireworks explosion (no fire)&quot;</value>
                  <value>&quot;Lightning strike (no fire)&quot;</value>
                  <value>&quot;Munitions or bomb explosion (no fire)&quot;</value>
                  <value>&quot;Smoke detector activation, no fire - unintentional&quot;</value>
                  <value>&quot;Sprinkler activation, no fire - unintentional     &quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Overpreassure in Boilers&quot;'>
                  <value>&quot;Overpressure rupture from air or gas, Other       &quot;</value>
                  <value>&quot;Overpressure rupture from steam, Other            &quot;</value>
                  <value>&quot;Overpressure rupture of air or gas pipe/pipeline&quot;</value>
                  <value>&quot;Overpressure rupture of boiler from air or gas&quot;</value>
                  <value>&quot;Overpressure rupture of steam boiler&quot;</value>
                  <value>&quot;Overpressure rupture of steam pipe or pipeline&quot;</value>
                  <value>&quot;Overpressure rupture, explosion, overheat other   &quot;</value>
                  <value>&quot;Steam rupture of pressure or process vessel&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Incident.Description]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Incident Groups (group)]' direction='DESC' using='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:Number of Records:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Incident Groups (group)]' />
              <text column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Incident Groups (group)]</rows>
        <cols>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Property Types with most Fire Calls'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_all_hack' name='federated.1hkvfb11qum2nx19x7d2y0oext2h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1hkvfb11qum2nx19x7d2y0oext2h'>
            <column datatype='date' name='[Alarm.Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Property.Description]' role='dimension' type='nominal' />
            <column-instance column='[Property.Description]' derivation='None' name='[none:Property.Description:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alarm.Date]' derivation='Year' name='[yr:Alarm.Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Property.Description:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;1 or 2 family dwelling&quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Boarding/rooming house, residential hotels        &quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Business office&quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Dormitory-type residence, other                   &quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Food and beverage sales, grocery store            &quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Hospital - medical or psychiatric&quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Hotel/motel, commercial                           &quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Mercantile, business, Other                       &quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Multifamily dwelling&quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Outside or special property, Other                &quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Property Use, Other                               &quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Rapid transit station&quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Residential street, road or residential driveway  &quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Residential, Other                                &quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Restaurant or cafeteria&quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Street or road in commercial area&quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Street, Other                                     &quot;' />
              <groupfilter function='member' level='[none:Property.Description:nk]' member='&quot;Vehicle parking area&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Property.Description:nk]' direction='DESC' using='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Number of Records:qk]' />
          <filter class='quantitative' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Number of Records:qk]' included-values='in-range'>
            <min>1000</min>
            <max>37459</max>
          </filter>
          <slices>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Number of Records:qk]</column>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Property.Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Property.Description:nk]</rows>
        <cols>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Number of Records:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Record Counts'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_all_hack' name='federated.1hkvfb11qum2nx19x7d2y0oext2h' />
          </datasources>
          <datasource-dependencies datasource='federated.1hkvfb11qum2nx19x7d2y0oext2h'>
            <column datatype='string' name='[Neighborhood]' role='dimension' type='nominal' />
            <column-instance column='[Neighborhood]' derivation='Count' name='[cnt:Neighborhood:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Neighborhood]' derivation='None' name='[none:Neighborhood:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:Neighborhood:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Neighborhood:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Neighborhood:nk]' />
              <groupfilter function='member' level='[none:Neighborhood:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[:Measure Names]</column>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Neighborhood:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Multiple Values]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Neighborhood:nk]</rows>
        <cols>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_all_hack' name='federated.1hkvfb11qum2nx19x7d2y0oext2h' />
          </datasources>
          <datasource-dependencies datasource='federated.1hkvfb11qum2nx19x7d2y0oext2h'>
            <column datatype='date' name='[Alarm.Date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' datatype='integer' name='[District]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[District]' derivation='None' name='[none:District:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alarm.Date]' derivation='Year' name='[yr:Alarm.Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:District:ok]'>
            <groupfilter from='1' function='range' level='[none:District:ok]' to='12' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]'>
            <groupfilter from='2015' function='range' level='[yr:Alarm.Date:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]</column>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:District:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Number of Records:qk]</rows>
        <cols>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:District:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Top Reasons for False Alarms'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_all_hack' name='federated.1hkvfb11qum2nx19x7d2y0oext2h' />
          </datasources>
          <datasource-dependencies datasource='federated.1hkvfb11qum2nx19x7d2y0oext2h'>
            <column caption='Incident Groups' datatype='string' name='[Calculation_218424630881169411]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Incident.Description]' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[District]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Incident Groups (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Calculation_218424630881169411]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Chemical Hazard&quot;'>
                  <value>&quot;Biological hazard investigation&quot;</value>
                  <value>&quot;Biological hazard, confirmed or suspected         &quot;</value>
                  <value>&quot;Chemical hazard (no spill or leak)&quot;</value>
                  <value>&quot;Chemical reaction rupture of process vessel&quot;</value>
                  <value>&quot;Chemical spill or leak&quot;</value>
                  <value>&quot;Hazardous condition, Other                        &quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Electrical or CO or Other Household Fire&quot;'>
                  <value>&quot;Arcing, shorted electrical equipment              &quot;</value>
                  <value>&quot;Camper or recreational vehicle (RV) fire&quot;</value>
                  <value>&quot;Carbon monoxide detector activation, no CO        &quot;</value>
                  <value>&quot;Carbon monoxide incident&quot;</value>
                  <value>&quot;Chimney or flue fire, confined to chimney or flue &quot;</value>
                  <value>&quot;Combustible/flammable gas/liquid condition, other &quot;</value>
                  <value>&quot;Cooking fire, confined to container               &quot;</value>
                  <value>&quot;Defective elevator, no occupants                  &quot;</value>
                  <value>&quot;Electrical  wiring/equipment problem, Other       &quot;</value>
                  <value>&quot;Excessive heat, scorch burns with no ignition     &quot;</value>
                  <value>&quot;Fire in mobile home used as fixed residence&quot;</value>
                  <value>&quot;Fire in mobile prop used as a fixed struc, Other  &quot;</value>
                  <value>&quot;Fire in motor home, camper, recreational vehicle  &quot;</value>
                  <value>&quot;Fire in portable building, fixed location         &quot;</value>
                  <value>&quot;Fuel burner/boiler malfunction, fire confined     &quot;</value>
                  <value>&quot;Mobile property (vehicle) fire, Other             &quot;</value>
                  <value>&quot;Oil or other combustible liquid spill&quot;</value>
                  <value>&quot;Outside equipment fire&quot;</value>
                  <value>&quot;Outside gas or vapor combustion explosion&quot;</value>
                  <value>&quot;Outside mailbox fire&quot;</value>
                  <value>&quot;Overheated motor&quot;</value>
                  <value>&quot;Power line down&quot;</value>
                  <value>&quot;Radiation leak, radioactive material              &quot;</value>
                  <value>&quot;Refrigeration leak&quot;</value>
                  <value>&quot;Smoke from barbecue, tar kettle                   &quot;</value>
                  <value>&quot;Toxic condition, Other                            &quot;</value>
                </bin>
                <bin default-name='false' value='&quot;False Alarm&quot;'>
                  <value>&quot;Alarm system sounded due to malfunction&quot;</value>
                  <value>&quot;Biological hazard, malicious false report         &quot;</value>
                  <value>&quot;Central station, malicious false alarm            &quot;</value>
                  <value>&quot;CO detector activation due to malfunction&quot;</value>
                  <value>&quot;Direct tie to FD, malicious false alarm           &quot;</value>
                  <value>&quot;Extinguishing system activation due to malfunction&quot;</value>
                  <value>&quot;False alarm or false call, Other                  &quot;</value>
                  <value>&quot;Heat detector activation due to malfunction&quot;</value>
                  <value>&quot;Local alarm system, malicious false alarm         &quot;</value>
                  <value>&quot;Malicious, mischievous false call, Other          &quot;</value>
                  <value>&quot;Municipal alarm system, malicious false alarm     &quot;</value>
                  <value>&quot;Person in distress, Other                         &quot;</value>
                  <value>&quot;Service Call, other                               &quot;</value>
                  <value>&quot;Steam, Other gas mistaken for smoke, Other        &quot;</value>
                  <value>&quot;Steam, vapor, fog or dust thought to be smoke     &quot;</value>
                  <value>&quot;System malfunction, Other                         &quot;</value>
                  <value>&quot;Telephone, malicious false alarm                  &quot;</value>
                  <value>&quot;Unintentional transmission of alarm, Other        &quot;</value>
                  <value>&quot;Vicinity alarm (incident in other location)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fire By Legal or Illegal Burning&quot;'>
                  <value>&quot;Attempt to burn&quot;</value>
                  <value>&quot;Attempted burning, illegal action, Other          &quot;</value>
                  <value>&quot;Authorized controlled burning&quot;</value>
                  <value>&quot;Brush or brush-and-grass mixture fire&quot;</value>
                  <value>&quot;Cultivated grain or crop fire&quot;</value>
                  <value>&quot;Cultivated orchard or vineyard fire&quot;</value>
                  <value>&quot;Cultivated vegetation, crop fire, Other           &quot;</value>
                  <value>&quot;Outside rubbish fire, Other                       &quot;</value>
                  <value>&quot;Outside rubbish, trash or waste fire              &quot;</value>
                  <value>&quot;Smoke detector activation due to malfunction&quot;</value>
                  <value>&quot;Smoke or odor removal&quot;</value>
                  <value>&quot;Smoke scare, odor of smoke                        &quot;</value>
                  <value>&quot;Special outside fire, Other                       &quot;</value>
                  <value>&quot;Threat to burn&quot;</value>
                  <value>&quot;Trash or rubbish fire, contained                  &quot;</value>
                  <value>&quot;Unauthorized burning&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Fire by natural disaster, Water evacuation and Wind Storm&quot;'>
                  <value>&quot;Air or gas rupture of pressure or process vessel&quot;</value>
                  <value>&quot;Flood assessment&quot;</value>
                  <value>&quot;Forest, woods or wildland fire                    &quot;</value>
                  <value>&quot;Gas leak (natural gas or LPG)&quot;</value>
                  <value>&quot;Severe weather or natural disaster standby&quot;</value>
                  <value>&quot;Severe weather or natural disaster, Other         &quot;</value>
                  <value>&quot;Water evacuation&quot;</value>
                  <value>&quot;Water or steam leak&quot;</value>
                  <value>&quot;Water problem, Other                              &quot;</value>
                  <value>&quot;Water vehicle fire&quot;</value>
                  <value>&quot;Wind storm, tornado/hurricane assessment          &quot;</value>
                  <value>&quot;Wrong location&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;No Fire&quot;'>
                  <value>&quot;Alarm system activation, no fire - unintentional  &quot;</value>
                  <value>&quot;Blasting agent explosion (no fire)&quot;</value>
                  <value>&quot;Bomb scare - no bomb&quot;</value>
                  <value>&quot;Detector activation, no fire - unintentional      &quot;</value>
                  <value>&quot;Explosion (no fire), Other                        &quot;</value>
                  <value>&quot;Fireworks explosion (no fire)&quot;</value>
                  <value>&quot;Lightning strike (no fire)&quot;</value>
                  <value>&quot;Munitions or bomb explosion (no fire)&quot;</value>
                  <value>&quot;Smoke detector activation, no fire - unintentional&quot;</value>
                  <value>&quot;Sprinkler activation, no fire - unintentional     &quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Overpreassure in Boilers&quot;'>
                  <value>&quot;Overpressure rupture from air or gas, Other       &quot;</value>
                  <value>&quot;Overpressure rupture from steam, Other            &quot;</value>
                  <value>&quot;Overpressure rupture of air or gas pipe/pipeline&quot;</value>
                  <value>&quot;Overpressure rupture of boiler from air or gas&quot;</value>
                  <value>&quot;Overpressure rupture of steam boiler&quot;</value>
                  <value>&quot;Overpressure rupture of steam pipe or pipeline&quot;</value>
                  <value>&quot;Overpressure rupture, explosion, overheat other   &quot;</value>
                  <value>&quot;Steam rupture of pressure or process vessel&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Incident.Description]' role='dimension' type='nominal' />
            <column-instance column='[District]' derivation='Count' name='[cnt:District:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Incident.Description]' derivation='None' name='[none:Incident.Description:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Incident Groups (group)]'>
            <groupfilter function='member' level='[Incident Groups (group)]' member='&quot;False Alarm&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:District:qk]' included-values='in-range'>
            <min>1000</min>
            <max>9295</max>
          </filter>
          <filter class='categorical' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Incident.Description:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Incident.Description:nk]' />
              <groupfilter function='member' level='[none:Incident.Description:nk]' member='&quot;Unintentional transmission of alarm, Other        &quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Incident Groups (group)]</column>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:District:qk]</column>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Incident.Description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:District:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:District:qk]' />
              <text column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Incident.Description:nk]' />
              <color column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Incident.Description:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='What time of the day ?'>
      <table>
        <view>
          <datasources>
            <datasource caption='data_all_hack' name='federated.1hkvfb11qum2nx19x7d2y0oext2h' />
          </datasources>
          <datasource-dependencies datasource='federated.1hkvfb11qum2nx19x7d2y0oext2h'>
            <column datatype='date' name='[Alarm.Date]' role='dimension' type='ordinal' />
            <column aggregation='Hour' datatype='datetime' name='[Alarm.Time]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Alarm.Time]' derivation='Hour' name='[hr:Alarm.Time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Alarm.Date]' derivation='Year' name='[yr:Alarm.Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]'>
            <groupfilter from='2015' function='range' level='[yr:Alarm.Date:ok]' to='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Number of Records:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[sum:Number of Records:qk]</rows>
        <cols>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[hr:Alarm.Time:ok]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='4000' maxwidth='3000' minheight='4000' minwidth='3000' sizing-mode='fixed' />
      <zones>
        <zone h='10250' id='26' is-centered='0' is-scaled='1' param='C:/Users/yasha/Desktop/Informas Logo.png' type='bitmap' w='18867' x='300' y='1100' />
        <zone forceUpdate='true' h='5125' id='18' type='text' w='53867' x='67' y='11725'>
          <formatted-text>
            <run bold='true' fontsize='36'>Fire Incidents in Boston Area  (2015-2017)</run>
          </formatted-text>
        </zone>
        <zone h='30350' id='13' name='Causes for Calls' w='42833' x='100' y='50175'>
          <layout-cache cell-count-h='8' minwidth='260' non-cell-size-h='148' type-h='cell' type-w='scalable' />
        </zone>
        <zone fixed-size='228' h='18750' id='7' is-fixed='true' name='What time of the day ?' w='36300' x='567' y='81325'>
          <layout-cache cell-count-w='25' minheight='216' non-cell-size-w='67' type-h='scalable' type-w='cell' />
        </zone>
        <zone forceUpdate='true' h='10075' id='29' type='text' w='81367' x='18833' y='1225'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#393662' fontname='Bahnschrift' fontsize='72'>Spring 2018 Data Visualization Hackathon</run>
            <run fontalignment='1' fontcolor='#000000' fontsize='72'>Æ </run>
          </formatted-text>
        </zone>
        <zone h='25800' id='37' name='Top Reasons for False Alarms' w='45200' x='54633' y='38675' />
        <zone h='27425' id='38' name='Boston Area Fire Incidents by Zip Codes' w='45300' x='54767' y='11225' />
        <zone forceUpdate='true' h='13125' id='39' type='text' w='53833' x='500' y='37025'>
          <formatted-text>
            <run bold='true' fontsize='22'>Some Facts:&#10;# Total Estimated Property Loss in 3 years due to Fire is $141 Million&#10;# Total calls received by Fire department in 3 years: 141,496&#10;# Most calls are received during the daytime&#10;# Count of Total false alarms:  34,267&#10;# Most common reason for false alarms is the malicious alarm system&#10;# Most calls are received from central Boston area</run>
          </formatted-text>
        </zone>
        <zone h='19350' id='44' name='# Incidents and Property Loss in Different Areas' w='52267' x='800' y='16975' />
        <zone h='1275' id='45' name='# Incidents and Property Loss in Different Areas' pane-specification-id='3' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[:Measure Names]' type='color' w='8100' x='38000' y='19925' />
        <zone h='2475' id='46' name='# Incidents and Property Loss in Different Areas' pane-specification-id='2' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[tyr:Alarm.Date:qk]' type='color' w='8800' x='37933' y='21325' />
        <zone h='2600' id='47' name='Boston Area Fire Incidents by Zip Codes' pane-specification-id='0' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:Zip:qk]' type='color' w='7333' x='92533' y='12975' />
        <zone h='27175' id='48' name='Property Types with most Fire Calls' w='36533' x='62533' y='72875' />
        <zone forceUpdate='true' h='18925' id='49' type='text' w='24733' x='37567' y='80650'>
          <formatted-text>
            <run fontsize='22'>Time of the Day:</run>
            <run fontsize='16'>&#10;The time of the day when the most calls are received is the daytime and the pattern is pretty similar across all the three years. The graph of the left display the call in three different years.</run>
            <run fontsize='22'>&#10;&#10;Property Types:</run>
            <run fontsize='16'>&#10;Different properties were analyzed and bar chart on the right was generated. It was found that for all the three years properties, where multiple families were staying together, had the most number of fire alarms calls followed by 1 or 2 families dwelling places and others. &#10;</run>
            <run fontsize='22'>Æ&#10;&#10;</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='7925' id='50' type='text' w='55933' x='44033' y='65000'>
          <formatted-text>
            <run fontsize='22'>False Alarms:</run>
            <run fontsize='14'>&#10;For the three years, we can see that almost 25% of the calls were due to false alarms. The false alarm is a condition when the fire alarm goes off without any smoke or a fire situation. Most common reasons for false alarms are malicious fire alarm system, steam, and vapor. Central Station has been identified as the most common location with false alarms.&#10;&#10;False alarms seem to a big problem and need to be fixed as it causes abuse of firefighting infrastructure and resources.</run>
          </formatted-text>
        </zone>
        <zone h='3775' id='51' name='What time of the day ?' pane-specification-id='0' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]' type='color' w='4667' x='29867' y='81825' />
        <zone h='2525' id='52' name='Property Types with most Fire Calls' pane-specification-id='0' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]' type='color' w='4667' x='93100' y='78350' />
        <zone h='7675' id='53' is-centered='0' is-scaled='1' param='C:/Users/yasha/Downloads/bfd.jpg' type='bitmap' w='18100' x='43900' y='73000' />
        <zone h='13675' id='54' is-centered='0' is-scaled='1' param='C:/Users/yasha/Downloads/fire.jpg' type='bitmap' w='20567' x='39733' y='54725' />
      </zones>
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6432' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='6432' />
            <zone h='81846' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='17739'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Story 2' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='6432' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='6432' />
            <zone h='81846' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='17739'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Description' captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
        <zone flipboard-zone-id='5' h='16183' id='6' story-point-id='1' type='text' w='36516' x='0' y='5290'>
          <formatted-text>
            <run>dasasd&#10;dasda&#10;dasda&#10;dasd</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Record Counts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Multiple Values]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Incident.Description:nk]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Incident.Number:nk]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Neighborhood:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Boston Area Fire Incidents by Zip Codes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:Zip:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:Zip:qk]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:City.Section:nk]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Neighborhood:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
        <default-map-tool-selection tool='8' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:District:ok]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='What time of the day ?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Property Types with most Fire Calls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Property.Description:nk]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='# Incidents and Property Loss in Different Areas'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[:Measure Names]' type='color' />
            <card pane-specification-id='2' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[tyr:Alarm.Date:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Neighborhood:nk]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[tyr:Alarm.Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Causes for Calls'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Incident Groups (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Incident Groups (group)]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[io:No Fire:nk]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Calculation_218424630876119040:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Top Reasons for False Alarms'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Incident.Description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[Incident Groups (group)]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[cnt:District:qk]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:District:ok]</field>
            <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Incident.Description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='# Incidents and Property Loss in Different Areas'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[tyr:Alarm.Date:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Boston Area Fire Incidents by Zip Codes'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Causes for Calls'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Property Types with most Fire Calls'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top Reasons for False Alarms'>
          <zoom type='entire-view' />
          <highlight field='[federated.1hkvfb11qum2nx19x7d2y0oext2h].[none:Incident.Description:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='What time of the day ?'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1hkvfb11qum2nx19x7d2y0oext2h].[yr:Alarm.Date:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='37' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Story 2'>
      <viewpoints />
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='# Incidents and Property Loss in Different Areas' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Boston Area Fire Incidents by Zip Codes' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nLy92bMsx3kn9sultu4+610BXOz7RhIEIIAUKIqUKGohpRmN7YkZjSOsFzvk
      CDs8M8EHv+kfmBdHOOyx/eAIr+MZaiRKGo24SBQoLgIBYiN2XODiAnc7a59zeqktM/2Q+WVl
      VVcfXECUMuLcvt1VlZXLl9++sGvXrplaK9SqBmMM1AQXiISE0hqCcxhjWtcNDLTWABgE5wgb
      YwzGGCxr1JcxBpWqYWDAwBAJiVLVAIBERq1nhBDIsgyTyWShP8YYaqVQqQonN06AMQatNYwx
      mBc56qpeGGO3Ve69kZBL7/mrF5/FVRSt34Y1w+fv+wSiOPJr1teUVmCMgTMOxhiUst/DNQXs
      usKgdS1cS8YYyrqy84OB4AKxjPw9RVX69wjBwRlHUZVQWoMxhjSKW3tJ+2CMAXf7DADaaFR1
      jVhG/t4kSTDPc/BgXLVWYGAYDgYQQkAIAaUUprMZ0IEZP8djfldaQQgJ/iEwFI49/KR+KlVD
      aeW+A5IL1LpGJCSSOMFgMAAASFpoA0BrDc45GOxvnHPwAHC00X4DAQACfvHCCTHGoLRCrRQi
      IXsnCwC1qqGNcRvJAGZ/45wjrwpEIoIUAlJKDIZDTKdTCCH8JMPFlFIgzVLEsd3gPM8xm89R
      1hWSyAJneH93cSUEOBd+c+leAoxr21v40aV3oLKovYnG4J2nL+MrD/8cbj93S2u9wvXgnKOq
      axhmgbYLgCEgMs5aY+w7JGmcQBvt+6Y+WM2gjYE2CpWqwTmD4ALKaHDO/PhYZ55KawyGQ8AY
      TGdTFFUFYww0DCIuEMcxBoMBlFLQWrt1jcE0Q14WiJMYSZz4PqfzGRjYwn615tEBWs45hBAL
      AB2uBSHLcG3ps7VOjEGVCpoONDS0MWCMI4oiJEmCuq7BldaoVQ3JBQTniGWEQZL6k99gBLtI
      tEldwNedzSrrCmVdIa/KhYlTk0IiiSJ7SMCQO+xFrahLGABZlmF8OEZRFgsLSRPnjKMsCozH
      YxwcHGDvYAwGII3ipQcw7IMzju5dIWA+88YrHvjtQ81CT1KBP371WYwPDlrPhuvBGEMkpT+I
      4YaFn90DREAOWOxujEEaJRZYuABnAYLSGtJhYQMDKQXgKKtwiK07PvsOA84ZkjhGmmWoHeZM
      otiPtyxLFEWBlZUVDAYDREJCa41aKXDOsbu/j2vbW8iLArWqobT2a9SlYNTCuR63R/S8chxH
      txECr1SNWikUVQnOmB//IEkBAJGUiCIJKS2VrqoKvFI1GOOIowiDJFsg4TQwzpjH5q0T6U6u
      UgqTfIZpPkNeFq2N7psQAReR8FhGYLCAKIUFFGOMpxJFWaJWtWWZCNt12AQZUJssSSCE8BQt
      XEjLuqH1rEEb09B1xhjG4zFe3rvcXpfORkwjhv/vx39lST/s5nbnHq5d9y8cH/2/izw445gV
      uQOE9gHVDuAEF0hkBMkFOBikW4M0ShBHMfYPxnjz3fMLe6LdPk6nU5RV1ex3cI9ywJ6mqT8I
      UthDGEt772Q2wc7+Huq6gjH2APe1vkPRhxTC/xtjwIL7urAoAiTOGPMIlmCKYCxNUxhjUJYl
      eCIjZHHiMUkf5qoDoAvZgnAAISWotWV9hunAY+Cw35C18hiccwj3V6satbaLnSQJSgcI0vHY
      IdB0F5P6pAO4bDHD5zxP3QFIuveZ13+KOot7NzJsO7zGv/vhX6Kqqt5xXU+jwwlYuaGqa99P
      rZVfIxqf1pZXz6sC86Lw+5JEMbgDhtrxw9s7O/i/fvSX+Pprz+L9K82B5owhjiJorTGZTvzY
      ldaYlbkfk1IKZVkiz3NwzpFlGZI4AXcUVBuDqqyQJSkMgLwqUNV1L2LpsmJ9iLLFFjJ7mPvW
      1RjjWFeLyABLLbXRnt2MAqSqtUZRFFBKBTJADy8PALVSvQPVTqiiPykEpBKOZLvJ0aYa7YUw
      2rwQi9N3KYQVRo19mDGGKIpQlFbwZG5zw7GS3GKMscDiBEPu+iZyGAVCNee89ZzkYmFDjDGo
      qgpFUeDFnUtg2XLhONyw9/QMf/Kj7+EfPPWFhf7CTQ3Jf3ft6Z7MsTqeqjkeOwQozjkiZuUn
      znhrXWnDr25t4b0rl/CjaxcwlYARHF9/4Qf4LwZfwsrKijsAMfKiwCyfo6oqzKczXNvdwfbk
      AI/e/zBuPnsDyrLEdDr1Y47jGHEcow4OqRQScRQhiWMAVtgPBeyu7LZsfej/XeRFz82KHAxW
      ORK7vaX5V3VtkZrRiETUUoBIaVm3+Xxu+9ze3jYhQBBg0wsrVVthJgCQ46T4kFKQoATAkW5L
      GYhEkYap21dRlVCO9z1z4hSu7W7DGINIyBaL1h1LUZVemyO4sBoPJzSF79Bag3EGQheVqlvC
      ujEG4/EY/+u3/xijNMNuCqCHcixbA2iDz27ejC8++oQH9JByErtC4wrXrYstw9YFlr4xECUT
      QkBrjTzP8T995xuYZpZF8eweAD4tMOQSK0mGVEYAA7aPDnBYFUASgaWWeq9rgd/75d+EUgqJ
      0yLVqm4hFWpRFGFlZcWPczafociL3kPe1YSVdeWxdXe+3blrY1DVltKmcdK6p1bKHwBa80Gc
      QmkFKSMwd48xGrKLTbsLKxj3p3de5pBctkgR72D0EDgIA4FZcp5EMaQjSUSsQtUbbaByfGMc
      RW6gDdao6hpS2s0NNVLdQ6m0WsAydN+8LMA5QxpZjCqFWACkl86/iWI9Q9ED5Mc1xhgMB360
      exGbb6zg0/c/1L7WAYKwZVmGoihaSKi7+cQ+0D3huoesBe3r919+HrNUeERTqxrMqVnNKMUE
      wAQVYCoYbYCBBENbc5fBqTe19jAinRDcxdBpmra/JynKouw94N29kU5bRa2PK2lkRw7hAL/b
      OGeeWlp5ybJznHPAGCvvMAYDDt5+sC0HhL+RhF2p6lhBJfyMpHQvtaRKcOExKWkswkMHWD6X
      3l/VVo1HrVI1KlVhXlreksZa1XVrc6h1BTDqN41iMDAUDoMQ6aS/qqrw0rWLLawftu7G9V1X
      guFPz7+Et9+7sICx+zYtREAh2xPKWt150JqEQnEINHvjfTy7fRFcBCxejxbFGGOxJXpYNgN8
      7u4Hsba6htFg6MfUfta0xuuxtNaYTqctpYPWiwI8NSEEBOOtfey+i9ajy05R66rqhdOWSSHA
      0NZqMs7sAQhPZsgb+0619kYFxtoYxhjj+byWMNyhJoM49WxUXpV+kF1VWLjZ4b/hdc4Y0rjh
      j2tdo6zLFvnEkgVijHk9e9yxUdD43/3gIsZc4W/XGHQi8QevPIP3Ll+yrGQAJN01AoCiKBbG
      Go4tBB4/3s7ahOv/nZd/gjqNWvJNn3aKxhv25X8VHEfzGWbzGfYPx4FxyWqptDEwThDXRuPw
      8BDT2RSz2QxHR0eoHaKiZ7rv76p9hRB+f8IDUjt2ifqxyLj2f+HvhBBIbU+sEK2LF5oNwLun
      UAU3h4PM4hRSiJYqtLuh9IJw8P6QaOXYloZc02BosEVVeswOEIve1vZobSdJwjkAZHGKzB0w
      wQWyOEEsY48dCXhoTHlZttSeXQHshffOA5EMxnG8VVsHfdBvMJbTzmOGb/z0GcycetRfR5sa
      HEdRwn0I77WsJJB37CNaa/z4lZfwVjFuvW/ZexhjXr3Yvc8Yg1evvO9Z0aKqvG0ikhJlXYEL
      AeZkGqUUyqLEfD73wnF3bQgeutc82wrmATnE5B6eYG1EZV2hqEpvcwKc3cStQV7mFp51wJYT
      NXRsOO8Cu31B/4YnUeL5//AQdBc1xFAhVShV5TZL+1NLfVG/IdsyzAbocgsG9vTaw9KoG+lw
      5FUBY6zRwxqMmLcwknBkjEHcI0wDwOHRId4+3Gm9s49tCJ8l4PGHAcYJuZZXngiDy1evuvkZ
      v7ELFI9ZrdfS9/QAqOQCWZK07r22vY3vvPcaIBpK0+W7u/u+7AAaY/BBNcHbF961CEYIaO3U
      kg7ZMKBl99Edlqw7V5IPFxApaw64VQFXqOpqYWy074BDzlHiEXMiY09lyK5Fhq/WnI2BUrot
      A2jTaCe6C1Sr2qsW+9oyuYC+K+1Uoe70dQ1uxjh1pNucYWZ9S3b2d1v9kcDKOUellNXy0EJy
      yx5ZP5bKsUsNEHBnY8jiZIG9oEV78c3XoQdtgPqwtrgmDAzML3xd194lwAJLm68NG/nThNfD
      v+5voeuKMdYF5I9e+CHqpFlfYmEJuXQPwQL16jQlOf7g+R+AaauKjaRcAOjuenSvdcfe9z4V
      UPVIWn8gGdh9wr7okGVRY/D0fWJReC56PBKsEc8NUhvtTO3oJenWoUq1Fl87oKZ7wtNv+zQe
      K5KxCcZ403R34QgIV0criKII48ODHtYiwBQAjG7GIxiHMfawFk4NFhq4rOyQ9qo0SZZ58epF
      HIPwW60Pi3JHEQz1qRVCMtYnmIf95HneogJdFq37G7EE9P0HP30B27xeWFutjecmF5DVdbBf
      hVGYzed+n5NkEUkwxjx2Jnia5vNe4Os7aCLQxjFY2013rOQNAAYkMm6tBbHRMA0s0f6HTn1h
      49r5Ak3zOcgvaF7mmFeFByDGmGN/JGpljQxKWyEkLwuUzocn5P/tgJTTtBgkMkYSxd57sDsx
      +hwNR4ikBf6+xrl126AFo5M/K3PbN2OeX+2SX012h2DDwkU5/94FjMWi8NvFwB+2kcQWWfkD
      YFLiyFlYBbd+OiTr9GHQhb5YI9jSnAjo6V102N64dsnaODp9hB6cIaYFrvO8S4HZfObHAQBx
      3LaO52WBoq5QK+XlLCGsN2ro1mGtxGVL6xRSJRVoAoE2oiQlDIyFLw/oRjsXnEXVeCjv0e9+
      XQCgCEz34SIzNJ6Goe6f/HO8kxVbVEsRxlWqtm61UWRPNJh3tgoHQ59ZmmH/cLyw/nSKIyG9
      41p4kMjUTSwSY+330G/h5ncx6/PvvQ3Ihv1ovb/zTPP74sHw/bo/MGBvNmldD2WgkEoBlhUI
      qQCNPVSJktdsOIejoyPs1PPe8VO/Xc3T9TbDGS5euoQ8zy1HUBRI0xRRFPmxl3UFwTkKjzwV
      OONI4wSxlK11sarofgTSdcuh/mulIJ3lVwrhjay2T4ZBkiIKXMNDxFG79e7uvyRDgRU8Ai0N
      FoGTMWsyJ09EAM4a2Bi16D7r0mAQycYVmTsePmSXaBOLqkSWpKgdq7TAV7qJ0PATJ3zR+6wj
      XLN4duDBYezRp3vBVWscTY7wztEuTBYtYETGWIuNCfnLPgG5D6MfzBstEGfcY+TwXiscA6iA
      NE29TxHQyDDUKAagRcEuvgeTJUsxep/w251PX9OTOfQsx1+o8/jBt97BiEe4YW0DN2+cws1n
      bsDqygpkFGE0HGKe5xYaHOurjXWs67Ig4f53x2jXQsGYBqY452Bu7Nb1YbG/7pwAeI5FG4OR
      kC3XcQCQUgjrCGU0lFKeVCnn8506gTHk+0MSYzeyvZlkFxCcI+JtjBq6HNCnxRzCeSQuWmX9
      vcwGg8QRg2Tt+wTnPugkHG9RV4iEADNt3XLX/vDiW2+gTOWxwBMubN+iH9fG+bT1XNzB8LRe
      BBh5nvvroQpXKYV5niPPcxwcHeFgcohJPsc4n+GdK5dQ51OAAVxKsCwBH2ULY+liyONavT0G
      T2PI0xsAgNz97RT7ePnqPsSVN6Enc6zJBOc2TuLnH/gEsixrC62wQmgSOEYue3eDdOEVGoTU
      oijydoXu80qrBU1UWVee0jLGMC8LpAHV0EbDqwpI6LCaEqsxSILoIUshlAcoDQtEvAMYxlg/
      FGb6/eu70jxRFRirPlS63wDFGLNRYj3+J9Q4456Kgdn5zMt8wSO1FUDiFuvFyxfAs/6osRBg
      PgrQh23qHPpC9hKAN+QkMm7ZSMJ5e0RRlvg/vvMfcLWYQHEGSA5IYTVrAMxmBmGcggGAurYH
      NkjB+PFA1/q9i0m1Bgapdx/oNiM4+PoIB1rjoNjHO88+jV+/55O459bbMS+aQ1xrBa5qrxr2
      zxOf3hmfFMJ6FTPrLZCmKbIsw8HBEtkwYJvIJpBEsWXFPOVoGz4FF/YALPzoVE8hJjXG+tAY
      Y7yKcZhmni8LMWPXGBa+I3S38FjYNFa6MiD7dB8AZ2xhCxSoCyxSCAhugYDsGUVVQgq51J32
      3ffew77UYG2tcOtQf1zA72vUb1GV1qDH0GKJ+tgUACjKAlOmoEdpP//coU58kMLkBdggbd22
      bC6NmrRZB74+gh4fQWyuNu9jDeNHoZlO0sSMG/zRm8/ji/MZHn/gYUxmU/9OAszQYVEKiS7a
      IRmH2F6gUXj0seXdT/IOZcx6DMyLwqtU6VnSOHGaRAhUXYEWgNXmGHt6syR16j7mLXQhj03O
      Wl3ACTdMucidFuXoCKDGCdrDJEMi40bN1dNfOHY6KDCW5bJyyKKfE31/9sKbYFHbLkHm8+Os
      wB+lhQDuBXcpkUQxUhn7a+Fntw0HQ/yTxz+PkZOf+2QaYkiNMWCjDPpo5q/R3EN1Y3uMi8FD
      PI5gqrZ1vgUf7h//bsagI4HvXH4Lr7/9FrI0RZakSOIYw2yA9dU1DAdDxHHiNGHt9aU9tp7C
      wseEkJMd72h5whbuP7HhDMx5BkRelU/3pmna+AKFixh+eucjp0JMo9iSpI4xCbD+GtN8hnmR
      NwAUHIJaWxmD9LgtgDWmFcRCY4g7umDhSCMdtL6FoHFzbjUQXeAPx3RwcIB3J3sLC2lfiPbn
      x2wGaLGKtaqdS7JVT3LOYQAfeLSscc5x6sRJPLx549J7wkOh3cuNbntY0n26511dhKUnc7Bh
      FjzXLAcpS8JnvJ1DcFzY3cLJjRPYXN/A+uoaBtkAkYyQpRk21tawOhotuHEYZz+ogrUgmags
      G+TX3f/Q2g3Aw8m8LFCqGkVt+ySBWGuN/fHYskAtrUaHEjRvbNgXUj/Vde3VdVZAq6GMbrlM
      dFVZSRTb+5T2ftythUNzv+QCeVUicYfAWqP5AstFJ36ZazY1EpTCay+ffwtV0hMGGhiNlrFA
      H8YaWSBfXF/asNANuygLKKORRnyBJWiNC8CZ0RpwcOlDDViMAfz0OtT2AdgggVgZeIr2YSyd
      H+c0Bz+97uZjWZ1jXUMCCvL6tQ/w/pVLvXtBQj95CJBnsOBWvWnjyQsMkgxVVTUYfQlHkZcF
      pJQ+YrDWDYcRGh+V1ijKAoM0wxvn3+5f6z6hLwyKAZw7s9PtWsclhVrrVrxAuJAAnB+ObvHj
      2g2QeL1QBuCMe+BXzv+/UpW3NoaHVQjhw++6m+uBrCoxL3PvIPfGO+fxo/Ov9m9kOPeeRV+G
      qQm4VYCROGMQAV8tO2k/yKCTyKiFXcN3zQNMeebUaZi8/FD2jIGBcQ55ZsNi/J0DCGPZQ6XU
      glDbZm0M1OEUbCUDaeD8fe66gemlIkop1HWNqTC4evVq/1o5HGNdWipMi7n3kUqiGKN0gDRq
      Al36DhDJFWVdeeD33EbnwHBm/YQGcYpBailaHMlGCA5VbZWqobX2aivGmE154QZBpMQYG7ZH
      mgwbHB0tDJb6pxPPBW9ha6WspE45ZQCXl0iGmNm4oOektQDHCY1dKiG4JYvXdrbw/Vdfwhv5
      PsxaBr17AHFqvbePpY3148EGYQTjqBUGPF0YD42dnPQYs27jwGLGhERGKOoSiYyxubEBllfQ
      adR6ZzjvBSQwSoFBgmprD9ENJ/v5Z6K+s8LKDkkM7gVo05A0GC9vM+Z/bPcHg1owvLd1FWfP
      nl0Yk2A2z9NsPvOAn1cFMta4zfftL7lfe5fyQMtDgi6xzmVdIXIUhQd9aa1RliW+/eZLzQFo
      To5NkTKrK5iqcEYb3kqOJbmA5tqrS8EsVotEG/uHjXOOSEStNB/GOGsxjLdDrAxHODg6hGCN
      TryoS6TRosyhdTN5wTki2WivvMWPwblQW+rw2ttv4y/efRVlKoDI6v35+gj1zhjy5Icfgj4A
      77tujIGcV7h1sI5P3nY77rjtNh962W1SSKuT5u2wzO76Sdi1FULg9HAFV+DibTvv7bZQe2MM
      fCji4o2APphYau/0/gu9OXhvHfBOrh6/Fpzh3b0tPIFFgT1JYqyORpjNZzi5eQKRjLC9u+2v
      l1UJ7pBgiwJr3fJ9SpzbO2F/TzG0BndcSwj8xhg889ILeOnqRewK3cgA1CqlkETWK9MGIVjW
      JHV8Pb0gjRtMHAGt+N6uJbfpv+3YNRwOsX84tiouwVGUBVZHNp6UDhKl9GjtgRtDUZU+m4Tl
      9YyfLOcctVbQSiOWEQSPcXXrGv78wiswQXIrAGCRBF8ZQB1MINZGCxt5PS0k1Vmh8fjZ2/Dw
      7XdhY8MCklKNN6YPyXPPCMZac+xiS+o3TKh1crCKq9X+AoB2MWaX6oQCcfcexhhYrcE3Vprv
      IOrAPPZ3F+0HFmUCa7W1Mtu1/Aiz2QyDwaAjC1nHxUGWYZBmziosUFSlzUsVtf2MQoovAoDm
      nCPhsb/Hr6lTm+pAxqA5aRjkdQUmVGAIc4AbOYe30MuTLHLaWMata0gCsMD3d4VHY4zj/e09
      WZbBwODU5knrHFXkYGDYPzxohbRp03bLCAEjPIQUSC8Yh5TS5sThAnBxyUorPP3qizBJ45Pi
      9dcAEEdAraAPp+CrwwUgua5mDM4hxW9+9ilsrq9bIAk2REA4oU8hkpH3lemS+nB9w00NgfmG
      1Q28sjvuJUV9Wr3gh6Uykr/O2zy/fXeYlKodA9H3fkKCdRrjgytXcM+dd7buSWOrTRwNRjDG
      4OjoyFF0m4oldrmNjpO56P1KK2u7gkMusNxB5qIGu/P87KcexWMPPIzzF99rhGA6TYJzREJa
      YSFOkTgHNMltIASpL+FeMs3nrQAF2qyQCnTDI6MoQhRHiGMKXgAOjg6xd7Dv1a3kEViUhc8R
      RP2Hi1GrGtNi7o0rtVYtL0H6e//yZbw122uc2ugf1mS1I35XT5Y7lB3XbuND/M4vfhnra6uo
      VI3pfNa4gfs1Zp5Vq3sc80rnTRkCPtA4cdF9pzdPAFU7RoOeCUMAw2aMARPH50gFYFmlJQI2
      qW6XKQisTKcghLCeBZHEO9tXWn0ILpCmGdIkQRzH2B+P7fwCYLcepEWTO7aXo6DhumgxFwVG
      SpGun1HY4jjG/Xfd3cQDdBt1ILjwDnBk/KKNIfdTCirvC3imDSEDhBACYMDh0RGMiyzSSkMr
      i70TGVtelDA+b+eTIfYGsAeLtCPEF8ZCIhZtf/pa1ZCRxAmegBm0VIF+Q6nv1SGM0tB5CaO0
      35QPa6e1xK89+iQq5+5Nso7gwlNTxlyAjrEyCyWvChtR3C5V6ALAyfUN8Krj1kzPoX9PjVIf
      qjqFW8su/HcB/7imjfHhkFIIXDrab3EIQvAmsIkxxEnsnwMa79gwYyC1MDbYW4kDh7lBsuj7
      FNoICJY8tQ0XuKtZqZVyIYZtrEublsYJkihGpWs/mBDbh30rrREnCZI0wdF0iqPpBFd3trA3
      3sfueM8mU3Jap9jlCwUA6ShSOK5K1ZhX5HteOx6fe6tvuEm1sv5Lp06cwO9+8TfwxNqN4Mq0
      OIcuEhBrQ5h5AbUzhhovZqPuYqCs0PjqI59BkiQ+7Uss7HykaFy0DciVvJ2aMewzFPrC98zK
      3G8+yU8rvD9b3TKB2Bq10r5HoMsa9bV96HkB1Iv+WB8G+F2VIykilFKYSiCf5d6QyjSws7fr
      x6cUZcDTfi8Zs+x22VF5l6pCWbcNhmEQVl/CgdB63GXbeKVqlB2XhOYgoCWMEGvjI+sp9jId
      NCF/PfxnJCNsrK2jKAps7+16aqC1RlWWiLi00Vww3guVnifVZVlXmBVzzMoc89KmtZvlc0TO
      N9xi3bbwZ1NtW0ybyBhpkuAXPvko5LyJM9UBRggPuthYgTyzCdQKJgjU784xqTR+66HHsbm+
      jixOW34opDQwxmZQmBW5TwCcpEmrP+L7u9ZwOvAwpoVFpZR4+PQ5oGqzRsvGCQBmXsAczqAm
      MxtJVyuo/SPUV3ZhjqYQp9Ygz52C2j/6WMbvrqzi1zgSeP3CO84qb7N9q1rh4OgQk+kER9MJ
      GGPWZSKKW+r3kPXTxmAQp4hlO3HWMvaYWpcChAdCKq2ggAXMCaBlNQ1fxhhDllnJnXT3Ikms
      f49L7ESuCOQaa5OulnYBnOlfdjIlzwJjCCW+4pyhcJFGDWk3qEnWMMbWFGBO9+wES+4WL45i
      cNH4JgkhkAoJwusWM6PXKAQAfHMVavcQ8vSiipSVNX7jnk/jzptvXTj44UbMy9znzjHGYDAY
      YDgYAsaGQPZtZMgalXUFHhwMWt8Tq2sw4w9abFpXg9SeFCDObsBM5lA7YzDOIVaHgNP6UOMr
      A6jD6UfTiC15p3Hr8dbWJTyJR/zY4ijCdDZFGiUYxGlrzQQXiIV9LvQWCAXvrtwTrpsOVKWE
      XLqcCcGYDH1tuie4q04jwJdS+o0ry9ILvFmW2dTcHc3FfD73A7E++7Klu6b+JZcwpgKYdb0u
      dYU4ijBMB0DRCKZa26B3KQXqugqifAwKlC4jROypV7hg2mgk4DiLAd7Ox2A9SW+9kG9s8iSW
      SOh5ARY7zCMEUCv80rl7cectt/oD3FX/0qInUdwKCSTgHgwG3sy/jN8n4Z6wYnj91SsXAaex
      8fqZzuFrHUzpouVWBuArg4V5+/FlCerJHKZWgFiWR2hh0eiFnpqZ4LerxQTT6RTDYaNhy+I0
      eLyNvT3beMyB9iyUboynYTtOhmo0bs7QRdqZ8GHC9iE2B4DZbIa6rlGWZYt14Jx7YMyyDGma
      tpI9kYbDxo6WLVUr0GSPG8QpBklmJ+TWhA4qxSsILjCZTm1CJu3yPAqJNEmcBXkx5w9jDFJG
      +JWHHsV/9oUv4+7hxsKCNoK7cUjNQKyNoMcTqN1DqN1DmHmBxzduwhMPfbLlohsGYoffpZDe
      rG+MwfjwwGe8zrJsgXqE3zljGCZZy6Fvms+xtbeDi5N9Gnh7HjQXtLEjdL9mqJJdU7sAACAA
      SURBVIXo4LKrnVhFvXtw3b6w4bjDyED6rZAcH1y7snBAaQwh/95FyMsasYdWvS49Et7Y2PAa
      puFw6OG6qEqvUfTwEL6YsHeWZZjP5x6YqTIIxYP6Be0MUmvtqUBRFD6qiTQxRLolt6lR5mWO
      VMaWJ9QaxqWzruoakbTWUV1rn2LR1AZlVUEK4SyFdtzkPzRMB63CHp7UGeP1vbWqccdtt6PW
      Co/feT/e+ukPgaStNWoBpPvkJ9cAbn1r7lYpfunTTzjrbP/GWO/WgNd0wnCtFPKiwGQ6xWg4
      BO/YT2pVtwxehNVo7ciT9vz7F5HHgl7orbHMUQNDQATj8vjAG8HCOS4AmGlMvWKUwUzmwDHU
      oq/RWFvxx5HA+auXcO8dd7UQZl8jx0a6bzqd4o9/9D2cXFnFyZU13HTqDM6cPm2RdmBZHw6H
      iGNLKUejkZ9fHMcYj8e9GjcZDriua4xGI7uxUuLg4MALIsTG9AoZLmxtPp9DCLGQMoMi9qWQ
      SFzUGQms86rASAho57pKmd0oFz6pwRhzJnxQ+R1gfbQC4RaAjHg0MdrYqrZZLtLYyijKaB+j
      evvNt+CWN1/GRVf3izHm9p55rOrJsLPgsXmJL/38F1tRViHGqoM0KGWtWgdSayvIxnGKvMiR
      Jgmm01lL/mBgbQMd/c6YRyTGGLx57QNAWHnIvhwQsgka6roHA/BzsGpO07j2AO0DQXMfZlBb
      Y5hBen32A7TZZspQTazhhfGODVDveOUSggoVE7ULsNda44U3X8d5THH+aAocXMYnd7fw1VNf
      bL03yzIP/OF8aEyrq6tWzpzNUJZOEZEkVg0aUgA6ufSXpqn3w+4LVqcVJR99yqnfrg3FMEiz
      lmWOHJekSxPCnCNdljT3UKUYi9Vs6KSBwepg5GwTwqdbD3nk9tCMw6zKbwgZmjjneOL2+9pq
      v8AG0W2MMSCL8e+f+2scTI4WcvyQByiRZNIIEVBkcYJEWnmgVgp747F3iWixah0dTFfom8/n
      eI/YH4D8EVqsl5uKv2zK2souaNSUXeAP5+kp0MlVqN3+MMRlzR527TE5BeDsqRz747FXddox
      NiGMtIZSCE/1IxnhgdvvQFRYG4YxBvffdKu/n3OOwWCANE2XskvC1ZkTQmA4HCJNU88etY51
      WZaYTCY4OjryLIYxxmc4C/ldmiixUGurq0jTFKPRCFEUNQUIGPMVROiZZpGtNoAMQ2mceEMb
      sJg8NpYSaZIiTRKMskErtpRadxEaRz7ttCncoz1jDO649TacNo2wDCx6F7T6ZAxXWYnvvPBj
      z3qH7NayKpEtoOI8MEU3SaTCd3UFWfKHl0LirQvvQi8Eu7OWKlp2nMhQ1jBRv6NiX/Pv5xx8
      kPRax5epXrsaGi9Hjgb4zsvPYm9/33MJ5PJOzbvcm4a1rYMQ2yyvcfutt3m4XFtbQ5IsOkou
      a3RghsOhHRcNVGuNw5nVydZ1jf3x2Lo6TKdgrL249GfQaClIpTedTlu8f8gm0B+deGPgqrq0
      STBj1o+ni0EBIBG25hMF0i+T9Onw2DwycYPVDZycYX3QK13jVz/xOJCXdHlBEKXmhWQAbxRj
      /MVzP2r9zjvzbNgwmxOVNiCJYkRSBKpn5qOXunUNqO95VWBW5qhUjTe2LlsB3Swaqv24HdBp
      G68Ipg14HLXGG+5jd51DuQ6DFHpWWMt437t6GvVNsQGUk+htPcX/8oNv4srWNVtjzGH67v4r
      beMVyrLEHzz71ygTAa40fv1TT2J93aqk0zRtPftxmqcAjNnEQtLVBiZ/lb4XhBsuA4Et3HQr
      fGrMy0ZwJmcn5aJ1qrpqRe5QI/aLWuX8fWZFjlmRe+0GCe3dsdH7aZyUTElwjmFmE6ZWTnUm
      ucAtN96EJ0/dag/UMYtlELDmnONv9j7As6++7LVky1qYZIDGFsvY20G8Fd05nHm/fNNQCEoB
      eXBwgCvFBCSomsA3v0UxjY3Qo5BIU1WNHNNleeiTLarAiWLyjRHU3uExq9NZq84h8+9i1htz
      bbSCOI5bWUBCLRwFzMdxjMfO3YFBofHb9z2Gpx55DFEUQRkNuSSR8EdpkjFb1UMpBa4ag1HI
      7oSBKjTQcFLE49EG1Mpm9k2iGLHL32hnD+RFCeNqN3HBUJftNHj0/6IqPYYM40MNDGb53PqJ
      RP2uACHZpawFPsWLAzCtNRIZ+/w8j937IH789HtQg7bl2/eJxhBD7zCC4VsXX0cSx3joznt6
      MREBVZjFrJtCkjRe0mXaC+/jnCN0xHz7wgUUR1NwwcBieXx4IuNwkcHQtQIVGzH24tLnwnET
      hYLkQCyhZ3kQJNPfuhQ5hBelFDJwxEmCg8NDm6E5QAxdKsQYw2cfeQxPfOIRj/lJU9mXpuWj
      Np44C25d1xgMBlaSdsaPNE0xGAxQFE11dAIsUi8NBgMwznBwdIi8LDBzBqvaGyca3fi8KLzA
      SwWc0yixVQWdTpcmHcsISivMyvlCTk8DoHRq1RZLZoz3/QkPDQGJx8Bgjg1ptEYvn38TdSrb
      hxHofG/rzBkYVMTxR2+9gGdeeWlhcYm3pzWjFqZspHHZmrZBkLfRXoAnwFVK4bXdy5Cn16Gn
      c9RX96B3D4Haasy6QeIMaFzL6c9PZrmGn7CwNhTy6KjBygD6aObz7Xfvv96Wxxz/5rt/Dq11
      K0EYrUXYl5QSw+HQAz+1bqDMR230LC+Kwmfbms/nzpXAqohI909aoEad1+iTp/kc46NDzAvL
      n1IKkjSKvaqweWFD0vOyQFVXNo+k1pZnRWNNlVJaADXOJB4lGCQZBknqA2AoEWutatdX6Vkr
      yixAyX7J38ljXSes2lhmhXOnz+A2NgArgrxExrQOQehl2SLtscS3L72JF99oxxczWCfAbuaD
      ULbpk1+YUxpQjTVy7dje3cGWysGlhNhcRXzTSfC1AfTBFPW1Paj9I5haeQ1Mi2XTzVxY530A
      Wh6yCO4zxjS8HwP4xgr0fsMK6VmO+vJOr/zQ14wxUAx4Ld/Hv/7mHwEO1owxXk4gljJJElvF
      soe95Pz6Bfq+MVATX/va136/JfC4TSkCK28320KLl40j65QmJAys8Yec07xhJsDQ5CbMnWAd
      CQnOm3tbscJa+Q0k9oCKHlfKClalqmyQSVATljn+mKqMeA2N7NHQuLGsr6zhE3fcjbtXT6E6
      mGD38AAmbu4Pw+po7i1WkDNc3drCp26502vNALj5idYa0PPKuU7T9/CzPUQrTP7wlRdxlVlN
      FoPTyjHrusCGGTQM6v0j1AdTQCmwJPaArY9m3v2hT6YL3+W1ZHBEg6iHgS26UToKphTMvIDY
      WIE5moNnbQc/6jtUcoQtFwY7l6/gsfseQpIklrd3rDZxH33PhWGwH7f59d7a2jI2IJ37tBQ0
      8O6mhQMgIXgwGAAMmE6mC9ixKytQfK/gohXB7xcqELzsAdBeUBacQ3LpSea8yD0rkXYq11A/
      tbbuuJIK9HUWgKgZ2Qc8n6oVptMZvvn83+DVYn9hHfoMSIAVNj8xOIWvPPk5SCl94qdQXUvv
      oWwYtA6k0ZjNZiid/BPKYrN8jv/hz76OejVr2Vgo6zEhEM++5CXM4RRGa7BBCpOX1rsV7RxF
      JEQTVViGvY2xrhTGBa6oq3vggxT85JolELuH4GvDngRjbdWypzRwBUS0xq/e/AB+6YnPWnmv
      sskWoqg/nz9g0/Foo5fKgB/WQrjkAAKjRKDWRD9WIsxFbd8VsSBDWKP6W6wPxbmrNdZDvuhZ
      bwIHWvnetWmbzsOwwTAletiXdBkByE+kS42oH/okzZUBsLa6it9+6ot4dHQGTLfZg2WNcY6X
      Zzv4N09/y6uPu162ZGwkzRTNOU1Ta5l0xp/wfdpoqLpGxZo0JMod7jaf4+bOOXiWQJzZBE9i
      GGdBpxYqFAJDcqOFKSroyRz17iHq7X1U1/ZQXdtDvXeA+nAKk5cQG6sA+YoxBr65ArV/1O4/
      kB86wwR3lmXDGL75+vPY39+3yErKlkW3r5GW6GfR2NbWlmkBXkddR4JlWAeArpO2Z5BlSOLE
      O74VdenKHXGbmkJai+5oNPLu0nXdrmJCQnBZV4AxiOME82IOyaWPnqIx0f2UmqV7LezTT/SY
      a33XqWmt8d2fPIPv710EgsNJEk2vJsIYnFQS/+jxz+HU5gn/vj4MG0URhsMhiqJAVVU+kspr
      gExj6/jfv/XHuBI1bJ0XZJnV+IQ9+4OytQ+2PoI5mPrULwwAlLZpz8sKulbW1UFpqyqVAjyJ
      wKIITHKffLfb1N4h+GgAFlvlgdradz5T3K1PaIsGEPgrAQ3SOVMJ3LC2ibe2LuPm9RM4t3ES
      D95xF24+d3Pve4uybErwfsTWlblkt2Bbt2mjUdYlkiiBINLtKr4T5rXVTxhWV1db1RCrurZs
      SKlwYuOEjQV2LMzh4SGOZlNPfcqqRJKkOLG+gTiyDnLbuzvIy8JvJqVRD3m/0NfmeievtS3S
      lywhoaQ65a5I+C9++ufwwjfexWRoeWHKU78URzGGqamhFZWW/XCVY5qm3oCoHKs4iC1btLu/
      h6df/gn2izlqzps3M/rHHYbgPXQwlXJVEydzF1HGAaNtzs80BlvJIBm7Lhaoe41vrEBtjSFP
      b1gqSQgSbWzv59kJ1bQxHwyP3X4/nrl6AQcpw+F8D0dVgU/d9+DS9eLcOg3GSyLiPkqTgtsT
      3jfxqq4cW6SQxmQ17MbnWh+d6XwGpRVWRyteq0RVvw2A2XyGSErUdY26rpv8oY69iKMYJ9Y3
      /AGp6gqF90GyxjLBuS2AV1U+jUheFa4a5PLU5t0DwjlHzNsp08PrxAbGktKtaNx98iyen+94
      zRAAryVZoC55iUfWz0HVNa5euwZbqVJ4VSWxQfR/4nub5GSNQassS3z9madxhVdAJhzWJ2Bf
      tFN0G5MCPI7Ab7/B71m4NsYJAEvjiJdQrqYvA6Y1Pn/j3djSl/BSOQbLiD1h/l+Ss7rtZjHE
      2fUTuPrm85Cc43M33Y1f++wvLJRfCpsUEvN8Dhigqiobitqn4LiOJpthNs0KuY7MMmYLTIB4
      L+6tv2RYCuM4lVaYFbnD0s1hmcym0M6Pn4rmAYDRBpG01GRnfw+nT5y0i6VstRSlLFDEMnJq
      VtkCFs448sqSxK4fTrhxXe3NMiOKt0eABepK4KmHH8HFH/4F9oRqLLX0HgSsoTFQ4wm+zy/h
      +89faqgFCZrukwM2dYsQUAdTiJWBRRyG2ARrpTYMOEwDrH9MozG0cvnr5T71Xdnuw+7pNp2X
      YHGE+wab+OrnvoCjoyOI7/xH/HS+ByWYdTKUAoYxSGXw5Knb8Oa1S9hGCS05VhXHP/v8l/HN
      H/8AmYzwO499Hg/c1W9Q7I4pjmIcHh5iMGjCcT9OE1/72td+P7T6WlcFbQUxp/oitqOsq17X
      Byt4WTIaRTGmsymUbrK20cYol6TKwBaJS2TstCCOp69KRJG18DLO7SEAQxK52mLOuKWcqwQJ
      QjKoDRa2Pqsi/T/8PVT1ls6CHbk8nYzZ7GJZmuLOzTN44cLbUDJ8T7tftXMAvrlis84JW8AC
      0mahM5GAiQR0JKAigToSUIlEMZ9DrWSoEokqFigTgSLiKGKGIupQZ1JLthoLLrWxtTq0h2tZ
      O47t+bCm9w7BN1awP5/igVM3YWVlhBMra0imBU5oiS8/8Gns7OygqCo8kG0iyzL857/yFdyz
      ehLqaIZf+9QT2Ds8wLfffhn/5PHP4+F77rvusXDOLax8iMDcbaRm9cE329vbpospCSgo21uX
      DNpq3NbIU7sCeHQtSRKUqsbRpK0RAOAxeSSk9+lJXLr12jmBndo8gSzNcG1ny2Ev7qlLWVcu
      SZcdWxa34w7ChYiiyIdu9pFeup+oia2ja/PRjLLBUi3Dn/z1d/HcfKvpwx0AbTQwL4GyBlsb
      tvrvjm1hzNMcmgEsS1olapljTah5rY0XAVhbs9J9hzGodw4gTq4dO4b2I4vj7cYnePjY2req
      VQOs1daIOeEajDPoosJ6lOLcygZYWeO1cgwlOW6TI/ynP/9F3HDmLJ5+7hn8yWvP4fO33Y9f
      //nPf+SDSPWXP8pzpFzwc9ne3jZhKomu5oEWJTRQFa7EJWCDPBIZ+YEYY4O+Zy5hlmACeZl7
      334b8WTZFmMMhqm9F8ya7dPEZg6Yzme+EmB3PFQGqeueHS4EmdBns5nnsbuyAGmSJvkMsYww
      ygbO7RjeaBZqvKQQ2Nvfx//49J+2imlzZlMOJttHKE6vfuSNFAaoxxPwzRUf0A00GL2ltgQD
      Ke7DgoC9ssgst1R0dLzfTPfZBftNK+7BHkk9noClMXiWtNcUBiLIfk1CsTKNt2xaadw+3MRr
      k218/tw9+MpTX/hYGp35fI68LLC+uoaqqlBVlTWuRtFSJ06gAyfhBcCltnap5hiaAAU6HIwx
      74XJAChoaBgI18+smKNUFc6eOgPGGCbTiWWdXH9WTggqlgMYZU3eSLLwUjHtrlrWb0PPhob5
      /0ejkf88OjrygjlgZZxKVcjLEkVdgsEWUGNgGGaDBT8ZEoSN4dhYX8c/vP8xvH75Ii4f7ePI
      1FCxxKYW+K1f/DL+z+e/hzqNbPxtWTUs0HFNCpi6cQqkmfUKnvbCgpalb7P1dA62ubZUWO9r
      4X0NXLCWyhUAkJdg603YYTM+iwwqJ6wLLgDGwFmjkZpw4JV8Dw+OTuGrn/vix2LBiHLPZtY3
      qaxKL7MB8DECSZIcKyPI7sJwzpEIYY1djKOoSxQ1fBghRXHRxEXAXlAqE6W0B8Y8z33KdCq8
      N83n1jDiorOsN6Sxalatfc7Pmg5joPokQZwwo02X0vCyAo3GoShs/qA4jltUgDLc0Yb5fWUO
      6wYUkdjA0Hh375134d4774JWGpOjI1zZ3caJ9U2cOrGJR0+cw9b0ELefOoPbz96Et69dxtNX
      34Y55hBora3evVJAJLzygVqzPwFD1HNIw3sZY1YfrzVYT1G6sC3IRGiyPZNgr+2GwFQ1WF4B
      6fG8t9MPeYQnhYBhDUXgeYVffeqzH1/+cPvLOUdZFgsIgWxSVVX5cMi+5tOjU/haHbgOGGNr
      dJV1hdq5D3cXLDSgFS6OE7CCM6VMIa0PZzYfkNYKcPxrXhdgDP6eLMgDwxmD1gq1MRA89io7
      oPEV4mD+ABGZT9MUk8nEu3aHmcPCcQ+SFKvZEHlV2Mx1nRQxAFxVmsi7VjOvGOCQkcDa+hpO
      nDjhN+WXfu6zLfJ7w9mzSKMI337/dSi5nMyLjRVUV3bAXVryPqzdEr07LEv3N8Dl9zmaQW6u
      Ln3vwvPGQO8f2bpgjMHU1orMIgnDGcAZ9GQGee70sX0yxxZ6p7yABWUAHjl1M2664YZj+ziu
      2TgF5rJuG8ROIB4MBpjP55jNry+/aysoHmjznV5odfr7cCLA4sJvrK7Z1NNFjnk+t9FhVZA6
      hVn1KieWynk55lVp+X1X1EAKmw6FWDFtmqIdtroKsU8MYA6ru0WJ49hTAK8W1E2yLcDaDqie
      AYCF2gPhgQkTMxG1IvkgLwswxiBFv76cnnv8gYexkmZ47t03cWl2gCIWrQB1pRS4MYCUQFV7
      f5rrxo5sMSrAGAMWR0B5uMBGhulruu9Qe4dWZoiD7Bo0UgsAQFFfV5D8sjWNC4UvPfrkx8b+
      1Ciu3DDglFOfAzbxbV7k0Lqd7a9vvrJL/rouEYTxyKeldFi+6zQnhIAyGoeTIwyyAQ6ODp0z
      WPvFnHP/u7UJkGs1XA1i6dgcAWZ04LasIZxhKi9LxM5/nipqMWadqwaDwYLWJ5wL+aRoreHq
      TXj2yy+sG6MQ7aqJZIMIKVFYsd26dXeq1bt23x134d477sL4YIz3Ln+A81tXcH5/C0UWWWAy
      Bnx9CL17CHZyrZ//7wjxIUbta8YYgHMrj4hFtqeLwNTOAfjqwB6cdk/uvrZX6Yc1f+jag8Kj
      Z2/F6VOnrquPD+tfSoEqqA8HWA3g+to68jxHVVUuK2GFoQueb/WxtbVlWmohxqz2houFw0BC
      roGtzOEDSmD9hVZGI1RVjbXVVczzHPsH+74in3dFNvDBKhQEYtkuqzmg/PmhmwIJ0eF1yUUj
      jLuxkUMZYF0tQswXBs94m4fj8UtVYZCktgZZbWMIulkmFgXDxdYnsC/LpGFgUJUV/u+/+I94
      XzbxFkxp1AdTiE2brjDUdHX7bx28YAyt8VY19HhiVaEBErIpZlzBDGN8XQTWU6rWBBy2umZV
      n/1zchrDzrWQPY3yCv/9V/+pLxzycRvx91JKVFXVaw8wxuYUsmMzGA1HyylACOiWl9e+rDyp
      QZkjOWVdoahLlMqyK6SWpBNpjEGWpjBmDXleQDu/d3pXJKTP/Z5E7ewO9h3CZvzqBIRY7ZHz
      C1I1kg5Ak2tBCASkFguTeoXUyMCA68bSyjkD08vjoIkKUg7+ML1flwUK1yXsx90NxhmSOAYz
      QX0FwSFXBqi39mHKGvLkmvXZ6TzfuE00Kuo+WYdF0paA2h6DxRH46hBq7wCqKAEhAKPBhLBV
      YXg/1aHAAFPVxwahd9W2fp2D+28ZbvytgZ8auUx381CFYx8MBseqWHmI0UJ1Ua3q3nq85FpM
      AEFFHtZX1zCZTTGZTrG1s428yAHGsL6+jtFwhC6VGSRZb2SUb8bGBc/K3AugtYvwoixyXZag
      qirfH6lBaYFCLEqfVFkki5PA1UMg6QnTC4FbaeXqoxnMinwhK3UIpMTuKZcQILjRWtt7KIqJ
      BMTpDfBRhmp73O/jw5rg+W627oV7Iwl5egM8iaB2xjhZMsjTG5Cn1yHPbFrqwJdbhJmTMfT+
      US8F7OOzl9HJB268ZcmV62/LhP6+9mH2hVZWCHogi5MmaVVncg2Ja/z3B9kAVV0jLwjbA0dH
      RxgfHGA6nbRyjobvioRssQgecNxmNlFgNm1IEsVI4xTREr1uVVU+6xe5GZM+uMuauJEsCPVV
      Xft4hy7mNsZgWsxbAM/YEpdowCd40tpmx5gVuUsO3MRVz6B63+M3aH3oszGYLliZ5rcP0/Mb
      Y8CyBPL0BtZObEKUxxflXnhea8AAPKg+36xBm4sAlqzJrMCDd91z3e/sHcdHAP7raVYLFPBo
      xHJkceKxbsiiSCGgjYTgBlxwDLMhpvMZZs65TbrqLJWqEIsIeV6griwWJK0JqRv72C/GmBdI
      SecPoBXALoWNtiqq0soGbmyMMe8dCKBVxJuuhxRAdtglf52h98AwZsuYziubJKArh4T3dZ9N
      ZOQiCu3hnRc5/vCZ72Fb1GBmkW0wxtgKOsMUppzClLW1EXQOQctV4hiADscyUxWYXp5TKezP
      yzIHU4j1IRBHUNtj8GFqBeye/pe1DBwbax+xHG1nPCHL97NoEoAvIcrQRFcZY5BXhRVQtfYO
      Z8YYX51xY2UFh5OjFu9JLgphrVdqiTtUJNh1szrUqrbxs8DCAWkJg7ARRQzN+2izQoMXzYOy
      WNN4WjrpziEkzNwH1PQbIYdu1flwo7pUjaK8prMZXnzzNfzk2kUcRhaDLxModVlCyhHYxgrU
      1T2wJAYbJGBpvDC+cJ2W+T5ROyznUKKZVzjOvjkDgCkrMFdHQGyuot4+gDyzmF37uIOQt1LZ
      f7T2s8b81DjQZCkggY0wfxh+V9alTU5VNgUdJrMpVkcrWF9d6x1s9/8M7UDm7mQqpWycgONp
      u5P29xtjc/o4SuITS7lPSiNIz9D3sB/G2vmGQrakKy+E4zXG6sMZYyjdYaudIx312Z07HXYA
      2N7ZwcvX3sehtDIBZXDoNqa0T0/DOIe88STY6gCmrKCu7cMczXoPAIAPdQ8WhsEEMkS4JosD
      YTAuF5BfKykgNldQX3WZKDrC9zI5AZHAZLJYcuqjtJ/5ASDvQwrOpjpUlHjWk8AeYKjrGuPD
      g5ZrMgl6tVKu4ksbGBljXoNCghz1HcvIBY9w10e7NBH1wXuoC31P03QhOKJLQaiF86MD16dy
      DK8372eolE2/YrRBXuaYFXPkVelzWobaKTqot958M373C7+OL52+C6O58gFBXZA5aSI8dPaW
      tjwQSYi1EeTZTZhawzg+PpQDuglyu4IxK2t85o77AMlb7NPSZgz00RxslLVZpkhCnt20Hqxb
      Y6xcOcANcwBFtRRITSTxVz/5Ma5cufLR5I+/I+wPOC2QQWPYoVeUddlKWXjc6U7iGImr9Edx
      wEVd+tDDMI+QCrA7JcvSrrRprWpvlSWM2oflumOie4UQSNPU970MoPu0Tl1Nj88qtwSbaWNz
      GYVlWTnjiIWE9R3rsQy7zyiK8OiDD+O/+uWv4qmNc4hmJRAKkEWNX3voMXzlyV/AZtVOKkz/
      FxsjqPGR27PA4jovUF3ds+sBBj2ewBzOgHkB5CUeWj2D9472YKLri6AysxwsW+73w9MY4uwm
      Dk+vYGd6hM+s3IA0X1JkTwp8f/w+/tV/+LfY39/v6a3n/R/hoHycxn3KENPGrrGwJSrTOEEa
      2bTefXy9HWRQxxaWmsTCljaicEXrE2JQVAU445gWc6dR0U4TyLzXqWUzjPdHCoG47zvFLBhj
      y3OSbDGfzzGZTJoQzYDV6B7oEHvS95Ba+d8dGEsuEDt3Cm20S9CljkUUdYflytIMv/joE/iv
      f/Er+GR6AqKoMSgN/vFDT+K2czcjSRL85iefgCjqtjmVwTrsCQ51dQ/6cAYYaxHWhzOwjRHK
      q7uodg9gkgiIBFhe4Z8++CR+58tfweF8kX3qNmOM7bfWrVphfQiJVQpPnbwV//I/+We46667
      MRfHGAsB1IK1vHOPG8Oy9/6smqSXaK1ROQurdDGrCbfJSylzWxLF0KZY6GQ6myJLM8RRAuOy
      e/l8oS4LHGccSRxDa+OLR7eMVgCYqxS5TG0ZCqLh7+RDb4xNHhuyHC0hlVntS18WCbovFIZJ
      IxZeDwNSIi872VjlsipdIqxFLQVz60fNGIPZbIYsy7C6uorffOoL+LmtVkasFgAAIABJREFU
      LURxhPXVNe+Feu7Gm/DUtTvx3e13vTuDx/i1gji1Dl2UqLf2gVqDn1y1PPqptraFDVL89MpF
      PPbpR68rp6Y+mIIlUSvZVV9jjOHmaIR/9Mu/ijzP8T9/8498LbW1wy0MeYl9PcB8dbNZ80hi
      Z7yP06ePd6gL3/F31WRZV0gcy2ExlG7l87R6cfsbxcp2Wcd5kWNe5JBSYpQNkee51ywpl52t
      hgKrbD6csq488NtMcVZ2EEy0eNfuAoSA2dL0uKwIjPHWvV0evnRJtmTomhG08J2hg2BIdfrS
      x0ghYOASWBVzZC6WAaZxzeYuoJ8o7Xw+x7/+06/jzOZJPHzTrbj79jtx9vRpKK0wL3Nf8JkB
      +MzDn8K7f3UNF83cuzO4hYGZziFWhsAws0mwlqgItdb46fgq3nv/og1rrRSMsJnlFrB6VQNK
      gWfXVyXy0dvuhjEGrzz/Z7iXv4aX9k/iZJzjtx7aQZYA5y8xfH1vCEQRGGdAJPC9V1/E/Xcv
      j//9u+T7wyb+u3/xz3/fxgALZ5hq6tFyFwdMhaspeW1fY4xhbWUVdV1jms+scOuMPtaJDDDM
      +BSKBLyccygXYimCOIM+lVqI1ek7fS4LYWwEb3sAGGM2b2nPQTmO5PapRbvvoIi3yNUwoN/J
      +GUM5VgSODw8xA+vvIO9SOP1/Wt47rWf2vjZ2dzWwnUpwMkn654bbkY2r7E73kchGUylYOY5
      9DS3dbwYA0/7K176+XGG8fYuvvLoZ3FSS7wx3lqsAmkM2NYBxOnrd1fYZDE20hhq9//F/edK
      PHLmEJ+4YY44svPfWDHA3hHO1BnWkeGoqrCVT/DJs7diZbR4yP6+gB8AxD//l//i9zlnztnM
      6u+VYyk4t9XXiSKEmxm2OIowzGwex8ls2lxgNg9+LCOrKtQG2rR5ZcBiOe48TFssC/oXoavO
      7Dso3UNSOf8dP/FAO9LXX98f0K/rJtlhXuaIhA0PVYH/E7FktL6ArZT+ws4HtmwRZ1CxxJaa
      443xNTx34S289PYb2IwznNzYtHESaYabz96A4nCCC5N96P1DiFMb4GtDW9m+qi3bMkhaY6V9
      YO5zf3KIT914K64d7OOd+dheC+azVhhActRJv5AccIC2a23w+E23Y3blz3F2fceurWDobtu5
      kxXuODOGqA7xmU/8Nn76yiu4tr2FG0+chtYal69cbuWN+vsAfgCQkYhaqaYrVSOvCiQy9pQg
      NBz5B4XE6mgFUkpbyLosbcyANhAO+8UyAhW7EIx8cgDB64UU4a18lT3sS9iWaWb6xknXSOfP
      nOYmglzQPXY1LccdvvaPcEH6LowTVCWyoVjd+fz4/BuuZJFl3UBYTwjojOPAGHzrtedx9223
      +7hoALjrxpvx3ddetAWv7YDs+o0ymDSG2tqH2Fhtahp33jsqtvHWu9/Dpx7+NZw7dcbWdKsr
      W8m+LPDgbXfiD//maXygc2/pbdlQOlO/f3gCa2KC9ZXzdjw9FNX7LBmNQVLj8rVryE+M8Dqb
      4q1v/3twpWFqhf/mV/7h0oS4f1dNWhUk8+4O0un/Q4MVGXdCFmhtZRXT+RQAQ17kNqV6FCMh
      oCdsy9DiaTWMzf1faQhm2R/jND4EvK3oqyWtjyUJWaTuxtNmZLHzDeps5TKqs4wdC+8v8gKD
      waBFuiPRUBWltbVvOMRwbXsbrx1tQQ6zlkzh52UMDGMYRwY/fPF5PPnJR3ycxI033IB7b7oF
      b+nJAjAyaZ3o1O4hhPPrb4U3zue45/QhlHwNL7xc4MF7fwW33vJQS/YxxuC/PXczfvjCc/iz
      N15AwQzuGWxiWuaYVgUmdYkaBkwbbMgEj9x+GuzwG4icLbSLmkjFsX8UYabvQHriMTzz2hvQ
      wqZPVLGAgsB9ySncdOONvRT977JJAF7dSOQ6i1PHr9ZBTqAG+EfDEfIyR14UMAY+mqvFkzOi
      HoDk0pdSNUG5E200sihZcAdYZrgKW9cnpmtsC1vbC7N9WLoam+4h6qpcu/e//NYbePqNl/C7
      X/wNX/S6m06mVjUiSGhm3zccZEjAUQbvpDH7vDXM6s2f3noXR38zxy8/9iQ+uHoFk+kE95+8
      EW+/+xLMsD9xgDy5hnp7H2JzrRUIc1Zdxcam2+voXbz41v+G19++G5968Nexu3cFV7ffwiDb
      xObaTXjq0Z/DPbfegd3xHs6dOYP3L76LfLqNUzfcC6U0Lpz/CeL6JWyolzBYa9ZoOpfYOjoF
      qD3cdKpEJDUu753GrQ/9HjZPnML/8+d/gi1etarCAMBjDz78sbO7/W2ajORikWhjDOZlYVNQ
      C4k4in1Y4iDLAG1wNJ04TCd9NRellE1q5YCoUtazUmkNIWytKeZ8+3WgWeKMQci2ABy2PqDk
      jC8IxMvYJ6JglOuTGuXglFx4leYyYZcqtoTtwgfv40/ffhFlyvHN536Ef/C5L/o6wWEQfxLH
      UHVT5jNNM3zmpjvxl9sXfOih0srXAWuNPxJ4braFN7/5h5gIY4PrqxomL2HyAmxzBZSZLhyz
      OLEGvXsIvrliLca7Y9xxbwmgkX2iuIZhr+MHL7wJY4A4UcjnwJVr53DTTbfg7OnTSGOJ9178
      V9gc7YEnDHvvb2KeF7j35BScLbq87BX34TNf+j1orfHGqz/CbOsbEGufx3C0im9899v4yeFV
      H04ZjjmVf/s8nx+nyVorRIwtYDbtfOW7FtE0TrA73nf6cdNKH0h4VimFmSuORwIgkWHRwexE
      ZbgLdgnDCUNACClCly3pYv/uNaVtaGU35741AvJjD0/D+zJf4BkAdvb28Acv/w3qWIAZg1dm
      Ozj81p9gPRtiFKcYJAluO3sjzpw+4w+eNvYISSHwyXsfwHOX3sWhqH2MhXIq4W5jjGHi8m0y
      AEgisCSCKWvovSPwEx1fLPsQ+Jp1peZxDHbmBJ69JHD/5g5OnWrPMR1YpcTVSwaTscQ9d9yJ
      oiiwsrKCy5cvY32wBwuzBidGuzDDrlWd4eLOKUCcxq33/YY9gELgwU88hYODh5CmGQ4PD/HX
      H7wFDBaLqHPG0Tvxv4cmrQFqsfIJVWA3BmDcqjIjI8FcidKyKj3DZ+9v0hMyp0liAAZOMOxq
      ZsJ44ForqCoolgbWCkk8lhXqsEstXtq9M42SlkxD92zv7uDClUv49AMPeRmk23fYiA+fzqb4
      tz9+GrMooD5S4CIKXCwKmNzaJfgHb2KTRbj35I2499ytuOHs2YaNzAY4N9rAa+rQW8kZsKhm
      OaaxWAJRBDPNW4DFGLMAFUeQpxp1Zrl+Eq9tK2xujiHEojX87E0c+gaFyexpPPv8HL/6pX+M
      JE6Q7zNEsk1hwrW5cnQfHvmF/9K7ob/3/rt4/40/xeqJT+Guez+NJEksu9wjTxFiHB99tGLc
      P6smjYHPvUONgmKUU1dSCnUL6Nan+9rOVgvbmv+fufcKtiRJ7/t+meWOu962d9M9Paanx+7u
      7GIHu8AaAAsCBAiSSyM6URGkQhKDCirE0INCj1SEFKEQI/TAoMQICoIhuFhwARK7mJ2dndnx
      0+N6pse199e7Y8tl6iGr6lTVOed29ywWwS/i9r19TlVmVtaXmZ/9f1qDMPnEUkjqXpUgCkYq
      NUJQ0Ji01sSps0nIQqL6KKWoLKcPu1aIfohFWbT5zhsvsmobW/sTD50q3Ke1Cfv2HLegqMZx
      zL97+UesWolYRRFHJ2tfSnRFsg680rzFy+9dxX4tZP/4NIcmZzkwv8hMpY7e3swsQMBATm46
      FvLzJfqMI8eqxEsbWJ4z9N4y+Y0pNtY3mV+QlE9KowMKHFezf8/9AExOTXPtqmSsHmfX5RHq
      ohisyj5sx5xivt/jxse/x+GZq2j1AS8/+yJPf+2f8MLZtwolp8q2/j87e4aHDx5jcqJ4mv2s
      yd6t0ICVxf/3i7w5vV5W0T1vPk2Z0bZsE/ogTdrjMOY1bY3e5pQ2pZFkKTF9lHl0mHKavz5/
      SuTzEU7vP8qnKzc5uv9gdoqljJ7+P7/Ildb88WsvclP4hXCCYUkpAzud6xC7DlfpcXX7Bnrl
      MqIbEKUVOIUwObmxwp4e70OjKI2IYsM8YtBUi9IGq2ejae7XGg9JtVGnGQdo18YKFYuVBraQ
      +NKiuT3B7NxOJnWUlf1us8bRL5rMLcdxUFoCaayX+SeFcJdSMx7/kA/fG+eRx7/Oube/x4Gp
      a9mzT82f4E9ffoEzzaUClEr5PTZt+NM3XuLbX/uVv3gr0CgyxTFMaG86KCkEm9tbIEiqMMbm
      tFD9EArPcekFPr42eD/5jDKtdZZUnlJ5F7dyVeIHxjQs8VsU632VKS/j5xfKFx95jK/VvoS0
      JFppwijEsfsJ9ILiInrxnTc5110fsI+Xd7P0RBjlSwAQngOeg0PdjD3pTzU7JvnEsaltdRnv
      RqACbk81Ck4u04jB8bFmJgoe3Ueqs3z9qS/S6XRY395idmqKscZYNtYgCDh77kd09Tt4lf7B
      0m5ppDrAg8e/jOu6BEHAp+/+LntmQvoAualt3ywCDbiOIux8l1deWGXOfRkpFQJJswNz+x/l
      3aW3h84BgQm9wbFBSm5urO06Zz8LsvOMl6dUBIhLDGdJq58ziwkrMJ7j0m4s+kBS+TbTBUIY
      9GsJC4m0ZBKLBKBNTMuQsQ0D783GNiQ9MaVUlIvifnGNarVKFEUEnT54ly99alVTL7nb7WZ9
      vPXROV5auQJO0TlYnrOyjyFbfAw/8/I+ADDhzHJ+yiin0sayrnPqQR/5yRFuWTJhlqSlKKnL
      lhN9tFLsnZxBCc34+DgTEwZjKDWvKmUqrD/5+C9x+cphri59nzjSzE6c5vQjT7Nv3/7sHW5u
      riPCC4hUxEvEMFM9R4CwknwPRb0KDV5ILF3mmdfbs3x+/2H++swCz73xKm/cukTXk4hIcchp
      8K2nn8a1HVqtFn/6/ptEOh5qmv5Z0gA4bvrC/DAYCFkA6Pk9piYmabZbxIlvwE4sHGYySGp6
      eZmcn2eWVBYPo4h8sTgwCwEh+gprru/MWgADzD9KByhaKpKwaQyMS6ViQFN7vV6WMWYnFdvT
      KM1Go0G32+X8lcs8e/XcIPNHMbYfEVVdI4boPkjVwMaS6EgwJJwgmSgd968hVlQth8l6yOSk
      xHKWkNszuKEmGqsSjlVQG02s2clcF2bjeOPGRe4/cgzpeBnUZWYoEFDxPBzX4eT9p3GsGp3O
      KlJs8+wP/5DZvXuZGp/jqceeZnJyGlX9Ilo/WzDSlK1zKrcBonTf4uUcQEjJ+Pg4v/G1b/LM
      xgYvn32bg3OLPHz/yYLd/08uvEdvu5kVyvuLoqynvK3dmAjtLHzAkv1k7G6C6z85NoEf+Bn4
      LbpfTyAfRZlPMM8rlo5tD4QHp/elyfOpKDUsxDgv7pRlWCDzQUghC0n4Bgm6R61eo9PpFHQC
      I/YY3J/OVhfLsqhXa7z84XtEsv8Msu2jmx0TyGdLrO02an4CmduJhynjZRo4GdpdZM1DhjHj
      Gx2adovTJxUgefyBHpPXb3O7WWN7K0JF4QCWT9rHsgz5/Vd+xB67ytef+SpamyA8KQQVr8LY
      2BiffPwqSze/y1i9w2RVY9uw3nJZv3WLypbkwJ7DHDp0mOMPfoXzb77EvtliDkEW9kDfEKFT
      Pso2ApswhboEZqan+bWvfA0wpvK1jXWmJia5eesmy80taloMbhw/Y8rAcaG/moUwyAxVt0IY
      hyilC1tWzzexPxONsUx+lFLiij6e5DALTdpXirxWtt+nzJhfGGnGlSUtXMfNcOdjrZBaDphB
      0/bSLDHbKmIdpU4xS0h8VdRD8jK8JS1Ty6zX4+/80q/x/qcf8861izi2xcH9Uzy3dpk4ce7F
      my3k6jYqVlhRjN4zDd5wHQZyUykwJZOEQGo4EG2zIDpMeMBUm8oBi1rdXF2tCh46oXmINq++
      WeNKxRsKu57O/XXdZVpWs5MnNVE3Gg2uXjlHd+d32LtQTJ4XtkWrpanWMTW4gPHxCVT1S0Tx
      s9iWsfm3utDzBdPjiW5QMoSk43AdmSF9l0lKScWrIITgtY/eB89hmsoAhM7PmgbOmvwqN5Gh
      EiUGU9y01gRhyOz0DDvb2wN2/nx7eeAm13Hp+j2kjAvMmbe+pPdHuQyu/E4ZJ9lXaU7vMCuQ
      V1KilTbJ67VqjYpXKSTjlBdPqiPEyjGIdHHMw8fv59SJk2it2dzc5Plb54mrLjqMUZ0eYu+s
      EZGVRi1vIvbODMr8kYnBT/vJ5GqlWNhZ5bce2qBeMWN57SLU68NNyJ4FVPuofWVTZkpL7Z1C
      XYdq1cQeLS19yFQ9zmZUAzdvaYIgZv6gx+a65sKN85y8/wGklDzyxC9x/uMZ/F4Tx3GY2n8f
      Nz/4Q6YnLmQibt8qJpKAOMmkdYaPzh7m5Kmv4Ps+y0u3qVYrLCyamJ9G3RgAbmysooXm4f2H
      fqp6X5+F7LxpLbXMpLJ2ivk5ymIZRCFRFFKpVExoBPSD2jALJHVo9UWQfkBa+YWVE7ilEJkH
      Ny9bCynRsQnX8BwHpTRS9nMC8gydwr7blsX01JQ5gaKIXq9HpVKh3WkXcgnyIRdZqmXynSnc
      bTE+Ps6cU2NZmCJwYqJOvGxyXGW9Yurt3lijUq+hLMF4pcbJub3MTU7zvfPvEqkIu9NmLO6y
      6PaYc3yeOKmoeSZOSinoieHMDyBEhNCATEWP1EKTv0awonrcWl7i/vuOZ6jZACouijNXb8I7
      NxvEUtHciLCn6pxf+git/1KycGqcevSZ7H0FQcDNj1Yy10S2+SWCghHaoF6N6XX/gJeffQUZ
      rzMz3uVK8xBz3/wfSxuWAKWYbIwNZ7SfIdlKKXpRkNT9MrE6prq6ZdANdrFIRWFEt9NF2hae
      57HTama7suuYCU8xPstiykCtpiEWFehDtuTFKSkEnu3SC316QUDV9Qyas9svxZkhR0jjlrdy
      imC32yVKlPByDsIwpusFPlXXy3SROI45ODnDcmsZAKtRg4ZBTFbtLkw3oFYh6ATsr0/Q8nus
      X3iOg0fG+aKo0bBv8fDDEVWvXLLJ/G71NLI6euJtG1P9Xfb9MOX3JKKYrxw8yUMPPIjrFOO9
      bi1vcWNJ0u4KWi2FX2tQmXYR6z3CQOEKODh7ZOAkT//fbreQIrV4pRa51EikCwqzY8ccnr1G
      Wsg7Vje4ffsW+/btz9r96qnH+d33XuaNix/x5KnTf7FWIINx2a/GaGchEDqTt9MH91yXildh
      p9XMdp5e4GNrO9tF0+A213YyWBMrOVGU1viBT8X1iopyQsMsOMP0iFipvnNOGLz/NKK1TFJI
      xsbGMvydOI6zKvXp6VDup9ynSXnsJ+lLKYcWCwGQ9Wr2t6p7XKPHeG+VXz7lU6+scXSWwmmW
      n9/09/U1zeze0aJAtepCEBuTaIm0H3LAHeMbTzzFw6Wqi5ubG3zy/utcWF/G0lUWCXi8oXl2
      LcTuaYIeWK6FHWnuP/DAyP6npqY5fPqfcvHsb7Nv6jKOqYKEpm9I8CO43nyGsfEZuusvcmBu
      HSklXR7geAka/bGHTqGAV9/4Q9549l/g1A8zNn2C4w888TP3CYirN65r83JNGHTZoqIxgXFh
      HDE7PYvnmjKomzv92I2ZySk2trcyxhJCUPeqJs83J16k39/NCi+LSOW/ozgi1oapK64HmgIz
      p+Q4Do1c2t3K2ipoMqz/gvUrsXeXx11mVICrt27wu++9QuQOwokXxLhul2/PXODY/Gh/S/5Z
      lYJXrmkWjgxiG7Xbms0VRS88yMTCaV5ZukwvKc7hxvDg9B6eefgxDh88mJ12vV6PqxfO0bz+
      JpX2eebqEdtdTcPT2BYsbWvet2x2uhbbdp0oUMiWx5ce/zKdTptHHniUxYXFoVhLYRjy3lvf
      p+I/myjEmBgoKbm5Kjn59L+g0Wiw02zy/js/wJUtHvvC3x6q6Gqt+eCd55kOvoPrQC8QrESf
      4/TTfwN7hFP0p6Fss7t287pOMW1SWbv8EoUQ+GHA1OQUnuuytbNdSH2cGBtnc3sLpRQ1r2pM
      p0laYFrgIv+Sy8xcpjuJJPnvUgtR3pyZv8+2bcbGxjLQ3K3trYHcY+jHQ+WVxnx/ectW+tml
      61f5/Q9eJx6yCNL2Jzdu898+vnrnN5LQ2esae4+F4xSf2/c1n3wQ8dh9Gq1hZdOjHR9EWA3G
      xxfZf+Ao+/btw7Ydtrc22Ny4xqXz59lc/pAn53zmS+J1aqp8Y0njHjc+m6XbMVdu25w89Dmu
      tD5FVDRRN2bcnuK+Pffz2AOPMzs7NzA3169dYOXiv2VhYiVDF7xwo8qXf/V/H3jPu+3oURTx
      zgv/J4cnLwIQK1gRv84jT37jrufvbkkpZeoLVBwPkShTQRTgWs7AIFMGiKJoaAn7MIpwHRc/
      9AHdB7IdosiN8uIOC1Yb9nmZTJJNv80gCWcQuXaUUnS7XeNdHqJ8K63QShPpGJlTLPM1DfIY
      /GlfRw8c4sTl83wUFiMZ09MEwBNx3gd2RwojjSN0co+5aWVN8+aNWXbq05y7oXCCLlUCpqwV
      JpybLNTfhU3BxWUXsKl6HTxbM6Y1n/+c5NwHmvkxuzDnUhgIc5WT2Rf3WIRdh632OqJqrrVr
      Fh12+GDjLd5/7m3umznJlx57htnZ2aytAwfvY3zin/LRmX/FgakrCAF2de/AnNyJbNvmxBN/
      l0/e+m321T/FdSBa/zHd7s9Rrd5dVZq7JSklnueRmnsQicMIGNjtwOwYSptVU61UMm+t53rU
      q1WTH1xSKPNy+Sj5uuwLSBk29c6WFeX8T7owwegefhgk8UnGgZfmIwN0/C7dXjeT+/NydxrY
      59h2lrZYrsFbFoM0JnbodnM4wlkaDrFSmeXSSvG7/LjLn09XwffNvXGsee+8w/NLR9kZX0jA
      cStEk1M0Jxe4NnaUs94JLm3VmBzTLM74LM60mWhoBNooqsBaR7HaVKhyl1pndbQAej1F4O9h
      Q5QGTLJJeDGfNj/g//7B/8UfPfsd1tbXsjmcnJzm0Z/7J1zbfpROD6T92UogTUzO8MRX/htW
      9C8QK/DkDp1O5843fkaSkDKBeWl55sisLokTRQpJs91iY2uT8cYYE2Pjpnj01iY7zR2qbiVj
      oGFUYLrSMQoMgNjm7xu2cKI4ohP06IU+QRhkleTThSiEyEx/aa5zWtMr/5N/5l3rixV2UFON
      ZsKrDVxf+H+1wo+XpohVcRENEwGFEBxekFjrMTeva374wTQfcgxdrw19/tTZt90b4hBDJpEb
      muqExX+86hHnHq3V07x3WRGswNpbIdc/DLjwnqZr97C80TqaEAKrJrjQ+pDf/sG/KTBntVLl
      qWf+S6Kpf8yDj//lz6zAWpbFyUd/hWubi0ipPzOi9ChK9RfIFchIv8iT67pUa1WQxmlh2f3S
      p5s72/R6PYIgyGAU87szDGfctJ9hjJ7f7cugVMMYM4iiZCGYUpxOAu2S7y21W5dt/WU9JEza
      GnXiDBvv2vo6didA+SFlShk0Voob3jwf3WAgpTJ/bb9P2DsJ72zvZ3N8b7+aZGkOUzEGoB27
      A9/ttAQzE2Zhf/5+zdOHO5xfNqfA8rbi4kXNXGDxQN3mlJDMhzG/+fmAR8evMrO9jr/azoB7
      AVSkCLsRQTsibEUEzZhWu8ntpduFvh3b4eTJRxgf/+ni+qvVKgdP/T1alV9mbOzP1z9gCiAm
      euDq6qoeEHeUMhgtrsvG9iY6DXBShtGkkDhJmHN5Jx+m7A477qEYI3SndtLr85/1At+ERAiD
      P5THLk2V2Wq1molUUcLkAzqAUoQqwrWcQrRpfjz5z9Y2Nnjv+iVev36eqOKgN5sGgSEIkfUK
      qusjqh666yPrLrrZZSZu8vce3qAxwr5vnlFwacPmT67NsD05X5ijETdxUC3z1OQScZic1jIR
      Z9EcWTT3rm9qlj6UNGLJbV8xZgum3X60rdKwMRNx6sF+X+9chLfCWZyajW4GPDm/wNz0LJ7n
      4Lk2rmNOWcdx0VoRRzGRvZc9B09/5p3/L4K01txeWWJuehbHcQYrxYPZfaMownEMOG66E3QD
      Ex2a9+QOY/IyY2ei1BDbf3pN2Saf/h5mPUjvydfwHSZWaG2cXuWFABSsRqIUx1SesLTdWMW8
      /eEH/PjaJ/ieha4YZVtOj4PWppidbWF5Js5JNls4bhVmGrR0nf/3I4Fjw4Ld5uGZHgfnyGoe
      A7x2xeH54CjRmI1a2zblSD0n87aWx+VtrvMrp29z8yYcXQSNQGuDvDGehFGsbyvOvS04UbHA
      gsO1JGTcTFrWVlk/ODyvYXWN5R2bU3ti9s1smC+i5AfjBY6S+drYEdzcngVnlr179/OfK+VF
      UD8ITJXIYfI4mJpbtUq1LyczKNaUk1DyDFNm6LIMnF8g5Z23vKAKDHuHhZH/LIV2TBeZ1qby
      jdYm4tW2bIIwyEy25QhVrTXdXo8/eOFZdiKfLUcnwTglphSluPwwGvh+e2YRpRRrUvLRTsTY
      7Q1Oj2/xhSMRz5+v8iqH0Z6pCCmnxlA7bWh20HGMnGggqi7EGrWxgw4jJuQWN27BQ4eEAeHS
      cG05ZmlH8tB+TRhr3ljxCKsqi9kZtjsLBh3+U2MCUxAmV/ADSIsToiGI4MbWIt7kY8ydOMVJ
      28UZEfz2nwtJKVmYnUcIUwtjICGmzKyu62Y208y8p8ns78NCksuUb7OsZJeBrMq/YVAxHSaT
      l0+jMDaQ4rZtU61UaTZNKaduLr3TJPtEhAlmaJyeEKlRIGnrP73+E65YPljGUHA3B7zuBli1
      omyePr9lWYiaTau2l+e707z7+hJrcweM/JIuYtuULs1On60mut1DK2UywKSgu+pzdKFFFMPH
      1zWXmw7WlEtlTvLc9RDPAW/aJhQxq5d95qpDFu49UPJmTLYbmptb0zz+C/88M43vNJtUq5Xd
      mvjPgnSim1U8b3RKpBAiExu01vi+n0CdBxlYbmplSX+yosSl3fueXuFfAAAgAElEQVRulOD8
      iTIMrGrUqVK+TuskmUfFzE3P0ul26PZ6po+cEiqlpOK4dJPcAzCmvm5Sv8BLQq873S7Xm5tQ
      GZ5zXPYXZNTrISbGB8Y3MD/AijOVbSSjRElrcsycKkn4g45jTtS2+fC6ZCl08KZt6vv6jsDx
      uf6rlRI2hWanHWEpwYwnGHPzyv7wkK9RFjkwTirfeSC7UWtNpeLh/Ay8trtREJjTu1qp3vni
      hDa3txhPFGu7/IDpBFqWiYf3fb/EqH2MIGnJTEPPm8P8MMisQinuz7A+Rp0+UZJrnBXvKN03
      7J68GTNFaIviCD+pTWBCr/uLKC3c4di2KfonJJVkJ0sL9QHU6zX+1hd/gf/vR99nM+iigxD3
      wELWf95fkJIKI0aAVWdjTBeraicK8xDxbWDOciKWs73DTifC3ltjzE59E4aiSBP2FHEMKtKM
      rQacXkxitRSstDSXmzFH6hZKm7CiaNCQNdR7Fyu4uTGGPfNVPveln0fFip4ydeP+PJlfa+N4
      TYMYR5KAje0tFh33rkKpwyg0SH3JWO1RzBirGIdimVFLWtQrxu5dr9dxHGeoLF5QTiky6DDF
      OY2wzHZ3BnfKtI38rpQm7DulpPs0n7fX6+LZrhGHEm9sHiNIa52YTk2oRxiZRB2R71tDvd7g
      N774FX7/3ZdNLeSkaNwoZo23W3jjtaG7eX6cANZEDbXeMrpUo+RTgEwUK997gC1+9QHBjzYj
      6nNONi9Kg/6kxxFbYwmwJEyPyYyXHanZPyFxLM1GS7GlFLUFzfoyBuJE9s/Jds9hpTmNa/m4
      skWoazDxDA98+eep1eqF8aS1ne9Ew/hlGIVhSKvVolKpUKuN9gJrbTaUze0tZqam79iuJS1m
      pmYyXrJThkypb90ZbrWpVCqoxLoSBEG2CMIcesSoRZXufGVlNn+d0hqFpuJ6SfGMfhXIsnk0
      Fc/KHuwojKhXa2aBKI3nefi+j5dgHeWrSaYh0TWvmtUPKPfj2DYz09M8PrufV7dvE69sIBw7
      E0fKJMIQHPPSslh9wVDtQQiBM9MgbvWI1reNRQlGeAz6jHO80mKsAk9UQt68obCnbCo1SXM5
      4qk6NNyyJa24Ec3XBeeaitoezSMPwqdjmqV12D8vkqqPgi0+x+e++TfwfZ9Op02lUqFeH8Tz
      F6Jf23k3arZb7LSaCAQLs3Mjd+w4jul2u9Tr9YHQG601G9tb1JJiiK7jsGdugfWtTVrtFmN3
      yCmQScqu1gYdI3uD6VGTJk60Wi1zDCWiSKrApXrB9va2QVRIavD2Qp+KWxl4xXmsnbIMnA88
      y2R8IRCiX56oLIfm2/Act+DUSl92FIbEuePTsixqtVq2oDudTvY8aZvpaZBfvOn4LCFptVp8
      vLaE8ATWwrTB4fEcRL1SwAiKewGWa2WfGW8t/e18CAkhsMeqSDsg2GoiJhsDJ2c6Jq017LQ4
      vkchhMX+Sc3eiZgr6zGfrgsa29CYSRtmaBsiGVC9BkePmP/ff1hwY0WzsQOTDdhouRw89Y3s
      nVerdy9jjyQNcVQMRSlTt9ul2+3iui6uO7w4XxxF+L6BFrYtG9u2mRyfyNI474aEMHD9dsog
      achwait3HIcwigpioFKqkPiex+gpiw55xjWlWFUBhRr6GWB5M2g6UWmm2m5HWqwUvRz0ejqW
      tP+0EFsYhuZ5QlOaqV6vs7OzM3Rh5f8vhODSjWv82ftnWPPb0KiS7aQJUFWZpGOjlMS/vYUz
      00A41sDOP8qUKysObHf7GXn501EI8AMmOlucdjeYafQtOpaAY3MQhRpPDS6ccr9migVRTdGo
      9a/bPy+4clsTRLCxE7D67o/4wjO/MTQA8rPQWKOBH5iwlWHjC8Mw0yUrleEiphCCuZnZge88
      18X7DOO0wbidO51OFh/RaDSwbZuo1ysqeQJUciJ4FY9et1eAOTF1fgcxOFUGl8JQphtlKbqT
      udOSknqlVrgmjmNTc0Ap3JxNv9vrYSUOvm6vmyXJ5KM802Mx9ResrK3ynbOv4XsWuH05VAgB
      FRe13cKqF3dGYUlTuK7ZgTBGen3xbECJL79gITLvbH5+lNZMb63wy5MrHN4Hthw8TrTWbKxr
      7p/sbyRpolN+/m43FduBQlbh6P0M0KFFwdK64uACuM4LnH3pBkdO/x1mZu4+uC1Ii6VoTaVS
      KYg6o3Z/pRRn334R328xv3iCmZmZgWvK85Let7K+imM7zExN3/UYU7JTQNN0wEII1jY3MjNg
      3rqi0LTbbYSUVCtVbMum3W4Tx3EB5SH/sMAAMtwwpS6V6fPikEZnYRjpdbFWGY5p+fRIzbJS
      S3SizOnEUZcXU1rtNu1ul5rXrymcnoT1ej0T/+ZmZnlkZh9vbt+CHKS3EALh2MhGjXirhZyo
      D77UOEbm/ACpalkAzSq9DB3FJt+x/JK6Pf7SzAr3zVvZeMt0dU2zWMlvKKC0yJcHYK2jsPfH
      PL4okpCJgWYQAvbM9jexAxMXuX32f2V94a9y38mn7qjotlpN3vnx/0F1+lEefvzrmSUnJddx
      8DxvYL42N9dxdv6IuUZMJzq8ax/F8Zpn7fS6jF4yo0kKYSoWQp9hKwnzp5RCJKaMl0Iguq6L
      TKo+5kWPMCqGJKef53+G2cTzk6u0ot3r4pfsc2mkZ/lejcndTT8XQhQWcKb4RGFWmT5ViDPd
      IdFpXNcsZsuy+IXHP8d4kBt/vl/HRgWDx7lqd7GkLgSy7RYlm1Lc8RG1ftELrTVaKR6Lb3Jk
      pj9Hw5hwsiZoBv35uN6OuWSFnG/GNH3z+WYAh/aQIENT6GcUCWB+vIO79W9595XfJvAHy+Sm
      pLXm47f+PYdnlqg3JqhUKhlidEqNeoP6kNj+m1fPMTcRc3uzztH7RqdjDoxPCKYmJpn9DLs/
      gMzHzKcNDrwobVau1hqvUowDsh2bWMX0At8AaUEBDzQv5qQWoMwGnut3mCXK/F2Myizb/bN7
      KMIm5tsCc4J1Az9T6tNSTvni1WDk0Pwxbds2x6f7gWmFfoMQqzaoHKrNJiSLy9QEyO3+QhQX
      Uf4ZbAsdhMlCM99P7qzz1QN95W4Uw07WBd0UvCzUiIWIU6fg5Bdi2ntCPu6FbEQxliy9W8FI
      5TxPNU+z4LzGxUsXhn4fRREff/Aqc84ZltsHue+Bp+/caH4YvU+xLJCNU/esc1Q8754cYXmS
      w2TvshkzTZkUQuD3fDY3N01uLf3idlYCaJXO5TC5ntx3+d+7XZOPzSnTgD8hYa7yCaF1AtuY
      MEhWx0AUoVTy4lD+pHr06P2IJOQ5tctrpYibHWRjcOKtfXNE1RrheotUo1eFOR3OxFbVRQRJ
      4SQN9Hx+eXKZmtvXb/LFSso0OyP4cDPi/Z2QI0fMZ44tOLQfHnlK89jnNe9cVFxb1pmqIXYJ
      7igv+O22zfSQnTaOY9rtNs1bzxJGFnPH/vI9AVxdv3KOoPkxlzePc/DELxa+S7P5djulfhqy
      0x0vpfzuHsVRIeQ5/12sYlrtNn7gU6/WCrHjQCZumIAza4BZ8zSMYf0wNHXHGB34NhA9moAy
      kTOJpmS8uxGapIKjuWGohaY8rr179jArXNZy16l1g8o8ylIlXAddq6G2u9iTdZNRpc0CSqcq
      j3cKELd6UK+R7v/3+0scP1hsdxQjaK05tig5uqDphYLzlyOOHcvPMYw3BA/dD1duKpY3LRan
      jfPrwi04vteIRpDzXWDM2J2eZrNdZeLw32F+YXHwWYXg9q0rzNZWWVdP8tSRIdr1iDFfvXqZ
      T94/wwOP/NccOHisMJe+72fwNaOQv39aGgiGy+98w1zbQois0nu9VsN1jXkxSOyyecZLrULl
      EyXfVqxiZFJlPYyjLGMrr4QPuz8VL/JYpFIWk2HSe4Tos7ktLaQwSNR+GFJx3cxSIoRBhCgn
      47TbbXqib3lRO21EvVLAuy8/FwBVl7DZxta6YNeX6bNoUKjsu7AdYC2MGdGy0+Yr88076g35
      PlPRybPhSNXmytWYw4cGr1XKRHpqDe9fBXfB5s0rEY8e0AVEx1sbHrrxDI3poxy8/wCTI+Rs
      IQQLi/u5sPGL3P/IV0eOcdgmuG/fAQ4e/C+G6jWu62Lb9k/F+MM2NDCi7rOvvlQMhsuYpbTT
      DqPUyeTYDoEfGBSIJNZ+lP223I/OMQaQoTKkJs78zj9gM5emNksZh38Yu/SScGcgyfsVhMoo
      uVEcZ3FLaUE/3/dpNBqZH+EPfvintIVCI01/QYSs7R71KIQADTI5kciPccgJFa01kTOT2TM8
      HC+xZ3I08w81D+e+b1QE85HFzdsR+/YU2zm0Dz65oJhsSJiw8CpQOexw5lrEg7MaTYUd8ThH
      H/0Gc3Pzuz5n+jxTUzM89aXfGHlNHMd0Oh08zysUw04jCYadpKlV714ozydxHPMHP/w+7964
      yES1zgOLB3jw0FFc1+Pfv/Ijlv02YmVlRecjEYeZKIc1rtHUa3UqlT4jbG9vD1Vsh7UZqzgL
      OktNoPkgpfI9aeX1cniGSkS11CtcXsBKKTpBr/Cdazu7FuDIK+xam0jY89eu8Ifn30bbFkJp
      oo0d7LnJoW1kzxnFiK1t7NmxJJOuL6KV5yNca6IrFWSjhr29zT/ee43JWnEeLq8p9k4IPGdw
      YeQVZyA71S6vKap7I8bqxXuW1zQXVm0OHOmfnkpplm8rThz/hxw9esJkTN0DVHneiVr+fGdn
      B631yPAGuHN80J1Ia4ODlPqznnvzVV5cvQw5iEvZDZiOLR69736eOvlQvz5A3lpSZqKyQ8qI
      FIJOp0M3qRcAJgpUMnzVZmJMsmunOJLppKRyXj6qNO8fKEeUppQixKW7eP6+dKGR6AtBEPDj
      d97kCydPsWe+H9GZf778s6cnmuM4nDpxko+uXuLsrasIS6JjNZSZ86R22sggJFzewppuUPF3
      qIsua7W9aCEKpmZ7pkHc9olXNvhCbY2pEsNe3tDcblhsr8Q8um9wARXOaQ1amHmOosyFkVGn
      p3n3U8nJx4pOSyFgYY/g7Nnvc+jQsczkOtQyWKIwDGm329i2CU1I68ul8zo2Njaynd0MJruR
      UorbS0vMTE/jef0AzBQH6sOVG2AlYTW9kBMTczx96iFOHjuemWetf/bP/tn/EibKbp4Jyn+n
      SueAzVspg68iJd1ubxByJF1YWtMNev2avdKUWZVCmsyzWs2kYFYqBGGAnwDRlidpWP+2tDPf
      RJ66gW+q0Ajj6/jemy9xMW6zubzKI0dP9NvQfYSF8stI+7Rtm/evXWK9KpD1CtZYbVfmB5BV
      Dxp1lLSY2LjJk8c7LM6EdNd7tO0xypuMtCRTrXV+81gH2+o/79VNzdKYRWNCsrGjOVijsHh0
      9m/ymeh/fmVdsfdAcVyfnofFGx4312OqcwLbKY9jmw/PvEcUW8wt7EcIwXZzJ8mr0AMm7pR8
      30cplcWTpSLMvSykezkFbt66xf/2H36HNz/5EOGHHN5/ACfJ/rNtm4XqGO9c/JSTY3P8w1/4
      VX7+ic+xODdf2OjsVN7OD2Ck2DPExm5Jydb2tnGKDdEd+tcn1hkMCpsUAtsy8p/jOEWLjqaA
      UTpMHPLDkKrrDTWTpmOtuh5BFLLTavLdN3/CkjAOu5bvZ6dDauXKO8Tyiz5/Mo7X60h/M2N8
      bQa460vTSjMfLXPqVEjqEH/gUA999TYrlT2I1C8SRuz1b3LkgYBP1jSn9xqT7rUNzY2KxfhY
      0meY84xjqjReWlUs9eDJPRlqOgC9QLMTmMjOlLabmuCqzbSEw02bm6/E1B7TTEz1eWB8QtLe
      WuH8x69z/4NPUavVTDEU38f3fcKK8VWkm5bWOis2AtBut7Md/2dJt5Zuw9QY20oxPTEojp44
      dh//fb3B4sLCSCBmGyis6GEIbbsdT67rUqtWiePYJM/QT5eEfsRnZu5Ljuu0Ra11QSYMwzA7
      bcqLKB1LEBa9w0obVDsrgXfMM24YBHznjZ+wIvve6q4KTcwPGiEkljQJM8MS89MxxnHMLz76
      FO3XunzQWTefp0+hR+xcUcT+4Donj/WwrH6YjxCaBw910VdusVbbh+j2OObe5uAxhRCSlarN
      hzdDdnoQzDlMTffbbsg+O9/c1HzUhfFFmwkP3rkc8fRegRBwYxWufAx15XLtlqnpvLkO4obD
      QmwakcCB2OLy6zGVryo8rz/niwdtup0Z6nUT9z8xNk7PXyVWcWYcCIIA27bxfZ8g8V+kvpR7
      pWGbzp3o2sYKbhDzxQPHeejE/Vn/aXtCCPbu2TNwX34xZBrOKFt7foDDH6xvKkzvzNfyyrdT
      cyt0gh6utLPiGL0wQHY7dDod6vU63W43kx/TwZb1j3LVkSiOiJNYJSeXG7DTbPI7rz7HmowL
      C7kTR2w1d2g0GoRxiBRupkSW52F7Z4dGvU6sFWEc8ej+o3zw4YrJB9jNhRqGHIqucuJoRKLt
      JLqTWfyWFDx8pMdHl6+zMBEwO9t3yY7NSC6FDtUGzM8X+4imLFabinakueFJ5hcz1yPuPpsP
      lyNOzAoufQz7LRss2HjdxREwZyUiSGnYWpJhkfZPQfD9q1kdBc/1mGyMF2LGLMui2+1mUbap
      znSvjPxZaHVtjU+vXuF/+q2/xeRksU7avdA9AbHHSTpknkkqXgUhZZa8klqI8gOJVZ+hTcEL
      O1sk1QTZWWtNq9XKmD9Na8xTeUHmrTpO4nBLi3wopfj9V3/EmmUKfOQVReXZrG1uUPW8LLc5
      PaVSWVUpRbvT4bdfepYfnnktyz6bn59HdoKh85ONTmkWgxvcdyhMxmwU0tSvIbPFLXjoWMjM
      TPHZum2ouJphFkgtBUGkCWOwCsYWjVcRbI9b/OA9xZ6c/jTtSMbsXWLwPcWNS4qlG0UzdmOs
      yfMv/EteffVPCid1ygOdjim0MT4+Xtig6vUhwYF3QeUNcxTdun2b33nhzzh+8HCB+e+ljZQK
      NcLKNXjLMrGVoK6lL7BS7Ye6uo6pK6sBx3aJwn6GWF7EckpgWuW+0r8rlYqpPNNsAn1o9VGU
      N2tq4My5syyLAMiJUhixRTo2z3/6PvcfOZaZ+fJtK6VYWVvlB2fPsOlq3ty8wfyVSU4cOYpl
      SfaMTXJT+5knuTDZQjC2c5sHjnWTNk1drd34If/sfk8T+zELi8P3ptZWzPiEYG9VsHQtRt9n
      I0TfMjcxbbFTVVi9IZuHKJ5ZmbjTthi/KLjqxOh9/Z3bcTTTM7fodm9x+cp9HDl8IhN10/tT
      cSIFRkjLMP00u/8wH8eZ997h0sptbGnx6vXz2Frwrce/MPT+exGnCrM8KtIwbcjskv2XFQR9
      Jk8tQbVqlYnx8SQJZrTbvvw7/3cKwyKlKbHZaDSItcIPg4F7U8qfQIHv88q181lB67z1IWWB
      LQ/e+OC9woTFKub85Uv87vPf51+//hzX6BqF17F57vKHrKyvEccx3zz9FAdEFcJBLFNnZ4PT
      B7aw7L5okjLonSjwNZ3tiPkFWZiT/BzN7rF4bQd+ck2hJhKsplw8T7ej6IXx8JTK0pyl8zLj
      SBwpmPElGxvFPo2VT3Hz5pvZe04pZfp016/X69n/PysNs8QBfHT1Mu8tXWO72+bbj/8c//O3
      /wH3HTm6azvpM+xGhTrBJrwgjZ8fDWoVJSBSQeDjBybX1rbtzHsaJyU5y7FE+cHlrS6ZvT9h
      Qseys1TKIAxY29gArTMRLG/zT9uzRP/I78uju6EJCF65eZHDi3uZn53j7Q/f5+2bl1kXIdqx
      i+YUoOdK/ujsG/zaQ0+yOD/PX/3SV7m9usqblz6hYbtc2FyhrX0enl6mUis9792EWwIbKxGH
      D5sE9vJ7S+fK9QSLh8yplWL8aw2rKzFRL2Z2XHHqMdh4LmbGLZqRUxq1M05aggvX1YBIFoYw
      PXUi+btogMif4H+eVFZmv/bU0/zG2BiNRuOe+9rtJCgqwQJE4u4fRvlGwjjCsWzarTaqqrLM
      H8uy6Pk9/KgPjZLPvEpl8Vgp86KBIAyTBROjky6klPR8n5X11WxsUkjCOMrk/lHkOA4N26Vb
      UmrLk9CtWPw/Z36MF2t6NQdcgRgNlUTbge+ee4NfU0+yd2GBvfMLfPvgIbp+D/XaS/Tab9BP
      ZDJ2+bt9VWvLMXv2CKQczVAFJgZUDOtLIRUZcWwPjI/1n/HyVIzehilLFhLWd9sRhRA4y4LL
      H8bUJ2Fuj+TqBzF2/RBf+sKThGFIL8FYgn6k5meV+XcbR56UUuzZs2dgV79Tn3eyYEIuHDpF
      R7BHHGF5pVPQB9Ct1WoZelyr02Z1fY1et4dnu1lSezrovCyutMpcNxXXJVIxQgpcyyaKI1qd
      Njs725lmOT0xxdz0LPVKNbP9pzrLxubmwIPO1cczc2v+m1LoH7ri4Dc8Y4+/C3btOZLvfXiG
      7e1tNJp219i/v/zIoyzO9BdPYb6GzGfZUKBisO27ZyKtNFvLIY8cjzh5HNIqUKmq/9TXNfNf
      i1jfG9KL++9g1HhSOigkx25YdD6G9RXF5HXJsYNfpNfrZV76fBup2frPm/LMXh7znZ6h3E5Z
      ismT/CwrV0pTALlarSKkMatZloWXZFKVE2yGOSEsaQLRpLTQul/XNx2e30u9ytCo102IRd6f
      gHGovfnh+/yrl3/A7z3/feMYSR50LEl37BsXk/4Lf4uBXaVMwz7vOoI3PvmwcLROT8+xd+Zb
      9DoWie6bxTkNbVMXF+PcHosb1+O7ZialQMW6oFyn7aY0NQkPfF7TORHSjO/gsEtFUYyRYzGw
      WHtLo22P46dOZ7D4cSkfIbUG/SwWAQzCYn5W0lqz02qysr6WIQXCECtQWabLW4HyzAvGMtPt
      dukGPlIKql41S5wxMr3KagVHcUSk4qwItZ24yM1pYhxnDqY4ds3rB9hZlk3VrRhcn1y8B8CZ
      jz7g+ZvnURWbC6rNhTPP88tHT/Hkg6eYrNYRrdEMeLefjzoNP2yu8ODNWyBNDvXq5gYfb68g
      ehP8/Kmtfmz9Lm3mP5VSUJ+0WVuNmZu/cwSklJrJPTbvfQKPnIiT/gYXtBCC+x7W3JoMWH/T
      ZmYE0l5qtBBS0rJrxFJxX9ghPvoQ9XqdTqeTWH9yIRcJ3V5e5gfvvs6h2QV+7pHHmZqauuP4
      75bCMBxIq/wsJIRgvDHGeIIblD67nZeTogRRoeIMRuvtalLSGoEkjqI+Hk6ymDLUNlHMvkpF
      KTCe6NR0ljeT1ut1JhLM0RTWJB3vS++9zY+XLhTgAkXV47krHzE7NsHbt68gcjEuQx19DPiE
      hjxa0feQkvIcfv/c66byu2ujVjaR81PIsSoXLu3QqCpibXHooLpjnbO0n3pDsHwLJgKN697h
      eswi8GOB1oMLqmhWhr37NRuViOtvKOZ7No4ks+il4lgXye3pw/gLe/jCg6e5dvE8bq2eAaD5
      vl94h1EccfnGdf743Bk6nuTiUpOXr37K6YUDfPnhx9i3d+9PbRGybbugQ/607eVJa23CoQsh
      xkIUTJ3pjaN2stRyVMbILPsQhikkw+y9+ROoVqsZD7MwCfjVapV2u80PX3+Fn6xeLjB/nty2
      T1BxsjDIbHcTRbHnTqR1LkiuNIGZY01rVMuYS0W9YkSSMDbV7IOQL0xeZWoIXMGwZ9doohA6
      mzF79lu7xhmlz7RyLeCpU3f1OIDJALv8EbifuNTT6JSk/20czh5+gFueQgbGgTgVW/yjX/nN
      ofD1P3nnDD9ZuoQaUiXTCRWnZ/fxV7/6zZ9qB4/jOEN8+1lYnAbshLLUST4HNT0J0p8sdDq3
      9/hRSC8cRA4YpsyUdYN0kh3XyTzB6cIJgoBer8eP33mTF9eKzF9eWEHdK8QAG+Y1f92rpGru
      G32XBnTXxx6r9eVx2wJLImsVPlmuD9rzGb6ZCASuKwlCDbqEQIExd3bamp3tGK00aysKLJvN
      rbt/KtuC4w9D+1BIoIDEQ21JyZStWZQeIopRrkVsS1phj17gF3ggjmO+8+IPeWHt8gDzp88S
      uRZvbd/mX/3pdzPUkXslpRQ3b9/mP/3kx5x595076msp3Ys+kpkthjWeMuWo3bt8bzpoMOmN
      VulUKO8gKRn9wIhelUoFacksuT2IQlzbYMk8e+ZVXrh1AWFZBfHl7naE9Jp+NZRRSmr+ucoZ
      Z+UW1VYLe3LMLN6433B6/ZYYp9NukUFqitHG0fSezY2YOFLYjkQKje0IQt9YeOp1iWXBtSvG
      Izy3x+LKTU2tGuF5IxRuQGvB+qbD8toEy9s+O75ko1rhuNLcH24TCYk4/gRzC/uwbp8n1AqN
      xo8iwiii4vWz71589wwf+ZuZo3GXCaQd+oRRxL1gNrTbbd7/9GPevPQxV9qb6IrLwXgxm6NR
      Inm6UTbbLaYnp+4KrDdTgvMrPL9Tj7Kljqro4jnOUHGorGAbJdlEcUZxkrTiVTJZM6sqnzBL
      q9XilSufoB2JCEKwrYE6xCMZNRFhDDJDYqIx39zxXt3uof0Aqh6i4pojQWvzebuH9ByE189i
      K7fjKZ9qzjF2V6bWnuDRx01+hoolWoPjmK4zq9OMSI8n5vZYfHxZcep+lZ3gcazZ2BbcXnFY
      XvPYiqZp2lV6FZe4akFdwjSEcoztKOLow6dpCcEfvfcyeA5SGV9NnFiGtNIIKTh/9TIvL18G
      d7i/JM8/1UDx97/xy9R3QXcu3/unL7/ISxfP0XWlOcUrJme7mtNLhyn6WmuW11aI4piJMROb
      1O60cV0vq1s9jIbmBJcpZeB8iPIoxW4YAFR5UeVXsGu7OJamkThTur0uKlYZfk+6iicmJvj7
      n/9FpDR5pFeWbvP69fMsqV4uPh70EDjA/GRlz1S6ZtRJEDc7WDPj6K5vYFAQaGEUbmthqnD/
      sDbC8Wku32hy9EDIiC4GaG4hBSM2CG5yxDtJSUrBxLzDxSsBx4/Ax1dsXri+gO82oOrB5OjY
      nHPxDh8HIfW3X6Fjg3IsdJrbDYiqS6vdplGrs7W9zffOvQ4hQh8AACAASURBVImujGao/CY3
      Jgxc4Zmz7zI9OcWhffuzgLoU7SF9d1EU8Z3n/4xX168hqjkkQTTECs8bzMEunwbzCXxj+i5q
      1drQzbvQxurqqs7v5sNMoQOQhcMsKiMU3WEDzd8DUKlWCYOgUEwjjKIM8SF/X6VSQUrJdmsH
      rTS//eKfcSPu9Ptg0BqSp1QGz+/FhYUQK3O6aI32Q+KdNnJ24o7iUh5LaOC7MOQh7wp7F4ow
      76Oo21GE7ZDFPYOxTOW5y3++vaWoqIDnbh2iOzYz8rp7pUYIv3X6aZ499zY3xe7IcGlfGjgq
      6zy8/zB/fOksxIpp4fLQnoPs9Drc3F5HIpgfm2RubIL1dpOzzeWhYpUMY/67L3+LQwcPDnz3
      0z7jQFI8QDcwntw0HqdsyVFKJeEMxn4vhAlnSAtj5JXX8uDyi0QpZTDePZdWq20g1h1zZI0S
      ybp+j7GxMaIootPrUnE8/vWP/oQ1GRn9ww/Bc/qQjDA0U60wCen3GuJba+BYJufXc5CTdXQu
      lHnUIrMsayRolZQS1Wrz2MR15mfvrKBprVm6HnL0aL/9sljZnx+y8Ikg0Lx0boyNyf3GCnWH
      hXY3lM3/Vhvl2YVqNuV3m73vREzc2xVsWDHBiBOjYA4vbZ6OHxFrjXItLD/in3/r28zMzIx8
      nmEb7ObWFleuXWOzvYNnO8xNzbBncZFqsolallUMhhNC0PV7xsab1QQ21VMqrteHLLEseoly
      U3EkQvRFkLJYEStFrOJCXFD6XRa0pmF8bAwvcAmDMANUTR8oSjK1pDDJMHEYAQbPP45j/u6X
      v8nv/eRZFhsTLC5M8CfXzmHHGte26ZYQFAYmMIpN3R9Loto9U5iu5hl9ITV1Ds42Oi+CjNCX
      jBiTnAzVCu9uLPK4uMXMdNlOL4hCneXmCiEwNf5Gm2yFECyvaM4uTTNudZir97jQnKE5tTBw
      gg8O/+4XRsbck3Xi5Q2sijuyfSEExAq9vg0Cblcr6FplZEhi1jYUNpiJ2OIf/dJvgFLcWl7i
      xupyIedg6DNhsGGrXh9W/Xd/+J+4qNpZfJk+H2EFEV8//gi/+Pkv9RdA2nEv8M2ubhm4kjAB
      ki0gu5kZxLUcLCEJojArL5ofXrpY0ojQ/MSnC0NiFK3t5g5KK6Ympuj5fhZBmhfJ0gmK49hE
      rEorK2ghbJu/+4vfApKqL67DgYVFavU6v/Pin3E97mQKYzIQTlhjHJiaZWpsgqmxcXpRyAfn
      P+Gj9ho9+mbTXUWfXcS+dF7zi141xnhvbZEveEvU6in6HmwsRzhSE2mJ5UDQ1dTrYldG7nYV
      r93aSzg5xY4QXA8jxPjdQZjkd+xhO/kosmYmiG+vY++d7Z+EiU1BCJPXHG+3sOYmETKFgzRW
      t7IeI6Wk0ouwFWzHAarmgTDm2APVcTzHYXJykvn5eR67i8WqEzwnL6kVFkURy50ddDXnKHVs
      lGPz4qcf8I0vPmM+yzvC4mTXt5NCFt2gh52rnau0AZj1bBPzk+7sOkF3SCc1L7en6Yop4luk
      Yiwh8aN+hQ8/DKhVqzi2Q6vdNujUuTbSFxSrmG5gxKQy5LnGLOCK4+F5XhaZ2mq1ePbNV3lj
      /RoKEEozEUv+q6//WsFBI4SpcbC+ucF333qZNSsqLpqE0pea3FVYIKkomReFhukGleY6p+dX
      WVq3ud6ZRFsWD02scmRfSBRCpdoXa0Zap7Tm8nWLd/yjMARnp8zkw77Pi3Pp71H36TAi3thB
      jtVQzQ5iog4a1HbLyGFCIFwHK1faNa9vFYDOlObB+gy/9czXadTrrKyu8uP3znBm/TraMVEB
      bjfk7z/9NU7cd3zg2dO2fd/P0jABOt0uFc+j0WiwsbHBv/iPv0dUGaxjtxDZ/PO/+Q/MZ+kC
      GLaTpaHHTsKkBj5EFSbQklYWOjFMJuwFfoYgB5puDsI8vbZRq5uC1UmmUd5+Gye7p0xOjV5g
      MrFqbiVjrm7Qy15mCnqV+hM6baMg315eIgpDNDAzNV0o+ZPfpaWUtDsd/sPrL3Ix3BlQylRh
      jvRQk2+KcZRfBGX9QLe7iHo/7VOtbfGbp2/mEmnujr731izh7GDuZF4m3m1nT1NIU60mHx6R
      imCq2UEHIXK6L4bEW03QICdHx+eXx2BZFrLV41cfeIIvPfm5AhqJ1po//OH3eWnjmtl4Oj7/
      wy/9FnsXB5PawZz0zWaTSqWSlVLyfT+LTD730Uf8m7M/GVrHzY4U3zr+KF9+/KnRwe/meI6o
      uMb8ZElJHPerhkshEMlJ4UeBUcaESX9Mp8MA0SriWGV4QGWLUL1Ww7Ysmu0mrmXgUWKVxs+Y
      +CRLWogEuaGeVK43YlRs8niFRGFeZBp71Ol0UFpleEcLc2l18MGyrZmIohUSSb1W4699+Wv8
      8K3XeGPjxsAk5q36wxZ9ii5RKPtE0fsgyxUhPZetLc3M7D0qrbuZ+QpS3yjUP1G4NH03qUlZ
      bzSRtYopzp0ja3L3YnQwaL2K4xgt4bmP3+Xs9UvsmZji2J79nH7wYaIo4sL6MiQn377qOAs5
      8LKU0mxB3/cZGxvDsiyCIODdc+9zc2ON29sbrLR3aOsY4Q0PlYlsyfcuvItnO/0FECVZXPm4
      INfuY/3Ylo1SGi0MIK2VFKpId4te4BMq4wH2bNegKJSKW+SZQQjB1PgkruPQ6XRwLCcLEQhC
      g+Of1vJVWmELq8Bspmi3j0AUxLR0wmUS35/qECm6cF4fSX+n4k9e7LAsi29+7kvMfvQBP7z2
      MaFdZJTdRIz0ReVP1WF6Qv55ZK1CpwPTJavbZyUhRDGCY0hTmY6RH1MqDPUC1E4be3ayAAJ8
      J33hTnqF8hx2gJ24xYX1Ji8tX+HbccRDR48zX23Q2lqlLRWPHntg4IQIgoC1zQ2kMJGd6Qbz
      3gfv8+8uvI0Syfg8QcnFVZhPKSVIyUc3r2Ab0caYNVPZO71IaJ2lPAKZR61s6TGoDv1Ogjik
      YrtEIkpnNWPudHepV2umEnuSZGHnTLGO5WAJK1O+Y60G+o3CGCEkbpI+mR3NyelhWZI4NpVt
      PMfJCvSlO1vZYae0whJ9oNZUbHnigYcZr9X57kdnCJw+IFXqRdjVMpEyf8KJ5cVTuFcKNtoW
      +1B961NmeEjvL/YVxxo9pFB3/t2Muje7ZuD/ArXdNJvA/NRw/SNJZtjt2e9m8QohwLH47tnX
      2Te7wN/7tb9CFEXcuHmT+Xkj1mltKvd0Op1M3i8jBl7fXEPLtLzr7uPJ14T7oLVmEmJSuVYl
      x3feTi+tYmcFxUgbn4BSijiXlJ4me2RKqjAFqrNBCEHP7yFHVAFPgarSBeVYdpKMEZuQbRUT
      xKE5iZLxpYkasYrphT7tXpde6GcocqkIppUiimLavY4JwUhIad2HLSnZ0I8fOsJfP/U0bhAn
      Fqk7x5gUdIU0RGiIPJ4/Gbrayy7Pe8HzSe8pbW8rXjg3SXSH0kD5+4aeQtmPBqWJljcQnos9
      NT70HjP+4W1+1lPLdyX/8tk/4uKlS9i2zeFDh6jXavR6PXZ2dmg2m6bwXhxTTUIbhJRs7WzT
      6Xa5uHq7oAwPozxPZ3WiBUjHsqlXqri2k0GIpxdblpVBlucfdKCkkhR4Vh/sCgF+FJiVmtxm
      SWksNI5rfmyXZrs5Ev46jyWZill+EBBEAbFSNCq1zLdgFl1S/ysZaz8EOkFlyO3Yjm3j2E5m
      5DGKfXH3yB/hWmsO7dvP3378GWphX6QZZf6EQbPfndxfQgi2e24iplkj21cKPr1i8aPrh9ic
      2NevanEXNGzxaWUqaqp2j3BlEzE7YRyJuQ1h2LMNO8V2MwnfiUILqpUKrXYLP4Gu1LkNORWF
      00232+mgopie32Ou2sDzd18AeZE1+4wkJVIKmTFlfnLSGzNLRc6JlX9BAoHruFQcD1taxpyq
      jKOq6noZcK1tWXiOi2s72JZFrVLddeXmB2tJi6pXoepWMkU3P/lW0rbnuFTdSuElubZbKItk
      PnP6mW3JJA+rlZbf1fYt7uFvPvEM9aAI73insQsxOgQu/wy+8IgjNWgxSv5utTQ/+XCM96Nj
      qLFBJfRemC8VB8GYOFW7h5yfNB7Zu2hv1ALdTTfYjSrIpHStgThvNpsDpZHEkIXX9Xv8rW/9
      Or9+8omB9zFsjGX9ROYvljmRIv952nG5OPYwACTHsqm5lUz2lMnOn7aVr+xuJaLNsMHGyliO
      sp1A9VHLYqUypi1Tam7Ly9tGDAoK8v3AhAhBEEeFEIphR/ri3Dx/+3NfZSqWkDtp7kR3IxoE
      wqXTHnLCCLh2S/Dclf2sjR2AIaa9u+2jSIn93rYRKkkYEqmAM5iPkN11B0W4fK3KLbZR4z48
      MUu9XsfOgWulWFPpNXn/VCoVpAUZrdypWbBkDXmG/LglFEWaMoPkPx9mV84zSfq3FBLHsolU
      TBAZgCvbtgv3molRdIMeHb9Hx+8mJUzNWMIozGTtMFeGNYojeqFPpCKGTavWGj/0s0wugCAK
      iZLqL+Vnyy8uoz8YWTOOI2IVDyRlCyGYnZ7mrz/5DLMqsSjdYZLvlnSlQm9orJlgqymJGuP3
      3OYoSmV5rTXSkgjXRkT5SNrhp9a9MH/urtHf+AHzHc23f/4bWZ1mL3Fm1et1JiYmqFarOV0v
      7ou3CIQ2IRCHDhzgmKxjJ+Mvemt0tmDKJKHoeEoZPd2pC6JO2aSlitGN+UjSKMEDrVVrTExM
      MD4+niENmwdJldakMozlGOUmt/9I2X+YXhjQCwO6gZ/IbnJgXg3zB9npkGdKWw6XrZVW2YSm
      i9KPAjMnQywd6TNOT07yV578OWYjubst/h5I2BYbO8PQ7OD4wQixvXNP7d3pZMqbva2JBvFm
      s3/aixGQLuLemH+oFSk2FTajlU10L2DFjvnBmy/z6fnztNvt4hhzJ4EQJq/czQEgCyHp9Xos
      zM3zj379rzEWDhd9zCZVNE5orY2xVGlFLwyouf1AonJBg3RR5GUoYzrsi0yxVkgtTVEKcxOe
      2zetOkmVcN/3EcJk/FvSwkoUHLSVTXDeB6G0QitNLOJM38iS7ekvwDjJT3Ysm0AXfRCIPkPk
      T7m4tIhTK5ZKkkGkzqNc9M2TfhhSrdX4rc89w3fffIll2e9vlKVnKDPkxSzb4uPOPsZXbrI4
      X/LKhxrLlkQDLQynvslX75o5l31imYV8J0vO3UN99fvW/v9f2pf+WHZc9/1quct7vU73LFxn
      uFMckxQpUhQ3LZTkWF5Iw3CEAE6QAPmQz/mHHOdTEiBBkm+xHSCwZcmQbEGQCMlxTFoc0uI+
      S2/vvbtVVT5Unbrn1r2vu8cuYKa737tLLadOnfV3OriTFWzr60hLrSDmJeRFHzPkAPzlzQ/w
      l5+8h6J1eHhzD//2d/85ThYL/Pjnb+PlLz6PVVWh6XxNCA6KZqzFVgBFyrIMmZBwruvHRv+5
      3nzrgMhYddu1Xg7EWPw5y8RFtnTacVoqdKZjVWCGIFur1cpXEQly4UZRoKoqFFmBZePFoExn
      EUaFECIo/FogWHCUHu1wY0wwn+pR5XpaOE7k9DmJP1LI+GxP7BY6GR/gxTHSTaQQ2NzYwL/8
      6q/jf/zoe3ivOxkpznfThBBoN7bxg5sKL3a/wrX7fN/q2uGH719Cu7W5lvxOeyf3W5zW1N42
      7O2jkdd3XTvtnXZZebAA6yDL3IdMrAExAOCVj0yjzoBPVsd474P38Yd/8SdoZhrLrsGrTz8X
      GSUxXb8uFodHR9jZ3oZWGvsbW/i0vtNv+oFGg0EouwAgjfXOIvpJ/6q2RtXUaLrWx++wcZKo
      4Dluz1VNKEfkxyPQmhbHi5Poum7bFp3x0Clbm1to6sZHkQqBWVagY8BLbVBIPeF5oip0PqgN
      wE8o2rha6bXmuynTnbHeKUam4PRk4GNu2gZN1w4W3jqHWTnDv3jtW/hCsTspDvFNZ5PvJwlo
      YwM/Pr6Gdz7w3vef/HIDx1vrqzX2J/LIDuLfcUpY9aAvmYZrzw/ONXmi1S26T28DxkJd2oW+
      Z+9s4k+aBPDzG++imWlACPziwxsACBO2j1QgfbNpmigOe4NL8FXw/gnyp/SSsxACmr6gSu8A
      sKxXAIIX0fo8X5qUmMJmvDhSt/XApOgJyneg0DnggIPDQ1RNFWzLEvP5BppQT6pXbj0Hb4Pn
      Np1gwu6ncOgYYQoH53q7e4wrZ6KNYpYE2lQ+5siEk2FoBHDOQ8Fz7i+lDL4SO1ConAtVKvMc
      v/fqG/jeT3+Mn310A8tCwin2jDWLvZaL5jl+fuc+fPThZ7h5+YHhYqbPIL7G3kMyL3C+08i1
      HeydE4g1ub4A4IxB9/kBYMNJGsALnLX+MwBiVkBfvjDo792eiALAO599DCh/z03R4u2/+1s8
      9+T1KKnEa4XHiT08PsJ8NseN258BeZgVYp5xRsKmcC6KQVpAQAogVz3i8kY5jx2nxU8VYi2V
      R36QPZJ0r6jIkPBO1hcTwhu8yOCYN44mJ9M6IsVJIWNorh+gRmN8EkzVNmjaFg4ucuN5UcJC
      xHAHEncAYF7MBgU6huKPRaYVtCzidxQsx81vdI836frEeEoUakPFFMCHivz6S6/i682L+Pv3
      b+AXv7qBvz+6iSokeNOYRoTlhmEieWvxnWvXce3LD0BKgT/6wf/GMS36Gv0ilfV70W98z+D+
      zsDc8TUY1P722uLfzjmYm4fQV/buWrw77/XOOQjr8MjuFfzk9ocRodtphf/17tt48OIVXLx4
      MV7Ldau6adC1LXLj8CBKHDQrnGQiJMP0gk86HzEcmpLez2vbBQCKI5oF5dm6vuq5dRbHK6/R
      k66wtbEJJeTA+TVlm+efUZ1fsgHT4pKcr6R3gBGXd87HDpkQRUobBSBLkI7WD29P9lVqaNwU
      YcqJiLd1n1MjMYROpOVyiXc/uIGffXgDN+qjiCAxNacODq6z+I37n8TLzzwXv3vn/ffwX//v
      X8NmYx9NGuszNDMzZyaGhOishb11BAf4GP4zRBRzcOIRMGb/dJhCLofzJqzDxu0lsu1N3Mns
      6BR5YeMyfvvVrw8+AxjjUhqbGxtYrlb44IP38R/f/j5cptnp69/MvfSR6iYdCWyXDThNeECe
      ZVGG552ioyfTWczucs6hLMpYYC0dAP9MiD4eZ9lUEPAONut8zFGZ92Yxj2oto1gkpfdBeLGs
      L3fknE/Gqdsm9sdYCx3SO40NLnchB6dT3TY+B2FNSzeEFP0ECyFQzko89fgT+Fff/E38wa+9
      jCs2O9VsKlcNnnn0icFnj197GK9euoYIaERz5d8SZXw+j/R3kIb776yDuXUEc+sI8sIW9KXd
      M4nftR1g7F0T/zrBbx2LbW8f4ni3xO3MRgsW/RNC4Be3PsLR8dFIBAIQw969xdDiZLmEkzLI
      /uvfPPAET1kwrPVZYJxYoz4g5CAyj+R0EmUUI9Isy0ZcKC5S8ll8N0u+oaQaOgmKzJtJs+Ag
      kaHao2Eyvv9coMh8KESmNAKfjUquNwCY+HfbdVgFfcXB+zMoAG+q33y+0nE0rTcgNF0LCOCR
      q9fwb77+HTykNgabgHPyS+UG5rPZiDm8/sUXcE32STwk154mVkVjgPAc39w5RnfzAHJrfi7C
      p2ZuH0PtnR3/P+7EOS8jpmkdhF5fYaYuNf7fe78cbArOmDfmc1jj1/9wtQBkzxwk+8ebnCJI
      vqhSSmjJzU79y1Nn2WknSNd1HuWNQajz79Pn+2scNst5DKWIucdB8Znl5Si5peNJOyFvIdeZ
      zy0Im0RAMI4vIIXqN09QGo3pYgDfvJxNmodTpkA6CYCY+UaiSRtOvqIo8N1Xv4lH9FbcBJxO
      7t+6MFoL6xxa2+F3XnwNm00v209hMPG1pOvsnROYzw8g5l5BPU3RTZu5fQR1YRMQYrReZ7Xz
      itNCCA9MkNybMhbXGexs9hXnUy/9wdFhhGFcVNXo/VN9l9QB/rL0dwokq5raOzKkr9SyqFc4
      qZbxhCDC7kyHZVPFRZ8VJfIsw8HRIaTqFebB4JJjzTmHqqkCUQ5NfLx/remwqJZouy5adaZM
      jXSKlFkRLTeAD5Sb5UUo5mFjQB1tLK1UrEtA/Wo7b86NBMpEL/qMzL2zosAsLweh10VR4Luv
      fwtPRrNp2AjG4ur+ldHCEZe/sLOLt57+MlR7euQjb65uAGuhr+xBFuOi4qc1WzXRPh8ZE9Z4
      WtO/MWYUUy1ycWsBpUbX8rlQdYcLu7sesSScmhTeHO8La31QLU5V/qkNYoFSbpwOyFgLG8IM
      uGOFkumpUS6xkgo7W9soshxb801curAfLUbrguA4cZd5GQlu1VTRwUb3dcZ4Kwx8+PWqqVF3
      DZp2WMaU3kGKspQS82KGeVFGMQ3wciQp6FPcg/55saavlzslws3zEjqUg6WNwPMMMq3xe698
      A9fLPYgwfNUYPHDlnvgsHnhI+RSPXn0Ir1152BPMOZoocri72DC8mcXK4wCBOZLc6SbdgfWJ
      +nAGIToAtjVeyT7l2h1dYD6bRcxZY3xVod5amEUz6WG1HPRrXT8kccb0glS5E+E/KlSnpMQs
      L3wknlRognKplEKhc8yLElvzDWRKx9pSVGaHv5PeNeJ64eQBfOiyDu+gSa6DU8omNnygjzNK
      B05/xxxgO15KEyBXphRz+oxi9nnfaUOS/pEG3U0lpmit8dbLX8OzG5cA4/DSlWu4sLvbQ8Ek
      plhqrz37JTysNk9VptlErtc6z2qOi2cimtGn9I5UL7rbZusmmmDXRdjOdIZ52QMJZDqDgIgo
      ILROxhhUzDx92qaS6+S6VIYHELkZ97rO8gLzooweWiIAAQGlPfCVWZMfyxc2JU5qJH7lWRYj
      Alvj9QnOlfhApRy+Kx1fZ3yUKgXHWdsHxGk5NjUC6DPlhOfuk5UqA4ePSTnsaE6vtWHDSCXx
      5stfw5sPPIVvvfjK5OZJ8wO01vjdr3wN2+2E8gsW9Wgtuo9vQczHuJrnay7+k4Ly0s72Kp9H
      9o9voPkxFsiDA3TNMwgqUykFrTV2dnaws7PDHKTeCtS2LU66+lz9kMAwIIwruekDyiwfxMmn
      RJveQyZFLmakA09/5xuC1wWWQmIWECo6041OEPpZZjnmhbeWVOx+fl03YdFxjsI7zIBjUgGQ
      NuAbEQFMycBCeBS7Rb2KjIAbFOIznQ2AYcoHAyqF537t6ThP67grf9fW5iZ+6/oLEHUS9Ad2
      2kgJoRXkXW4A1xnYpg1m1z4dc6pvXNYf9eMs0cfRZnVwxsQTYN19SiiUZYnt7W1sb297mBUp
      Y+FuJSXqtsGqrlCZ7swchGAd8qYhcixNwZiTAmcCgYzEo4kOO+dQBZyW1JOc/uPHJ91L9YKn
      FFpu/eH35sHvQJ8XjEvznxRRGE+HIG6RV5uLK35+ZDSl8vHx1hmDZV2hMZ4gG9MGpIkxbpDA
      sBSUt4wNN2Z6Sk4ZCe6/9168fOkaLPOtpEFvcn8H5vahv5/Pu3WwAeyq+/gWuk9vo/3oJrpP
      b8MenMB8dBNSKegyP5WQ13Hrs1okfjpkJsTRtGklY6V6Yrpt2wbRTERdqa5qOK3g3DikH+j1
      GSFYUVwKMeWyFOC5bUSDgPDwJY57YiXIuzYQl4JZ8fD4CDvbOz6H0w5RplOxaMiNHbTsQ3RH
      kxEiT+ldEn09simuyzcbvZuaYPdMEawJpxi/j/ddCB83RSdkZzrvJVcu6jIpAfP353mOqqnR
      1R0600XdpAgoHevIK1caD12+B2+/9w6OLwxFJ9d1sKsGrmrg6s6LQlIM1AaZZ5BbM4i9caKN
      bVvkARWCJ5Kf1abmfvI6AGChaVMAVvx5zjksW18lKM99IRXnHI6Oj6IVjgwst48OgUwhhkAL
      /54YGRpOeyEEtHMuytad6cIE+USDFFWZ5H9SgulkEABU2EAECgUERxiA48UxNso5ThYnkOgV
      HYmekOgnIU5nSsffTzttyDew7nveKLSCrqFJgBsrutSo4s1pCwNgEKPedG3AxrQDxjAlOhGB
      tW2LTOtoUhZCeHNrMO1644KPVm261nPCpsZ/+6vvoZlnsLeP4KT0Fh9nvUNpVkDub0NMZPid
      1ZQ6v6/gH9Mi6RNxrnHK8fX4pDrBweEhLl/ydQCstWiC+TvXmc9sEwLL1RLQad1nzvD6dR6M
      0hel0FF2b0ORCt4ZLpML4WViAsBdNTVmQRmmXWmdQ1VX2NnaxsZ8A4vlMiipNHjf+pOg7w+J
      ORxhjTi5lCQKjWP204lbN6F+U/f6CedepFStKxxOY5y2evSwgp010CG4buokU0p5SD+dxTCN
      dL4tHJxxMGGeSSzcmM1R5DnaWe6rwUsJkalz2b9Pa5wp/WNbej+hTNB3NBPEgFCOfRQ8j0EI
      ATvL8bc3fon9vT2cnJzAGONPXbb2vQl0rEdN/R5Zgw1hzHTUK6V8iqIQ0aHF5W0KD860RpET
      KhsG1znnILXE9tZ2rCy/MZ8P5Pf0ubycTWo1AhAdUDxiNG5KOSRm/pwpsyg3d6bc34ZNtq6l
      Ogs9uzVdJFBKxl/UKyzrKlrDeFusllhW3nvZe6y9OEd6gl8XFW2QFP9UtQ325z5EQZS59/D+
      E4mWxiZVr7dNiT9T1rVeqcUAXCGu4+AkDcovvXNKBEr5hRT4m0/+wYvgTRPL5hI90u8Hq2Wc
      BscewzdefGTsoAC6YPEga8jUgk1NBHFRClmgNp/Psb+7h850WCwWODo+jiVyqrZeO7GkeKdJ
      KZScQ6LXOq7Kn5Uqk+s4QdoG+clr9BDOxaJpWKrojeZ5Er4Y+ET1EyH7rLRA2GUA/iXvMj13
      lpcReobeu1UMy88RKvZ5InunxLH4e6Zh6yb2a9LQMfnUaRO0QKqgC3Aubatmsk/95vFt0fZx
      aUqpgYed2rKt+wBB9papMcQVMcYnmHiMUInWmBgXw0ONiSPwjtqQyZUquJ3pcHh8hFVVoW6b
      eASSeZLHzqSDJnS4+A7n0IbCeRTeHDkw0CO/sUnnyz1gPwAAEwlJREFUEaMka09ZBaYaP8JJ
      Keex/2RVifqE7dGlfeCeRhtMnRReYYOOw9+tlYrm3V687BV6wlFSSsZ1oLRT5xz255vxWZwL
      kr186kQ8T1O7W7AHC7Sf3EL3yW2YgxO4jvU9Of0cMNA1KISFW1wGzAjDyFk0CS0Yi8fkJr52
      4SqyVUuLgmfvvRqSoPq54s05hzvLk/j3iOlhSCMaQExayXUGSBWBbWUCOOtl794aQkprFUIP
      yqwYEG1TNzhe+ULXVNHRwdf5ssvp/AMuz3NRyjnr5d2uDRzW54YSYXPuKpMNyz9PLVHrmvcw
      iz6k2jlYa0ZIbFOycpnlWNQrLBZLdIWBc/1JmukM82LmZXYMudIUkQrho1md8yhp5IWmeJiL
      uxcgPnsPcl6eOqap707TbaSUyO7Zi/3qTlawBye+gJ4QUHvbp9vtmU6Xfs1NoEL4whqD5xiL
      V3fuxxsvvQJrLX768Q20CKHiLzwxuHYK5uakrUHqbdyc8P+ljjxNJiHiornOUHfNwE7NTYSc
      OP0G6E+DpmsHhEjfCdGDGtVVhY1yBgSnElckOefmRAz0CrHOh2Zask7x45QTkrG+DpljYdJT
      J0BqjeqMGSBPSOHRKBDmSUs12KCDBURvnwYctuabg2fxOZ3aQG3AUooZbmED9sBk/ea5+uCD
      +NfzDfz0xruA82Hiny+O8A8nd+C27qY673AugH4jAICcF0Dp/SrOWtjbx3BKQO1uRdN5Z0Lm
      XdQFEqGHj9PBV9sE4OrG5yPTPIZKoFJKLBYL1M4AUHBa4X/+6C/w6MUreOTKfbj/vvsHuoYQ
      wsOqJBYlwd6Z2pQ1Eae1ffx4ofMRJ6YJ4RtBSokMIcbeAbnWsXyRMSYuZBZwQ4UQ6Dqf7F7k
      BbTWHsefbYLOGnRtE61JU0RyHk5HaBd110Ap7yFUUiGbOHGAae7bmg6FHJtYdRIrNHWKzYoS
      y2oVgvXGG4TPJx9fE1AnYDCAqaE7PV6RjQgYVVNj/+I+vn1xPzrslFKo6hr/5Xt/ivftcsyC
      z2h0qvK++dM7WLekhLq4A1c3MJ/egbpnH5ZyE/wDInefevdo/ZoOYndr8Pknx3c8w2x8Ciwq
      v0afYolPP/4lfvjBO3h8Yx+//xu/NXjU4dEhTDZEBhycAknzNcLgE8OpsiAwLI06xeH4NRxT
      tGpq5JmfpCLLgc6b9rwzqX82efPKWYmDw8OQ0eNTGQUQPM5ybYE1YOzc4s2nQwLOWqzqulfs
      nYFzXkzZ3Nz0dvXGO1j4czKlBzPGNwjfNGQCTuepyHLsbm6j7lpf92ymo9+D5sCEugd0bxPC
      rGlcnemQB/Fn8HyIGNZd5gWU8OHpremgglKYaY03X3wNf/j9P8VqooL8aW0qUtcG9AzeRJEj
      29tGe+colkZaRytp49/PdQ7lJCh+01mLqxe8rX97ext/8OLXvNUxhqp7/SYLYA3cGLJYLL0T
      jLVejR73SRNHzxOLCid+smWnzTiLTOoBEVIFSSUVcqVR6DxmdtFzaeO0rT8hZrMZjk6OkSuN
      fKLS/FRL9YRBv6xHe7bWociLiGDhgiJb5kWciyzLkAUUiqZp4v3GBh9IuM7H93sUBK7naCba
      pASwMZsjNx2WdYXOdshVj2hWB3GRbwjuB1BKBVhJNemF7hfQix/+lB1CwlzY2cVvPvkc/vvf
      /WRtZffztFMtbZkeJLNwkyOAc4VK7M238ODeJfzo4ENACIimw0P33O/vF8Dly5cjU+HefgAx
      FZbm6Kgan3jeGbnGCrQOZHYwSNcnltPfbUj44FYVE+Rmv1l6QtBhcehezkGXqyVynWF7cwud
      tahDHa+0s+ssRmmf6rbxnmmpItAV99LmOvP6Dbw4RhtoY2MDEMLH83RNiI/qYriFVjqaKanR
      vakliPdJCTnwVAMIhQP7eScuFhH0lEahMjgg5kFwDKa0EROTE/146pHH8MKF+4YeRta/s9qZ
      tLGqRjL3OgPpuraRF/jGF1/EXhdgVnKNdz/8INBKsOQFUZ23VUy66k+qA2YB4o3T3MAwclbn
      hOgLVDShbGoMR2YP4oRN8fupnDwySQnv4KmqCkpIXNjZCVk+JooA/XUTQWXsea3p0LRtjNzk
      fVPBacfxQQGvqHJiofzhQufQSqNkmWHp+wbm0GSS+UR7EbE/1ay1qAMz4WQihIh+A4oBoo1D
      Dso0qtYrx0NsU6A3R9J333z+Jdxjx55WfmKta86Nzd6D7+o2Fs+mvvaq73iOptp2OUee5/jt
      Z15CdlJhvjL45NZNAP603ShmEXkkPk8glsbi4TKL5vQw6JQGdcrRyLTJH7pqPJZnVNBCo9CJ
      KdlPq7s7ctu2xSybY17O0DYtAIM6bDjuUEoH4zkpAlcHhJCTG5M8q7w550ttlmUoBBgKdy+b
      Osqa6yZzSvdIrWb8M4JzpPKw4cLRNQPlMxBS3baY5X3IB39v07bIM4+YRkyJZF4pPFpGlmV4
      60uv4I/+6v+gLZKCf+dUkKeuE0LA1g3U9nw8F/ABIaQ4r9UNnMPuzN//0AMP4t/v/34EUZhK
      1OJ/cwmErj1YLYA1uf5TazZ5AgiImMhCqAk8HIJCg7mliLcphxP97jmgJ4KOwR/6BQdkyDwi
      3wLBYadcPdYZQE8UWSi8QSBbwNiLmRImxZKTGAEA86IcxAClG2pqItPx8nfEa+AT/eO1cKNn
      Etd3zpuntVQxnZK/ixoXr6jwSBmUxZ5x+CqZ/+zhp4Hu9PTI89Y7oH4IIUbBdvG0RDCE0jxi
      /GxnHTaKHgVjNptFNGg+pyktNa0PN09xYI/qan2HJ/a6dOjhR2hAUno8lVXjPbgA+qRveFms
      0HlEaOD/1h2V9JNAq6q2QdU06JyBE8BmKHlpnR2IV1JI1G2Npm0mQyc8bMlYJOPvTpVlTpjG
      mKj8xnli35PIso4oziNG0HOcGztu0nfS85TyaBazovRHfVFErsj7R/4CupdOZDo9spCy6pzD
      c1+4juvz/VNF9LuzFwHOrA+XiXNOm33qvZ3B7tb2aA4ghvisfO3bUCOiNV2sQeGcjw/qxCmF
      8pI8D18CbEK29UpHj3LgLSI6JpHwztI9vKUxOpwAlTcGwjqLne3teCocHB1CQcSiFEQIrem8
      OCKG8e5CCFRt7UWbvAiWJzmAa+cTJoBIHGlbLpfIsmyEWAcgFObrYIzBvBhnVpGzaMTZJubJ
      Y67yi8bPoVYFMWxrawuaBQhSEFjbtoPNnb5v6nSWUuI7L76Cj//8j3EnW78LBgojMJDoB1Yd
      5wCtIiLgmeLU1PedQVkWIw7P9T4fZtPfooREmRew1qA1fRHEtqqxcmfnLSilIJzDfSiG4dB8
      MqX0LzHWBCzOLhzLXlQp8yJez2EV04Hwz8mSVOY5ytJjdh4GpC9SAn2ogMCq8WhtWuqBV5r3
      1ViLTPU6RxtMlSkReMV3zK259eb4+Nj7IJic7ZxDpjPIUCiQ30Mt5eg0Rgpf4O/iz+YwK6li
      RuWhdrZ3YmUdakVRoCiKWDqUkPb4BuI+nPQ0m8/mePPZr+A//ewH6PKJ/Gc2vMF8RU6O3qLU
      GWxbCSwNVs54MOA0glbQ5WH7eE9ZwOz0Vdt1lgECKPLCh6EzsVhOKP9KKUgnYYSEc31p3JPF
      AkaefYqpZY03HrqOb7/yenCEsYFyAva5twpl0e9Q+q7p2himq5hlhXOPNCdWwOP4ODjMhIhH
      HN8g1vnMqjIr0NluIOMPJ5asJr3pMFM6KoVxQcN71zEn2sBN04xCeOmdZIGZapzI67bx4SSq
      943QxqnbxodjgPKbexABvhEoX9g6h7ZtsXQu1syi6+mZWZahaZq1ifRpdh/9vHrf/Xj900fw
      Z5+/5wtjDAaEAQXxYLOUgRQd8O/e+i4gBY4XJ7CdCfhKLsr7BEBA92XaQ0MSLWVZhnsuXY5l
      kBaLxSBpaZ146eBP50xr5IGuTlbL8XhYE3WLJ+Z7eOPlF3Bp/6JnjinHBjxXo7gOIUSEm6Nj
      SSsFY/uqMrFTbLLTIx1AlPGd9dGedcMUUNEjS/vN0CDXGdoQfEWZZtwCQCIZ3xyZHhfPoIXj
      E5t+P6Uop/nRgwWYIFxS1K3zCf2Z1rH+gLHe0y4hRr4E/swmHOdaKtgA79F1Hba2ek/rZ7du
      YntzC6vlctAn3tcp3YR/9vKzz+P9P/8c77nl6P7TGifMe8pNbG1t+ZM4z6GD7wXoMwP7gna+
      bSTh20IKbG5uepG2qgbYselp7IJlCxiuv4NntkfLxWgDOOcgO4uregPf+OLLePD+++Pnx8fH
      vQjECZbEBvo9C06gZe0Ho6TysTbwJlIuG3NFOiUqF3IMynDU7W5t4+ad21DSWy5iX0JwXtU2
      0FKhDrL+1EkwtWhVU0eLEPWJX0uceUr84OOg2HohfHDWycnJ6PpoqnPeWWOCoi8c4Fq/GWYB
      zNePy41MxPy0oE0kZL8Bu67DrTu3vV3feqCww6PDATDxujFMKd1+DSXe/PLr+A/f/xOc5Her
      +vr22MV7I9NSsrdeRUMKgCLz+pkMJlEKtGy6Nuh1KvZzNpuh6zofSBjaYCMnpxNfCyWVh0Pk
      1rK2wwNyjq9+4Wk8eu2hka5rrfUbgBNWytnoRVSYwntVXdQBiHPTsdx0PreVdioXp+pQ+VEE
      DT/LMmwUM9ShKg3J+oTnWbcNHBCLVaxbzHTx8yzHqqmQ2V5/SDmiz7XtUYXJKmCMQZZlEcO0
      bX3+LXmNpxaGXPGesA2E8AtSt020Zkgp4IwnAp5fkUbYFjqPZmLe76quYZ2Btc7XZGYiFF2b
      Nv5sPnf0+c72Nn7n+ov4z7/4YYRtnxQ3J5qoWzz2wIPjz1MdSfSRwMZ5Cqa8CgOLMi+juAZ4
      gAC+Afgz121y+u6w8nD8zhhcMhpffex5PPXoY2vHI0RAhajaGjJo1qlVgZp1DvO8hA3cI1V4
      aVKNNehqL5uRjZpwcnzhCYGuM5jN+hrB5PG1zsYgL5LpV001eN+6wQy/c1EWrUIFGw6XQnE3
      mdbxCJzN/NFM3uTFYhEV7bprICHi/PCTwwbiBhCDCjOdx+QdwEOkkGhU6KF+khJwpn15WT5m
      wAfvUZ5Gxk6204i1aupY9ildV/r98Ycexlc+/RA/OvwI4hTHX9p2rMKli5dGou6U2EWiioUP
      DWm6FgjKa9M0PlQmKPta69GmnTJcpM05h8PlAjudw+sPX8ezTz4VT+91NA2EaNAZk+OnLiSR
      yHP8sbzMF6LIcm/BMQbIho4V6yxgJfJM+RDluo7Rj/QegjqsQgaZdQ7LusJmOfeWg1Mmg/fb
      OQulc8D0feD91FJ5OTt8VlVV3BjRGQXPHLw4pEecKCVAITzYbtu1MPQ+AM7aUPhvCMjFF5qY
      QVmW8W8uGgkhkAWLWBqlyk+StHXGDELAuRhAP994/iX86s/+GB+hGd2fNurT40H84Z8N53/Y
      JyEEdGBKAoSiEaoJTcRQcaeZCHQAN95cvL366HVcu3oVRTE8Hf08DC2EsY/8mDUsMG6KuFIQ
      XLp3SAQBnyUsXMVyOOMznEPXGbRNi447O5wvPyqER3jT0otSpGO4wAFTCwH/6eAVSSJmUkgJ
      0MsYg84azIoS5Brh0CVcrnasb3mWjcKEqcYxNSV9phaZiknEKvMywvkNkmyY9UYIgTzPURTF
      iGsJ4dElKEWV5yrz9eML7iFZZBQt+Pck/9Imy/Mcb33pVRT12SC6Qgi4psNj9z6wZv1FHFuK
      mkE/sxAbRacc93OQ8swjgmnTTDEg3p54/HEURTGJY5RWLCWRWvJApzQTKz16KNyWd4wPjhSi
      eVFiXnhOlqthHI8QArP5LNrcvb7gwxgKnUf8fgER3fqE3uBrCk+nJDrnsKirAOHuMC9moYZA
      gc1yPqhjRkTIcU5T0YCuLXQeE91TLtfL/WHxAqAAXyQh/O+ruo46zbq5m4XCGKRv8HdJITGV
      AL6uSSFDaPmYQNO0UOcc9vf28J3HnoU4I1QCAGatxYP33jc5BgAhetWMzeD0fYKYl2XZaKNM
      iVLrpJOR3hHoeCCdrBEXJe8c/513ZlmvooMn7WR67RS47bwoI9Htbu2grpuo6EgIzItZgDEc
      YgFRX3w8UJ90PnVkQviMNGMtTIhPJwDbdGxT45yaeC7WLeoVVk01Iib+vDYJmSBzchtQrJ1z
      WDXVoGgfn7uTkxN0XYeyLEcEOlXlni/wOgJJrxmLbf29zzzxBTyzebkPXVjTrm7voyiKybnz
      +dkKU+4oerdO/EYk99d1jcViEblzei9dP7n+7HcCaQDQW9VE72siFA7ngh9gHewdhUBTjD9d
      xz2m/Hc+yLRplqFliMMlk0f3pf0hztehB+qy1oKSnPnkE8cjUes0pSn9bmpySTwqkzRRfg/9
      naLYUVE+el+EcnfTuQN0GhPsnw2OMwLE4msQHjMis6kxUPOI1F00a0/pDN9+/iU0b/81mpxH
      YvZvcnB4Yr4f54ETV/o8s+bEStf66OgIeZ7H9NjztAHC3xr/jjEGEsP5sDaYqEOp1/8Pwz7u
      pr/Da9wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Causes for Calls' width='192'>
      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
      eBJ1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      TW+enpuZmcOsX7zJ3P/9mbDwIOc1hULy2E2RJAml0vVZiot+19U28OKfPuDIkVNIktTuy5Uk
      iSZ9Mx+8v4xdu47w+pvPEBYW5OZPoXBNn8lk4o+/fxez2dLm8z3lS5NOzzO/eJPKyloP90mO
      Zd+fH6DbmQaiUnzIXBwLQnIr/I64A0IiZ3MYE9PGMWDAaJfrhYXlPPfMWzQ1NbuFJSFhs9l4
      b85XKCSJBx8a12YeXa+02cmtN5SzOPM5ogN6MinlT+0W/u9LXV0DRUXlLjVjW8snysqqeGf2
      Fx0Sbr1Wx7PP/IsjR067vfSW1sNut7vFRZIkjh09w7Oz/oVWq7tkODabHbPZcsXxq66pp6qq
      7kLcPGSJpICSrCCyljgK/8VpcPMvwfvvfUVdbYOLv3+/tZimpuZWbu7vQZLgg/eXcyqv+IrT
      8lPHYwtQVn+C1cf+H+P7/Jbu4VdvSUHLC1YoFAwe0peUlATUahWlpVVs/zYLvd7gsvZ829ZM
      nv3VvUREOLpCdrvAZrNfVheo5bfdbuflv/2PgoIyt8I/cFAfbrttEF3jIgEoK6th+7YsDhw4
      QUsplCQoLCzj7y/9j7dn/+ayBspCCLy9vekaF0mz3khFRc1l5YukFESnNOEXaqa5zotzx/1d
      C7sEwn6h8khM7MLwEWl4e6s5lJ3H4cOnXNLY3Gxk44a9/Ozh8QCUn6shKzPXJZ5Dh/Vj3Phh
      bP82i507sp3322xW3n93Gf+d88Il03s94SaAsvoTfHXoRe7JeJWuwf2ufgRUSv751nMMG+Ea
      1mOPT+bJmf+gvv5CTWu1WsnOymPc+GEAPD1rGjMeGMuzz7yFyWR2+uvTJ5Hf//Hh87a98+Go
      HUndsH4P+/cfdykYPj5evPS3Jxg9ZqBLHAYDU6fdync7D/Py3+ZhMJgARwE9eOAEmzbuZdKd
      N7WbPiEEU6bcyjPP3kNQsD9CCI4fP4uh2YTOWE1hXSYGU5N7vnjZGfZEEf7hJhwdJUF0SgBZ
      n8e6TVYJIRg1ehCvvPoU6vPptNvt/PONRaxetd2lEsnMPOkUQGFhBULYndfVahWv/uMX+Ado
      GDd+GK//41PWrf0OhULBTTf354mnru66rh8DFwE0GCr4MvtPjE954ZoUfiEE0+4e7Vb4AWK7
      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
      1xvXUeHBinMlpKZnoFAoOHYoi6Kz+dRWVzFwyPBL3/gD8NVoGDvpTo4eynI5f+dySE3vT2BQ
      kMdN+zIdQ4cKIKF7EnknczyaL21WKyeOHSE+sTuKS5wE0RrHjq+pBAcHs/zzxW4HTF0Jfv7+
      9O6byqHMg2Qd2Ed0l1i6xrv3yTuajEFDiO0ax7qVyz2u2zebzR7PPbJZrVjMlna7TjI/jA4V
      wJARN2GzWlnx+WKamy8cYGs2m1m/agU11dVtzsa2h7e3D3fP+BlVFRXkHD/+g+I4YMgwKsrP
      cfRQNgOHDmv3c0TgsOKYTKY2/y7n9DSFQsGkadOpqqxg3y7XrpzNZuOTD99l4UdzXdYQWSwW
      NqxZicViIWPwkO+XWJlL0qGD4JDQMB549HG+WryAt197lbj4eJRKJSXFRZhNJqbd90Db9uRL
      FKRuCYmMHDOWbZs3tu1JcMkzArsn9yAkJJSmJh1pGe0fpSIQlJeV8o+//tnjdZVSye9eevki
      u77nCMTFJ5AxaDDffr2J1PT+BIc4dlUplUrGjJvI8s8XM/vNfxAXn4CPry8lRYXYrFZmPPIo
      kVHu5yoJIS7rPESHQL/HQOYyn3+9c1V2hDXr9eQcP0pVeTlC2AmLiCKlXz8Cg9o2ZTY2NNDc
      rCcqOqbNeNhsNirLz+Hl7e12WpkQgopz5wgMDsLPr/2lA3W1tdisFiI8FKzWNGi1NOnbPpJR
      wrEgTqG40KWr12qxWMxEREa5+TcajdTWVBMUFOy2uM1kNHIqN4dzpSVYLVaiu8SS0i+tTetP
      Q70Wk8nkURyt0TU20KzXu5wQdzlUV1WiUqmdW0JvVOQtkTKdmp/cUggZmWuJLACZTo3LILgz
      nAcv0zHcKN1lpwBulATJyFwJchdIplMjC0CmUyMLQKZTIwtAplMjC0CmUyMLQKZTIwtAplMj
      C0CmUyMLQKZTIwtAplMjC0CmUyMLQKZTIwtAplMjC0CmUyMLQKZTIwtAplMjC0CmUyMLQKZT
      IwtAplMjC0CmUyMLQKZTIwtAplMjC0CmUyMLQKZTIwtAplMjC0CmUyMLQKZTIwtAplMjC0Cm
      UyMLQKZTIwtAplMjC0CmUyMLQKZTIwtAplMjC0CmUyMLQKZTIwtAplMjC0CmUyMLQKZTIwtA
      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
    </thumbnail>
    <thumbnail height='192' name='Property Types with most Fire Calls' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Record Counts' width='192'>
      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
      1ZkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAMJUlEQVR4nO3deXCU933H8feuVlohgQ50IBCYwwKMOIxtDFJcu5hwOHFsNyEJnbhHYpo0
      49RNE8d20yup28zUk3jiJp7GnaTJ1JPLYCMibrBxjI0FEocwAh1ISAIJodV9rJD27B9SbMuZ
      TKCRtA98P6+/YHnm2d9Ps2/t8zy/ZxdXNBqNImKUO9YDEIklBSCmKQAxTQGIaZ5Rf4uGKf7l
      /7LvUCnJ6dl84tMPU7B8IU0NtWTOzCPR8zv2ck2ilL6xj1eK9+IPutn48Ge5d9WysdixyDUb
      9Q5w9u09lPvcfPf7/8WTj30ed2QIgG0vPk9L/xg941A7pWdaefJfvsUzT3+dn//g+wzoOpTE
      yKgA4uI8dHW00d3nJ3P6LFbevoyS/a+w7/BpvvH4F3jiX58F4OWfPMfnHtnMI49s5mDpGQCe
      /ruvUnbyTf5q82ZeP7iff/r2j4Z3Gh7gsS8/QeQ3T+LN4m8e/UsyUpOJj/fgTZqMxzVR0xUZ
      bdRBzcKCDTzU5eefH3+UuNRcvvr41yhcv5ENR97kgb99jrlp0NN0msP1UX784/8hPNjDl77y
      DVavfA7w8+bxRl744Y/wuKPsKfoS3UOP0HryDfIL1/7WyUZtRSn/+cKLfP4rT5EwcfMVGeUD
      R/UuVn9kI6s/spGLNSd45rnnef473xy1RWtTM3n5+bgAT2IqOV43w0dHSXxu85+N/DZ38dCG
      D7HrtaN0v3OEB774D6P2cXjvSxSXNPL0M8+Snuwdt8mJ/D6jzwFOHuHk2VrCkQihUAhP/PDv
      5qSkZC5cuEggEGD2LYspP7SPzr4rNNeeoiXqZQoALlzvO5QpXPcgZQe2cHkoiZvS3nuRhwfa
      +Onuk3zrm0/qxS8xN+odICNjKi/+9Of8d2MzM+Yu5KmvPQbAg5/6c5793nd4NXsh//bUo3z5
      sw/y7//4BAkp2Xz975/ABczOu3nUztzeVJbNTCbt9g2jnrC33Ud4sJNH//oLI48k8h/Pf4+p
      Og6SGHD5fL5xuQYTCQX44Q9e4OEvPsbkeJ3l/kZ8fDxpaWmxHoaMcPlaL0azsjJiPQ4z2tq6
      yMqeEethyAitBItpjgygraGKhraBMdrbAGVlVWO0L7nROCuAaJTG83XU1zfgHwoTCQU4V11D
      S1sXAKHAFaoqq+nqHY6ju8PH2coahkLDy2xtLc3U1DUSHvmIQ3vrJc6db6Czqzc28xHHc1QA
      r+3ZQVN7H93dPQBcbDhP32CA0tf3caFjkD079xAIhamuqQWgsrKacHCQ7cX7Gey4wL7Dp/F3
      t9F0uYuaU6WUlNcx0NNDIJaTEkdzVAAhTzJ3rVxO/oJ5ww+44vC43WSlT6a9u5+F8+dQUXGG
      7v5BiATxJEzCHRcPkSDe1GymuK5wtvo87jgP9a19PLDhbm69bYlWmuV3clQA/t5uBoZCtPp8
      AJw6XcmiRfMJBYZvyvNOyWDTpo0MdLXib62nM5TMrOkZ+AcG8ff7KVyzlo/ffzcVp6vxRgM0
      tffS0eojGMtJiaONyQ3OY2Xtmj9i/+5d5ORMZ1ZKAlkrllJcvJdFCxaSnp7EULuP7UU7WLR8
      Bck500muPEhJeRcFq24ncdIkyg4dpi/o5sMfXs0kd4BXD/wa79RMbrk5N9ZTGzO9vb309fXF
      ehi/JTf3+vwZax1ggv2h6wCdnZ10dnaO4YjGRl5eXqyH8P/iqEMgkYmmAMQ0RwfQ3dn13gdp
      rkJnZ9e4jcWJTh09wtEjJZypabiq7bs+cOh0pqJ85HFbP7f3c9RJ8AedOn6SgnVruNqbpsuO
      nWTD+jXjOiYnieBlVcFtlLxdwqney/gHr5A5LZezp+u49c7b8DVU4krOZKCjCffkLFISXFyq
      PUdvXByhkIuW2nLC7smE+/romNKAr2eI+MTJ9Fw+T4I7yryC+5mZ6uiXyB/Mke8AFceP8NLW
      Io5XDC94nSg5xJatRRTvfwuAQwf2smVrEaWnaiAaZv/OHWx9eTuX2vuAMLu2beOll17mWMX5
      GM5i4oRDES77fMTFJ+HyeMmbl4nPd5moN5mVty9lytQc7ilcMbxxnJfld6wgIS7KrLl5LMsf
      Pnnt7AlQWFhAeLCHjOxcVt6aR8/AjX8B2Xl5B/uoax1i06c+zhsHDgKw7I47SU5r5HjJCfqB
      i80t5N/xIRYvyqOhoozs/ELWz8tk3/6DgJu77/1jmlp8lJ+pYMWSeTGdznhKnRJPaelR8vKX
      khDupaahmdTkSdT7omTmZJMYHaCsvILc6TkA5EyfTkfTRU6UHmXOnAUkRvo5VVlLTm4O6Snx
      HCk5wtz5S4gG/Hgme8iKOu/lMdacN8PgAAmT33+/fJQDrx5i7YZ1dF28RAT404c/Q3VVFcW7
      D7Igw03WnPR3t/a3XeBYXT/3rlpMU9OlCR/+RJqXv4T38k6hYNpMALKzs9999P1X53NmzMCN
      mwUzcogHIJ2MnPf+vbAwc+RPqcP7GZdRO4vzAkjKJtj6Olu21nPpUgcF69bQ33mZ7UXFNNdd
      In/9XezYtpOAy0Vazk0sXDaXn239GWlpafQGIC4+gXPvHKez6RxdA+FYz8Zxsmfk/P6NDNFC
      2ATTQpizOPIkWGSiKAAxTQGIaY4OoKGuntA1bF9bVz9uY5Ebk6MDaDxfz7Vcx6lTAHKNnHcZ
      FHhtdzHt/jDNTW0UrFvD8bcPUdfcwUDQzV985iGKt/yCgCuR2fPzWbEol19uKSZhUhL9ARcQ
      Yucrv8IfipI6bTb3rb4z1tMRB3NeAIMdBCblsumjd7y7Epx70xy8qVlUHnuHfsAT52YoGsdN
      s6ZTXX6cu+7fyJyp3pGV4DgW5i8iEHFRUXXj3Qrh8XhITEyM9TBuGM4LwOUmOPIRyEgkAkQp
      r6jhvvvW0nquDgiz/oFP4ibAr3b/miUzkxkcCgBeopEI3RcraY+kUpCfw7naG++QKCUlhZSU
      lFgP44bhvAC86UybdIUtW7czOBTFhQsvg2x9eTvhIfAQ4cCuXfiDEW5evJwFC3PZXrSDs3EJ
      xE+ZypTsWTS+uZvmqiSS0qbGejbicFoJnmD6akRncfRVIJHxpgDENAUgpl0XAZSVnbi27Y9d
      2/Zil6MDCAeHqK6qpv5iCwCD/l7OVlbR4x8EwN/bRWVlDVcCwzdM9Pd0UVVdi6/debcLizM5
      N4BoiC2/eIUrwRDd3cPf7lxTVUM4HKFo2w4iwI7i3YRCAc7VNtLna6Ro71uEAoP0+YdiO3a5
      bjg2gGBXM9Py72T50sXMmTkNALcnDhcuEoAgMGfmNE6fPstQBCpP1/KxjR9jydIlTE3RSqlc
      HccG4ElOo7WhjlAoOHJIE6SmroX5N89i4MoAECBndj6bPv0nNJ8/R2ZmMpVVF7jS102vX1+I
      LlfHeSvBI1zeVO66dTbFOw8wd/4CIJ5b5max92AJK1atJA4P3W2NHD95gsJ77mFGxhTa33qD
      11vcLFq0INbDl+uEVoInmFaCncXjHxiCNrtfjTfRgkF9U4WTuKLR6Lj8P8Ei1wPHngSLTAQF
      IKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQF
      IKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQF
      IKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQF
      IKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQF
      IKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQF
      IKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQF
      IKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQF
      IKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQF
      IKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADHt/wAXFezYwi7u4AAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Top Reasons for False Alarms' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9d5RcWXrY97svVM5dnRMaqZExACZgws7Mzuxs4HKXpkRTPJRlU7Ks4HDI
      42PZos1jLU3p0Dw+OqLlIOnYlkh6JZrikrskN3F2J88Ag0GOjQbQOVZ3V3Xl8NL1H4XUQDc6
      oBvVjanfP0C/euGrV/e74btfEFJKSZ06n1OUWgtQp04t0WotQJ06SyGlBAlGoUIlU8IsVrDL
      FrZpIW0HhEDRVDSPhu534wp6cIe8CEUghFjRM+oKUGdTIaXEKhpkx+fJT2cozuZwTHvF1wtF
      4In5CbSGCbRG8ER8KOrSEx1RXwPU2QxIR1KYyZIemiM3Mb+qRv8o3CEv4W0NRLY3ontdD31e
      V4A6NUVKSWE6w+yVCYrJPGxQa1R0lci2OPF9bei+e4pQV4A6NUFKSSVdZOrcCMWZ3BN7rqKp
      xPe10rC7BUVX6wpQ58njWA5z1yeZuzZVXczWAE/UR9tzPXUFeKpZ6qddoYVkI7DKJuMnByhM
      Z2omwx2EqtQV4KlBOmAWITsO+QSUklDOgFUCxwahgOoCVwB8DRBogWA7eMKgPBljYGm+wNhH
      NzALxhN53kqom0G3OpUszFyB2T7IT4NdWcXFAvxN0LAbmvZDsG3DxCzO5Rj98AZ2xdqwZ6yF
      +giwFZGy2sOPnYDE5VU2+iUQCoS7oeM4xHurf68TxWSe0ff7sY3N1fihrgBbDyMPo5/A+Kcg
      18dW/hCRHtjxVnWK9JjrBSNXZuida1glc52EW1/qCrCVmO2DWz+G8vzGP0vRqqPBti+Cqq/p
      FrZhMfzedcqpwjoLt37UFWArIB0Yfh9GPqz+/0kS7ob9vwju4Kouk1IydXqY+YGZDRJsfagr
      wGbHNuH692Dmcu1k8EbhwC9DoHnFl+Qm5hn98MYGCrU+1N2hNzOOBX1/WtvGD1Cah4u/X7Uy
      rQDbsJg+N7LBQq0PdQXYrDg29P8FzF6ttSRVjDxc/kMopx95mpSS5I1pjPw6WKaeAHUF2IxI
      CeMnYfp8rSVZSHkerv0J2EtvZFklk2T/ykaKzUBdATYjmVEYfKfWUixOZgQGf7qom4WUkvTg
      LI6xQebZDaCuAJsN24Ab3984G/96MH4KsmMPH5eQ2uRWnwepK8BmY/xTKCRqLcUySLjxg+oi
      /T7yU2ms4ubx81kJdQXYTBh5GDtZaylWRn6q6oN0H5mRZI2EWTt1BdgsSAmTZ8HcvLumDzF6
      4u4o4Fg2hScY2LJe1BVgsyBtmDp75w8+PDtA1pAgHd45fZOssfQO8FQiw/0Tj2QqS95c+vyz
      V8d5eKIiOXl1YnUyF6YhU10LlFIFrNLWmv5A3R168zA/cJ+NXTI4mkCJxHiuReWdcyPs7O1g
      fMqgKwJTFRcTI2PkDYc9vV3IskFcOnx0bpC84uFgqw/dlvzkTB8FW/DC4R1kZ2a4PpXj6IEe
      kpkiDlWrzalLg0zlJW+90MNcpkgpX+DdyxP4wyGebXFxabqE6nGRnp6nZNl4fW4sofEzRzur
      qUemzkJkG+X5Yi3f3pqpjwCbhdm+BX82NDcwP5Pk8o0Ez+xtBUwGJvMU8zlGUmVSJZuvHe/m
      2s05RibmGRqeRIk18tahNhJzafKGQ94S/Ozz2/j08hghvwdFWLx7YWEvH/Z7KCVn+Gys2oB1
      l47fpXLqwjBzmQyX52yObQtSsDRe3R1B9UcRZhnrjhV07jpIm9Imdnh7FHUF2Aw4NswPLjwm
      VMI63Mw7tHurP5NtO+QKFWwJuq6iqoI7zsq6pmJaFqZ1b+ojFEGlYqDpGu9enuT1Z7rxKvfs
      95ZZ4MJYmdf2tWDb1eMnLgzQvb2dXY1+bOCZXS1oikDXVRRF4NKUhUmnbAOZncDIlzfizWw4
      9SnQZqCchsr9C0jBvu4GWvwqwYxDk24TdPuJ+2YYzivs6vYiw3FAY193BE1atLVFSF4d5eQt
      g/3NMfxuhbGJGT50ufji4W5GhgWf3Zpn/7YYflWiAaruozMsGSyo7OpyY3vjNAc0Pugbp6m1
      gYaYH5+mApJ93VE8AZXtuobpj6PepwNyfgSrHHqy72ydqHuDbgZm++DKH67rLaWUnLs5zbHd
      ret638Wwo3u5ObB70YgvKSUVo4xQNFy6zqPDaySWZaNpS/fL0rEpGwa6y42m3JvAzKVmiUaj
      JNM5mqLRxeW0LRRFI59Ponqi+HSlPgXaFJRS635LIcQTafwAspBEOotbnQYGz/HJ1Quc7ruA
      4UBqPkG6UMS2KhQrJebSKUqGiXQsipUSE7Mz2GaZscQkhu2QzsySyuerz5E27516m3M3LzM8
      M0s+P8/ozDSOlNwc7seUZfqGhxc836gUGJuZxrYt/uzdP+bG5CST07cYnp1hNputT4E2BcbW
      s58voJxZMr+PpqgUKmUO7nqefOI6ZxMFZHGOfe1N/ODqCG8c3M/5oWEONypMiBYyiTEcO03F
      1plN9HNuPIvXznDs6Bv47HkcTzMvHzwKSMYmhyiVk3yWXsLzVJq8e+ZjtrW28eHUJFJWRyRp
      VRifnWFgYKo+AmwKrLW7Dtu2Ta5kYDsOpu0gpcS0HCqGSaFiYRbS/MH7g5RNG9u2yZdNJBLT
      tMiXDAzLplixlkwhtBIEDoLFfZe6tx3mK0ef57MzP+bK2ASFYhbDtigZFs8/80V2d+5Es7Jc
      mc5yoC0GQFjm2NO9i0p6hoJZpGJaFA0DRajYtlnNnuiY9A33M5XOkMrMLS6YWUTzN9Lbsw+j
      nCEWbqCrpQ1dc7OvZw9Nfn99BNgUOGsPGP/+R1fxBwLs7o7xSd8cXz8Q5eOhLBNTGba3xdjd
      rHBzbJbRuRjnLo8Q9Ks0tndw7lw/21t8XJsFn2bzy28dIuBaY38oBEIVsEjSh4mJ61yfmkXx
      RDm4ex8nrl3BH4gR8vlxXBog6IlH6Uub6ELgc3vIakHOnf6I/dt34k9exeOPEHbr6LqXBr3M
      O2c+pL25CwEIoeH3ePAoIISC1+3mzMWP2bHnBaLuIH4nzU8/e5/Wtl685Sk+vnCa7XEPmiLw
      uL31RfCjkFLiWCa2UcaxLBy72ssJRaBoOqruRnW5V5yLfkn6vrtm3/+bgxOcGZrnyIEe+vtG
      iPg1dh/YzvXLAyQKDj/7fDt/fn6eXzzawP/y55fZ3xlF8XqRZYuvHGvgvSsVfCLPwX3biHjU
      NcngKG4G0l/GKNYmzeFCJOOJKdqb25ZZcFepjwC3kVJiG2WKqVnKmXnK6TkqhSyOaSKl87D/
      u6gWYVBUDZc/hDsYwROJ4W9oRvP4EMoqelPdt2a5C2UTjyaYz1d480AD//T9BK8ecbhgg2UY
      FIWbUmqOvmSIvc0BHAS726IMjSZBCDRVQRUKtlnm7b55vnykY9UyCM2FFghgFLNr/h7rh6Cj
      eeUJvj7XI4CUEqtUIJeYIDc9RjmdrDb2x0EI3P4Q/qY2Qu3bcAdCiOWSTI1+AgN/+XjPRdLf
      P8SUiPH67siqr07Ppsh7Q3QE1tAnBlqYkF8lPTC7+mtrzOdyBJBSUk4nSQ33U5iZxLHXMWOZ
      lFTyGSr5DKmhfrzROLGeXgJN7UtPlXyxdXl0sKGRXQ2BNV0baYyxerW5jS+O1+2vK8BmR0pJ
      OZNk7uZVCrNTbFg1hrsPdCilZphIzeAORojvPkigse3h6ZGvCYS66igwy7JRVfV28jZBW3x1
      uXvuUDFMHBS8rjtrgKolSddWuCYItuELh6pZ5LbYhOJzYwY1y0WmL3/GyMmfUpidZMMb/wNU
      cmkmzn7E2On3KWcfyKzgja468RTAiXMDZGyHkcT9c2/JSGI1qcctvvPOVSbS9/vyOPz49NDK
      bxHqxB30oHvXlkGuljz1I4CUkvzMBImrZ7HKtXfZLSYTjJ78CQ27DhDb1lsdDYQC0R33xQNU
      OXX+JhNFycRMhu5GH8GGZtpcFfomM8Rbmm6fpTAwmcTIZzk/kWfP9lbmZlMEZIUf9iVRhcKX
      d/oZ0prQE+NEOht479MRWlujvHWkk8TULP3TeQ4bFu+fvsFYssxXX98LwIWrQwzMV+jtaWd+
      cpJE0aKru53nt903WdK8EOpAKAJ/S5j04NaaBj3VI4BjWSSunmHi7MebovHfwbEtZq9fYOz0
      +1iV2z1vvPeh80qO4K1nd7CtJcw3X9lFfj5HvmSgqBo3Ru81tELZ5MpEjl/4Qi+HOsIUyiYf
      30zxy6/vZW9YZXi+SMmSlCsmllBwqRIhFISUtLU28NyeDva1+ihUbEQ5y81UdU3k9+gYho2m
      SU7fSODWFc71Ty0UMrbzbibpSE98Y17YBvLUKoBlVJg49xHp0Vs86enOSikmE4x++g7l7Hy1
      IbnDy1whGUzk6Yj5H7JxtwY0TvRPMzxX9cvfE3fz9uUJridLdET9DI8muDicBEvS091Ecm6e
      0n1LDrOcJ1VRifldd1+X2+Nhb1eUa4NJdnXE6GyO8ur+B/yLWo/ezSDtawziCnrW/kJqwFNp
      BjVLBcbPfEAlV/syPCtBdXloP/oyvuw1GHr37vFSxcTt0ihVLPwejULZAtsiXZFEfDoK4HLr
      lCsmPpfKxFyWSDiIkA4+t8ZMMovL5yPi1ZiczeB2uwkH3SRTOTS3h3jQDUgKZQufW2M2lUPV
      dfw+N7Zl41JgIlWgJR5CdWzGUwWaY0F8dxbL/mZ49u8uqDCTupVg6vTwE31/j8NTpwBmqcDY
      6fcx8pthU2blKKpGx+Fj+G79+2qpo63Anp+H1iMLDtmmza0fXtoy6VGeqimQbRqMn/lgyzV+
      qK4LJq5coBzeW2tRVkagFZoOPHRY1VUa929cqaX15qlRAMe2mbxwYstMexbDNiqMJ0wsZe2u
      EU8GATu/umThjMi2RjxR/xOWaW08FQogpSR568rtza2tjWWYTFZakCty5aoR7c9DZNuSHyua
      Qttz29jMX+EOT4UCFGanSA1er7UY60bRcpG0GmstxuIE22D7m8vWDvPE/DTub39CQq2dLa8A
      tmmQuHrm8Z3YNhWCpB2n7N5kDcgTgX3/IWjLmzqFEMT3tRFoW7OH0RNhSytAdepzFbO0NXPS
      PArpSBKyGxnbXWtRqrgCcPCXq0W2V4iiKnS8uAN3yLuBgj0eW1oBjHyW+dGbtRZjwyhl5sk1
      HF/U2vJE8UTh0H9UrS6/SlSXRtfrvZt2g2zLKoCUkuTAVaS9ifPorwNzA/04vT8H3a/WRoBQ
      BzzzK49VRd7ld9O9SZVgyyqAUciSnRqttRgbjlHIkp+Zhp434dDfANfaXJ5XjaJB1ytw5G9V
      vVUfE1fAw7Y39uCLry1eYaPYsjvB01dO3/bzefrxRBroPv6lqueoUaiWKEpcfKhAxboR6oCd
      X4NwJ45tYBp5bLOE4xh3/f2FoqJqXjTdj6r7VhwX7Vg20+dHq/WDa9zyVI++NRXAsUwG3vsL
      bHNrVCJ8fATdL72FN3J7ASolFGZg9ONqkYp1Kqfk+JtI+xpImwVy84MUMkOUCzPYVhnHNpCO
      xd1WK1QUVUdV3eieCP5wN8HYLoKx3URbnsHjX7qmsJSSzEiS6XMj2JUNUuJlCLSGmWgWW1MB
      ctNjTJz7uNZiPFGi23pp3nd04UEpwSpXC2vMXoXi7CMrOD6IRFBxTGaKM8yUkiRz4zj243cq
      Qqj4wt00b/sizdveINTQi6K6HjrPKpvMXBknPTCLdJ5MM9QDbpoPdzKuV/iLaxe3pgJMXjhB
      dnJrFGJeL3Svn+2v/ezS2SakrJZYyo5DbrKabrE8X1UI6QACVBe4/Ni6j7n0EGOTn5KcH8R5
      jLxEyyPwR3po3/WztO74Kr7Qw1knSqkCc32T5MbnN0wRXEEPDb0tRHriTOQz/NGFM5i2vfUU
      wDZNhj78AValVGtRnjg9r/4M7sByMQMPcCelixBYVoXx/u8ycuXfUlysyuMGo+p+2nZ+nR3P
      /C28D1iVpJSYBYP5wRkyw0nMwjqMRIrA3xwiuqOJQGsYRVPJlkt8++wpMuVq+9lyClCan2Pk
      5E9qLUZNaNp7hFjPnlVf5zgWU7d+xI0z/xvlfO2LWAtFp3PPX2HH0b+Dx/ewy4djOxQSWQrT
      GYqzOSr5Mo5pL7toVjQFzefCFw/ibwoSaI2gurW7C3TLsfmj82cYTd9LRrzlYoJL6a1XiXC9
      KGdWl0VaSkku2c+1E7/D/PTZ5S94QkjHZPTaHzE9+Da7n/uvaO/9D1DuC6pRVIVgW4TgbTcK
      27AwiwZm0cCumNiGjZSymphMU9A8OprXhe6t/rvoM6Xk5PDggsYPW1ABKtn5dbvX3HyGePTh
      KcVcOkM8ssqpxhNgNQogHZuhy3/AzbP/AsfanNVbjPI8Vz76LaaH3+XAK7/x0LToDqpLQ3Vp
      eCJrdxMfS89zcmTwoeNbaiNMSknlUcEupQTvXZq4fa5DKp2hYtkgJelMhmLFpFQqMpfO4UjJ
      5RsDd+5MLpcjnS8igcv9AziOTXI+TbFiYlkmlUqFQtmgWCySyuYpFgvkSpW7cqUzGXKlCuVK
      1QpTrhjYlsncfBrDsvjuD37CRDqLc/vcimljGia5Qp58qcJ8JoOxRIrxO5jlEra5/IK1Ukxy
      7u1fo//UP9u0jf8ekrmxj/nku79EYvg9NmJGblgWP7p+BXuRGgZbagSQjoNVWVm44Lnz57Bd
      IWZSN+iJe5i3dFob44hyluR8mpHIfb2NtBgZnyYxN8OeQ88CUCnkGE3MMZLo55lWL+9en+P1
      Ywc4cfY8TT4FK9yGkcvyjTdepDA7wvv9aXZ1NJKZHmH3kRc4/dlZwm6BKxSj2Zbk8gVm57Nk
      xoeZtXTyuQLtukUqFGP8+k32924nU1F44+jD2SHu//62UULVl86/k5m7xoV3/juKma1lJTPL
      aS688w/YefTvs/2Zv7l8OslVcGJ4gFRxcYfJLTUCICW2sTI793xZ8tz+XURdDjfmyrx8sJcd
      rREGRifJ5AvMpe8VpTALOQYTc2RzOeYL1R4zkUiQmE8znUyDUPjCiy/QGQ/Q3dXF3o4Wdu3e
      RdzvxgH8kWbCapmJ2XkO793BpUuX8ATj9PZ0Mzs7SzJbobW5kb09HQxNzeBUSpQqZSzp4tC+
      3XS3t3K4dyeKs4zlQzpYxuLnSCmZG/+UMz/6z7dc47+DYxvcOP3PGTj/f63bSDBXyHNmfOn3
      saUUQDo20nnErqdQGBzo55OL/bRFffzliTPkFT8vbIvzw49Pc200gWHaKIqKS9dwu6o9qePY
      mLZE03V0RcHt0rEsC4nA43Kjai48mopA4NI1VE1DEwLX7euNcglb6BimgTfcxNzECLu2d5Ir
      FHHrLsqVCu0Nft4/c5X9O7ZRNC2a44143dXMDm6XDgLcus6nZ85TtJaeCjmLTIGklMyOfcS5
      t38VYwPKLT1ZJLfO/gvG+7/32ErgSMl7t/oxH+EwuaXMoFalxK13vldrMR5JLpPig4sDfO0L
      zy2opLgipMPQxAzbOlqWjCZsP/oFgi0LN5Nmxz7m/E//Abb59MRFCEXn4Gu/SdvOr6+5/sJQ
      ao4/On/6kdbTrTUCbAFVdXt8vHn8yOobP4BQ6HlE41+MbLKfi+/++lPV+KFqKr3y4W+Smjy9
      tuul5OOhW8v6220pBVBWU3SiRrjcHryujbMtCOWeepTy05z7y1/FrGzdTBiPwrErnH/nvyH/
      YBHxFTCUmmM8vbzJfPO3qPsQirq6yit3qXD6yiBzySSV++bXhWyKdHnlnpTTowP86LPLVO67
      ZPj6DWatld/j9JW+FZ+7GIpe3ehxbIMrH/4jSvnJx7rfZscsp7n43q9jVlZeSVNKyamRlWW3
      3lJmUBSB6nJjlR/wA7JNfnLyNLYDutsDiovXDvXwwfk+FN3Hq0d7yBfKlEo63mCUqxcvMG+o
      HGoPYoWjTFy7wkSqwMFDh8kkE+zZ1smlm8P4VYvhRJbevXvpiLp4/+PzhPbuY3ZqnP7xKZpa
      OnEVS7hsm5Pnz5OVbt480ssnZ84jPRFee2Y3AptTZy+TMSSvPH+EfKFEPj3Lqesj+MNxdkQ1
      +ifmaGzpYPjmNRxFw+32IHQvrx/du3A6JASq7kJKydCl32du/OSTfPs1IzvXx40z/zv7XvqH
      K1oPTGbTjKRXZgzYWiOAUNA8i+wGOjaaN8wXdjYQaN1FWDEoSJ2w18XIyCDpcrXXT6WSlLNT
      zNoR3nzuIHY+RSqXZ6IgeOulo1y4dJmpmSRIh9GpWaZnkwQiUeJBD6Czd8d2jh/ZRyjgRVdV
      LvRV45GlY5GYz9LT3sLUUB92sBWZmmCyAlIKggEvxUyCm9PVTTzN5cGra1y6fpNMchrT28TO
      phCeYJRDrWHad+5FN0s8aO9RFBXN7SU7d41b5/7VBr7pzcfo1T9kbvzEsudJKbkwMbZiC9IW
      UwCBy790SOCdSikAI31XcbX20BkPLXwZmgerXKBULuNIiVBUjHKZUrGA0Nw4jk25XCRXNtm3
      dx8dQcEnlwYWPOfkxesc2d+L3307Sayi8cpzRxntu0IandnZWQINcfwCSqlJJgwPezqb7rr6
      nr94le29u4n63Siai+1tVYcwAYhHLIFVtwcUuHbid3BW4ff/tNB34n/GMh692C+ZJjfnZlZ8
      T/Vb3/rWtx5TrieKUchRTCYWHhQCj9tFKBjE4/ESCXho62xn5OYtGppaaWmIEPC4iUZCBIJR
      gkqJG1NpOttaCATCtPgkl4ZneemZ/YRccG08ya7uNnRpcHMqw7H9u3FrCrpbJ+D30RhwcXUo
      wc6udhobIvj9PiZHRxDBOId370CUM1SEh22tMVzeANmZCfCG6WyMEQ146W5v5MqNEbZ1ddAS
      j+H3+nBrAo/bTTgcxOfzEva6Cfh9C3oof0Mz2ew5Rq/90RN955sFs5JBVd1EW48tORW6Oj1J
      38zKPV631D4AQDE1y+inP621GDUhsm07fed/g3IhsfzJTymaK8grf/U7eIOtD30mpeTfnf+M
      0fmVbwZuqSkQgDsQQtXdtRajJqRmP/5cN34Ay8gxfOXbi87xi4bB2CoaP2xBBVBdbryxTZo3
      cwMRqmB67Ee1FmNTMHb9TzDKD9v4byVnVp1oYsspAECotavWIjxx8oWrVIorX9w9zdhmkfH+
      7z50fCi1+mCpLakA/sZWFG3rleRcK1I65PIXay3GpmLixp/j3JcXybAsRj4vCqDqLoItn59R
      wHLSlCpPPoh9M1PIjJCZuXz371SxQMlcvWl4SyoAQGz70oEjTxsVe3jdkl89NUiH6aF71sDx
      THpNiea2rAK4/CECzQ/nmHna0DxeDGfrV77ZCGZHP8a2qgFC09m1OQRuWQUQQhDfuX+NznFb
      h1BHO9nU4znQPa0UMsOU8pPVaLhifk332NKtxxOOEe7YXmsxNgxPOIajZZEbmrltKyNJTZ3F
      sG2yDzpIrpAtrQAA8d0H0dybtwLJWhGKQtPeo2RmLy9/8ueYdOICJdOguMJY8QfZ8gqguTw0
      7z9WazHWnei2XrzROPn5geVP/hyTTd4gUy6tOdP6llcAgEBzB9HuXbUWY93wxpqI7zqAEILc
      /PI1EBzbIVOoWonSKYPSOhuMbNuhYm6sy5hjSxKph6d6lmkzl176CxUyw2ue/sBWC4hZAiEE
      jb2HKWfmKaXnai3OY6F5vLQefB5F1bDMIpXS8ps7U6MFPh62+IXXo8wlykQDOumZMiUUelpd
      5PIO2YJF2KcwN28SjujMpS12dHhQFUEmbTCdselqcuGoAq8CeUOSSRkIj4aRLHBpBr5wJIhq
      2mQM6GrUSc4bpAqSBr+gjEJ7g46UktHxErpPpzWqMTpRIhB1E3KBhYI0bVSXQj5vMZe12dnl
      xShZDI6XyZkQ9Qmm0zZdLW5yGYPByRKO7iEeURf97o5VZn5+fG0vWzpPxwgAoGg67cdeeWS8
      wGZH0XTannn57ncwSqnbRSkezXhW8mynxmz+vp5SUSgly4ykTL7/9hymUDh/JYcvqPHh6Qwu
      w2Qg6QCSc30Fon4Fw7C5cKPExHCe0USFkXkHTUhCQY3mRjde4XDuVpnyXInBOZPT14souRJ9
      ScnIUBEDyKXKjGckCnDrRg7DpXHpUpa5VIXxeYuxW3lmchYnrxUJKTbXxiqculqgNV4N9Txx
      IUcxYzKYMDg7UKYltvyOfya3toS/jmk8PQoAoLm9dDz7GrrXX2tRVo2i6bQfeQXffY5+ppFb
      tv6xtCwmpg0SGYsbw9WkXmbB5Opwmfm8RanisGNngJ4mHa9PIx7WaW1yEwuo2LcDdPZu83B9
      oEBOqiiGxUhOsr/bS4PL4dKtEqqu4HErYFrMpkzSFYltSOINLmJ3lMMlkEAw6iasOVwZLJEu
      SboadRq9gtsztLtz9dZmN7GIRiVv4QvphAIqmiJJpUzmCxaljEFDo5tQQF22keZya/OQFYry
      dCkAgMsfpOO519F9m6sY26NQNJ22Iy/jb1xYhtQ2S7eLWyzN/IzBCy/HeOlYhJAu8fhUXLqC
      rkhQFHwuhaC/On0IBlSEgKBfRXWp+PRqUEkybaFqCm5dsLNRpaxomIZNtiTxeRQCIReZmRIZ
      R2Nbo4qjCKIBhaBXQXOreDUI+KsN1SjbZMsSr0dhd7ebU+ezZDSN9rDG+HCB4aSFW1MIeBQU
      VSEc0VFLJmf7CmgujX07vEhFobXVQy5R4kJ/CY/30XHAxfLa9gCEtkVrhK0Eq1xi/MwHlNcx
      m/RGoHl8tD3zEt5o/KEop+TkaT77/n/6xGRxLIePz6Q5cDhCzLt1+sax5l8iGTiypmu3zrdc
      JZrHS9fxNwm1bau1KEvijcTpOv4mvljjmrOfrSeKpvDq8diWavxV1v7ungor0FIomk7roRfw
      x1tIXDuLY22SHVWh0LB9Dw079qNoS/8EQnmqf551Q9PWHiG41VR91QhFIdzRQ88XvrYpnOc8
      4RjdL36J+O5Dj2z8AJruf6w04dOjecYzj15DDAwUWEs1rmKuwrXhCsMDeT65nF84tmAAAB45
      SURBVH8ohcti3BoqYNhgVizmc+u3WeHzrb2Q9+emi9G9ftqPvkIxmWDu5mVK8092v0D3+olt
      30ukcztCWdym/dA17iAIddmF8IPYhs2py3lyWYO9h1z0jUi6ojCRE5TmS+Qq0NsbIO4TnLuY
      ZaIsOdyic2G4jO5SOX7Aj1O2eO9CHsWRePwaqApHe9xcuFUCXeFQl45tOXx2o0BPt58bAwX2
      7PBxua9AxA1jGQcpBMd7vZy6licQ1LnVn2U6Izm0w0WmJJieKDJfdGhu85KdLWE4AtWj8Wzv
      6irBBAON8Ii6KY/iqR8B7kcIgT/eQtcLb9Lx3Gv4GpYu5rxeeEJRWg4+z7ZXvka0e9eKGz+A
      29e4aH3d5RifKNG9M8DBHg84kmzRwbYc8jmT/jETvw5XBssIRaG7w8uz+wNcHy3z0pEwYWzS
      hkTakliTl72tGl07grikgy0lioDRyTKOBBSFnk4vx/b6KeVtJJDOWZQMh0N7gwSE5Ppwkb17
      QxzZ7aer3cuxAwGE6VAo26SKkpeOhJiYKGFIwQuHQ9jl1RfOjkXXHhz1uRkB7kcoCoHGNvzx
      VsxinszEELmpMYxi7rFTUEtA1T14I834GzvQPEEUXcWqWEhZLeq20iS/iqLhDbSSX4E7xP34
      3QojcwZq1iQWdFMp20wlLGzNTTSk0tbqoVmtyqBrkM7aRD2CkTmDZNFhuyrAvH9pWf3f4FCJ
      9i4fiflFahQ4kkzGIpmzaQ4rd6+KhVQmEgZKTENXIJO38N3+1KjYpNIGQlO4V4F+VV8VzRUk
      GmwEJlZ34Z1v9rSaQVeLlBKzmKOYmsXIZ5FIrFIRo5jHMQ0c27qnHEIgFAVVd6PobrKJArmZ
      DJYBlaLANjUqi9S51dw6vqifUEuMUFMEl99N8+52PKGlh/xL7/0PTNz8i9V+GyYmyjiaQmOD
      i9RMGVtTiAR1hGUzMmOyo9uLRxNYhs3NCYPd3R7GxksEIm7iIbVaqtQAFw7SpWGWLHwehZuj
      ZRpiLqIBhYpZ9UMK+FXKRZvhGZOmBh2PBm6PSqlo4w+oTE+VcXSNlpDCzfEK2zs9WDZo0mFw
      ymBnt5dSySYU0MjmLUKBlffLsbbn6X7tn/JvPls+beJi1BVgGaSUSOkgbXuBAphli9FzA4xf
      GCQ3s/b05Jpbp+1AN9tf3EO4NfbQ56PX/pirH//Wmu//tLPz6N+j/dDf5v/45D2sRYrgLcfn
      cgq0GoQQCKHC7bm7bdmMnr3F9XcuYhQevwKjVTEZPXuLsfMDtB/qYc+bh/FFA3f3BWJtzz72
      M55moq1HcWkaIY93yUJ4j6KuAKsgOz3PxT/7lNTo7LrfWzqS8QuDJPrH2f/VY3Qd3YlQBN5g
      O55AK+V8PS74QXR3mHB8H5qiEPP516QAnysr0FqRUjJ5dZRP/p+3N6Tx349ZMrjwvZNc+N5J
      bMtGVV00dry8oc/cqkSaDqK5qp6z7aHImu5RV4BlkFIyeKKPs//+I4ziWraM1vJQGD17i09/
      /x2MUoWW7W89meduMVq2f/nuVLE5uDY3+LoCPAIpJUMnr3PlR2dwVlEGab2YG5zms2+/RyCy
      D0+gZfkLPkeoup94572RsSkYQldXvsdyh7oCPIKpa6Nc/cuzrDngdB1IDs9w5fsXae6ujwL3
      09z9Oh7fvdiJoNtD1Lu6HWSoK8CSZBNpLn7vU5xHFK1+UkxcHqaS3Fd3jruPrn2/+NCx3Y2r
      39mvK8AiOLbDpT//9MnN+VfA+Nl5XNqBWouxKYi2HCXS/MxDx3fFm1Z9r7oCLMLo2VskhzdX
      KnLHcihOHEbK2scN1BbBjiP/2aLxE03BEEG3Z1V3qyvAAxjFCtff3ZypyO1iHGF8vkeBhvbj
      xNuPL/qZAA60tK3qfnUFeICRs7eo5NaeZ2ZjEVB4FVXdOvHO64miuul94deW9KgVQrC3uXVV
      /nR1BbgP27QYO7+5M7EZeS/hyDdqLUZN6Nr31wjH9z7ynLg/QEsovOJ71hXgPlJjc+QS6VqL
      8WgkaPZLRJoO11qSJ0ogsp1dx/7+suepisIzbZ0rvm9dAe4jcX1rVGFJ3Jhi/yvfQneHai3K
      E0HVvBx87X9Cc60s39Oe5hYC7pXFCdcV4DZSyocsP6rHQ+PONhq6GxbMK9VgCO8yuWruJ9i0
      Nj+VpTBLBnY5zP5XfqPqqfpUI+h9/tcINx1c8RUeTefZju4VnVtXgNuYZYPM1MIcQt6WCKXJ
      WVJjKYTbTdPudvxhD6rPh9utEGiJ09jTiACCbY1EW+71yIHWOI3bm1AEVfdmVSO+s41wYwDF
      7cbXECIY9xNqi9O0s4VgSwOx9nuK4m9uIN7dgBACbyRAtGNhrEBqdJaW7V9hx5G/s6HvpdZ0
      7v2rdO3/pVWnjTnS3oV7maQDUFeAuxSSOeRDARUKsR2tNHTGEEjK2SJNve23P1KJtYfJJ/Po
      kSh+twWhKD539YeyKyZS9xFrvWexqeRKxHe1owdDtG6PUcyUCTeFyObB7zJRw0FUQPEECEdU
      sjlBY3eE9kM9VDILs5/lZtIIIdh57O/S0ftXNvDN1I7GrtfY99I/XFPOJI+uc7x7+eIpdQW4
      TTG1WHo9h7kbE8yNJIl0NyNNE6ty2ynOsZnunyayowN/yEOgOYpbA0cI0Dw0tAcpZ4uI2w5a
      /vYmXIqNWTZBOswNTWNbDkaxjG3ZVAplHFtWp1qahl0uY+bLqB6d3NQsxdzCAhCldNX3XQiF
      fa/897Tt/PrGvZwaEO94iWfe+O01JQW4w5H2LkLLbIzVnUtuY5QednswcyWkXfWEK84XCDdG
      sCsVnFIJw4ZQWxQqJbITCXRfB4qQ2JYDloFhKgQiHoqJHJgFKgWLYGcEaZrYlQoGNkgoZYo4
      ZZuKtBGZAg7g5NPYrR207BLM9k/ia3jY7l+5LxpNVV0cfO03EYrGxI0/27B39KSINB/myFv/
      DFXzICsmMl9GFstQMZFm9b0hQOgqeFwInxsR8IKuLhgtvLrOyz07+dH1K0s+qx4TfJuBT65x
      5Ydnai3Gigk2hXnjV39uwTHHseg/9bsMX/5/qakL62MQbNjD4Zf/Mb5SGJnKIfOllX0VIRAh
      HyIeRImHEd7qyGE7Dv/u3GeMZxbPEVufAm1RFquOqSgae47/1xx49R+hqGtPF1gr4k3HOdb7
      LTw3TZyRGWRuhY0fQEpkpoAzMI11+ibWtTFkoYyqKLzVuxdliXVEXQFuo3tX12B0r5sF71QI
      1pTfVgiEIlDU1f0UmmfxwhFCKHT0/jzHv/l7BCI71iDQk0cRbnY0/zUOR/9LtDkb7Md0QXcc
      5Ewa68wt7BsTNHv8vLjEgriuALfxhFZeadIVj9PUGeH+TtgdixKOrb5apR4MEm0O0LhrdU5c
      3uDSwR9CCMKN+zn+c39A94G/jqKsfSG50QS9PRzt/HV6wt9ErLenq5Q4kymss7c4Hm2hPfzw
      fkx9EXybQHzl/iOxbU3olSyuYIBwSwRFOCRnqovS1sM7oVJkZmCOtkNdSMti+uoIli1o2d+F
      cEySQyli3Q1oqiQxlluTvP6G5WNgdXeQvS/+t7T0fIn+U79LembzeLmqup+dO3+FNuc5VLl8
      GaTHomwirozyldY2vp3PYdj3wlvrI8BtPEHvIzO03U82MU9yYBKpaAgB/ug9K41VsRCKwNUY
      x6NaCLeXQMiF6vVh5zJMXZsAt44QAl9s7fXMoh3xFZ0nhCDWeozj3/w9Dn3xt/FHaltYXHMF
      6Tn0n/CFN75Np3x54xv/HRxJbCLLV33NC3b16yPAbYQiiHbEmbo2uuJrvLEgRr6EE7mnOGah
      hBLyohrzlMsq+cwcxbyJbdvo4TjRLgWhebAKJZzoAwqnakSaA6QnH+2QJ1SFaFfjI895+Pup
      tO/6Oq3b32J27BOGr3yb+amzy9YgWy+8wQ7ad32dzr2/gKvsw746As6Tt1TtKgqe18KcsqrZ
      /Opm0PsYPTfA+T/5ZNnzhKpUF1oouP0urIqJbTsIJIruQlXAKBmobheqCkaxuomlaBq6W6FS
      NHH73dXrLAchqgqo+QK4RIV85tGhmJH2Bl79ez+DUFY2Z5ZSglNGWjmkXZ2qSaCYmyExepKp
      oZ9SSA+t6F6rQXMFaep6ldYdXyPW9iya7kOWKljnBsB88lk27mAh+SFpbtiF+ghwP8297Wge
      Hav86HIP8q6VwqGSv7chJQG7YnDnp73//wCOZVG5nf17wXWymhnOyGZZuN+7OJ1HdyzZ+KVj
      4VSmsQsD2MVh7OIoTmUanMWVqlkTtOzbTanSQ2puhGwuS75YwjRNHHvlMdFCqOjuEL5QJ7HW
      Z4m2HiPefhyhaHc3p6TjYF0bq2njB9AQfEWJUnSJugLcj9vvoaW3g/GL698brhcun5u2/Qs9
      HaW0cUoTmOmzWJkLOOVJVmFAR5rzeBRoa2qgrakBKTQsQth6J4aIYZgGZjmDbZVwbAOh6Ciq
      hu6O4PJE8Abb8QZa8PhbHumy7IwnYZNE27kd+Kavta4AD7L9pb1MXB5G1mB+uhLaD27DE6ya
      W6V0sHPXqEx/H7s4BHJ9elYhLXRS6EYKr+pHi72Aq/GXUNzNay7mJ8sGzganlVwtvkyprgAP
      Eu2I07q/i8nLI7UW5SF0r4vdXzyIlBIrewVj+i+wi4Mb+kxpFzDn3sWcew+94Qu4W7+Joq8u
      vkFKWe39a5Bd75HIuhVoUfZ/5RgzNyaxKpukquRtdr92EJfHoDz6/2GmTvJk/X0kZvJDrPQ5
      3K3fQI+/vvJgHMvBmUptrHhrpL4PsAjeiJ99X15b4eWNItrVSOc+g8L138JMnaBWzm7SzlMe
      /0OKA/8cx1xZYRBnJv347g0bRN0MugTSkZz/0xObIkuEO6Dz3DcsdPODWouyAKFH8W7726j+
      3Y9cG1jnB5GZ1efufxLUR4AlEIrg0DefJ9q5sh3XjULVHPY9P7DpGj+ANOcpDvyvWOnTS59j
      WFWX5kU/lExMjXB1bBxHSuaSU1wcHMR6wADRPzq84G+znCNbWXo9USzkKK1wvVFXgEeguXRe
      +BtvEGlvqMnzFdVh//HrRGLDNXn+inAMSiP/GiP5EYtNJmSxvOT0Z+jWWc5NZ3EpkmxymB9f
      HiCgVvjByVPVW1tlPjhzgncvX0ZKh1MXP2VsPsenJ/+M//PHP2UiU2B07AanB4aQUjIy2s/H
      fdf58U++w++991NmChUGhq9x6tYg0jaYSs1x/tbCipt1BVgGt9/Di7/yJZp3tz/Z5wZ0Dn1h
      gIaWJ1vQe01Ii/LYt7HSDwcUyfzSddQ+G53hZ48cZFd7JzdvXuel519hR/dednuqwStvn3yf
      ffuO0RL08enp9wi37eGz8x/T1d7N8WdeIiZTnBzL4i2O8/HVC5yfMTjY0caOzh28+uzL6IUx
      riUlMWuKkzeG+L+//z0i0YUuJHUFWAEun5vn/vrr7HrtwKr99tdCpKOBZ38mRzS+heqCSZvS
      6L/BKjywZiotvbcd0WD2dmHsWCTA7HwWpE3i9nLBFC4avC50TWU2m6bvxgWE7r2dIFhSLGQY
      mx5lIF3GKWZpbW4hHAyhiurnpVKBxoZG2lubSc1nOHLwBXoaFnr91hVghaiayt63jvDi3/wS
      oeb1zfNz9xm6Su8bh3j+54O4nKXn1ZsWx6A09K9wjHvhh9JcuvL7F194mY9PvsN3T56gY8dz
      zA2e5E8/+AktvS8AsL+tkT/75ANKjs7rx45jmxY+b4DWrv1M3jxBydfOgeYQQujs3nOE9OhF
      fnzmHJ07dnLlwqeokW2kxi/yw/MjvPbMHlrCDycSq1uB1oBjOwyf6mfgRB/F+cWySawOza3T
      cbiHXa8dwO3OUrjx2+BsDpeBtaCFDuHd/l8ghIp1ZQQ5l621SEtSV4DHwKqYzNyaYvizflKj
      s9jG0r3dgwhFEIiH6TyynfaD2/BFA0jHpDjwu9j5/g2U+sng6fyPccVfxbo6gpytK8BTjZQS
      s2QwPz7H/Ngs2el5SpkiRrGCbVYDZHSvG0/QSyAeJtrRQLSrEV/Yj6Kp9+6ROkl59F/X+Nus
      D0IN4N/7mzgDOeT04hkZNgN1BdgkSLtI/tpvIK3N21uuFr3xTVzmGzgja6u28/7507x+5Dmm
      ZyeJxtpwL+F5cee80cQkXc2ri62u+wJtEoy5D56qxg9gJj9Bjx5b9rxCdpb3Ll+hLF185UAP
      Pzh7iV0dXfzo1Ifovgg+M4NZmWfCaaXZGscOtHDjxlUyhsWLvTv50akPCUdbyKUTNPpd/Pmp
      09hS8DPPP893PnyfqEfl4JG32N3wcMhr3Qq0CZBOBWP23VqLsf44ZczSp8ueZpgVbAnjY0O8
      d72fr73yJY717uPIrr283LuLQrFAsHkXk8OXuDE1R4tfx5AOs8kpXMFWjuzay5FtneSKBYaH
      +zh85A2+ubeZjwam6OzawzeeO8DwVHLRZ9cVYBNgps8izc07T34czPIZpPboOLf+4QE627rw
      6Ro7mmKcun6VqXQOaVUYT972IhUu/LJAyRUmO3UTV6yLiNeNBIxKkUSmOnrGG5rou3mZT26O
      09scWbZcUn0NUGOkdKqWn9y1WouyYejlr6FVdi/5uWMb3JqYpCHSQCQUIJGYJBhpgkqOZNmh
      MeDF4/VjlLIYioewW2NwfAR/MEosGCKbmaUsPITcGkGfj8TsJJbqpy0cIG9a+HWFoikILJJM
      rK4ANcYxkuT7/sclY3bvcOvmLLcSZQ4faKYl4mJ8Kk9n66OL5aXm8rjDAfw6gMP4dImOFj9T
      U3nirQEWNgfJ+HSRjpaHQxpL+RIfnp1F0XWePxTh07OzxFtDHNkVXjLl4P0ocifu7ObMXl2f
      AtUYK3dt2cYPMDRV4o3jbXz68TAzeRvbkczO5LjWP8tgosz5i5OcvJpCSsmly1N8eHGOH/6w
      j++8M07WcEjP5fiXf9jH6f40liMRUnL+whQnr6ZwJBQyBf7lH17jxJUU6VSev/x4jPFkVa7U
      TJ7WHY289VIr2akc7bsaiTgl3j63+Lz6QRxlFDybs5+tK0ANkVJi5fpWfL6iqRzfH2E4UaZv
      YJ7RwVmuzzn4KzlmpRdXOs3Z/jlmpZdneyPs3hHjtZc6CLkUInE/h/c08lxvhJsD80yPzpJU
      ffhKeQaTJv6wj8N7GnjpQIz3Tyd47flWPj0zcTt1j8Op0xP89NT03SwXO3qbqMyv0MdfGjiR
      ekRYnYeQ2IVVZKCQktGpIvFINden4nLx4qE40rS40jfLVBk0y8bv1fG4VBQhkFLedVMWgrv/
      NyoW167PMJaR+G+nDr37uSJwaSqauBN3pvDCc+186YUW7pjii9kS0uXCth2cFcyiZSAFgdXn
      Tt1QVKWuALVE2gWksbJMCVG/wtsfjSKiEbY36GxrD9LYFMCvC5q2NXG0042iafTsbMKcS/Le
      +Vn27G3i0pkxcqYEVHqaNM7cyNDZHqRzVzMHW1woLhWfrgCC3nYvJ67O8/yeKD/4YITde5tR
      BQRCXuKB6pZRMOLh5tUEH17O8OUXW/jeD25SWEHsiVMZR93ZytpSaG8AUqIUZuqL4Fpi5W9S
      vPk7tRbjMZAUihZ+3/L5PRV3M/69/xhncBpnrPYxDqKYRk3010eAWuKssPffvIgVNX4AaRXA
      LqL0NCOij7ZebTw26twQQsq6AtQSaa1voHihtB5pXCTTiTwl814Yo2PZlIzHy+ogHQPplBGK
      grqvE7HCTNzrjktDKycQVtXCVVeAGiLt4rre78PTU1RyZWZy9xTBrhhMJFee4zM3meSTmwXu
      nxjnk1nODT1m3IO0kE5VLqFrqAe6n7wSeHS0tgBiauzuobozXC1xVpIK9x7/9jtXiYRcjOUk
      AWy+/NXdXLswwXSyxOtv7gKgkCswVvZw7tQopq7zcm+IvlkYvjFFsgh6wIvfMnjh5U5+9NMh
      9ra4uTRtsHt7A4e3B7lwJcFk0UcyWeCD/hSpsuQbR6phhD94+yZSdXP8xRbeeXsQNJWXX9lG
      R2Ql0yAH5L14CeHSUA9tw+4ffyLxAiLoRd3bifjwHe7X7voIUEtWmlntNrGmIF9/qZXubQ0c
      3+knmTXJlW2EaTKerCqTIyW2UcZw+fnGa13EvAqmLUmV4JtvbqOSLWLZEgmYpkM06kVaDs7t
      VCR7d8Y4/mwHLtvCkDCeuDdNa27wUrFtnFSG/pTEo9j0j690FBMgFjY3oamo+7pQdrWBtkFN
      UQiUzjjqM9sR+TRMTS74uK4ANUQoj1fJsVyokDPArT/wM2puRDHP+2emyJRsQOBXHd45OQ5u
      N17V4aPPJhmeKWNJQXPMw/DEwl54ZjaP5tLR7kvDrukqQdVhzHCxK6YRaQjS275C275QgIcV
      XgiB2t6AdnQnojHEst5rq0BEA6jP9KBsb6nWdOi/vqD3h7ovUE0x5t6nPPbtFZ9vWQ6aKrAc
      UKhuWFXKFoqqoGkK0pEoCkgEQkqKFRufR8ORoApJoWzj9Wh3P3PpKpoKxZKNx6OhqQLHcZAI
      FKBQtnDpKroqsGU1v3/Fkvg9KpblUDEdfF5tRf5AKB4C+/4Jir50LTYpJTJfxhmdRc5l1pb9
      UQhELIDSEUdE/Pcy1lUq8Kd/DKWFsdb1NUANEXp0Vedrt6cJ1SjK6g/r9d43/15QNEMQ8FXP
      Vx74e+H/IeC/93/lvtKXgftMnBqAqqLfPqTrKrq+8imcUD0I9dGLXiEEIuhF7OuEUjNOKoec
      z1dzC5nW4iWVFFGtuRbwIiJ+lIYgwrNIVczE9EON/+73qlMbFHdzrUV4Ygg9glBWtmcghACf
      G9Xnho440nHAsMCykXeqywgQmga6Crq6aOHwBYyPL3q4rgA1RHHFQXGvyBv0cXAcg3c/nedL
      L9VO4VRv9/InLYFQFLjdq69piSAlzCQW/aiuALVEqKi+Huz89XW/tSxX+MGn01hS4We+0ITt
      SIYG5ugbzRFvj6EXCwxMFdm7PcSlwQJG2aAp5sEd9PPG0fVPCKz61q4Aj41lQXrxiLu6FaiG
      CCFQ/Ts35N6mI1EFjI2nyZarc2fbkQhF4eqNFNPTeY6/tI2wDvsPtNDU4OWrr3VTya/v5lwV
      gRrYtQH3XSH5PDiL72TXFaDGaKEDG3LfoaszxHfEifnvDfJXBrMc3hVBEeANeGgILJwAbJSf
      puJuQnG3bNDdV0BhaZeTuhm0xkjHoHD9WziVteXOWfq+DheuzRFvCtDS4CGXt1Bsk+GkSWeT
      FxVJMOTBKhtYikalbBALe0hlysTCnnWVxdX8dTxtP7+u91wVAzfhg/cX/ai+BqgxQnGhRY5h
      JH60zvdVOHKg6e7fsbALcPFMbOF5qteFG/C7PbfPW9/GDwp69Nl1vucqeUQXX58CbQL0hldA
      rMxEuNVQg3tQPE+2tsJqqCvAJkB1N6OFD9dajA1A4Gp8EyFq3Mz0pTuXugJsEtzNX+Vp+zlU
      Xw9acH+txQDP0v5KT9cb38Io3m702Au1FmMdEbj///bu37WJMI7j+Pt57rncjyRNSRtKrK02
      VRCsg4iDiAhCcbQuTqLgpIJu/j/ODoI6iIgOorN1U4tDBFtRB9NYmzS5PA5B2prYEhJyT5Ln
      NYa75Bnuk5Dnvvf95i8hpAF/M8daB2P8ZQNgCCEEXv4yQsX9uGBvqPFTqDEDvv0BPA/C9nVI
      NgAGkYksXn4p7mV0Tag0/vSVuJexTQiYaH932wbAMO7EeVTGrCn1HREO/sxVZCK7/7H9IgTk
      288NsAEwjBACf/Y60u9s0IMpErlF3PH9ZwL03fTBtj2JbAAMJFWKYO4WQqXjXkpHVOYkXpx3
      fPeSycBkruVlGwBDOX6eoHAHnNZuzSZy0scJDt1AdPicc99ICUdbC/JsAAymkgXCwl3jfwlU
      eoFw7ibCMaz357/m5iHYvRtkA2A4lZonPHIv3mrKPbjZswSF2+Zf/NDcDl3YXX1rq0EHRKNe
      plK8T339XdxLaZI+Xn6JRO5C/KUOnajV4NFDWG92wbABGCBaR2x9f0l17XGsk+RleJhg5hpO
      OBvbGrryuQgvnoPWNgCDqFH9RuXLA+ql5b5+rnCSJKYuNgvcuuxpFCut4c1r+PjeBmBQaa2J
      Nlaorj0h+vUB6K557V6Ek8KdPEcit4h0/19XM1BqNXj21AZgGES/i2z9eEW9tIyul3r0rhIZ
      zuKOn8bNnhmeC3+nctkGYJjoaJNo4xO1n2+JNlZoVFb3P2kn6eMkC6jUMVTmBNI/YO6+fo/Y
      AAwprTU0Nok2V2lUv6JrJXS9jG5UmgcIByEDhEojvUmkN9Vs1CXUdjvBEWADYI20AdrAtaze
      swGwRpoNgDXSbACskfYHN8ydp10bUagAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='What time of the day ?' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
